// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: couchbase/admin/search/v1/search.proto

package admin_search_v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Index struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Params        map[string][]byte      `protobuf:"bytes,2,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	PlanParams    map[string][]byte      `protobuf:"bytes,3,rep,name=plan_params,json=planParams,proto3" json:"plan_params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	SourceName    *string                `protobuf:"bytes,4,opt,name=source_name,json=sourceName,proto3,oneof" json:"source_name,omitempty"`
	SourceParams  map[string][]byte      `protobuf:"bytes,5,rep,name=source_params,json=sourceParams,proto3" json:"source_params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	SourceType    *string                `protobuf:"bytes,6,opt,name=source_type,json=sourceType,proto3,oneof" json:"source_type,omitempty"`
	SourceUuid    *string                `protobuf:"bytes,7,opt,name=source_uuid,json=sourceUuid,proto3,oneof" json:"source_uuid,omitempty"`
	Type          string                 `protobuf:"bytes,8,opt,name=type,proto3" json:"type,omitempty"`
	Uuid          string                 `protobuf:"bytes,9,opt,name=uuid,proto3" json:"uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Index) Reset() {
	*x = Index{}
	mi := &file_couchbase_admin_search_v1_search_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Index) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Index) ProtoMessage() {}

func (x *Index) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_search_v1_search_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Index.ProtoReflect.Descriptor instead.
func (*Index) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_search_v1_search_proto_rawDescGZIP(), []int{0}
}

func (x *Index) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Index) GetParams() map[string][]byte {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *Index) GetPlanParams() map[string][]byte {
	if x != nil {
		return x.PlanParams
	}
	return nil
}

func (x *Index) GetSourceName() string {
	if x != nil && x.SourceName != nil {
		return *x.SourceName
	}
	return ""
}

func (x *Index) GetSourceParams() map[string][]byte {
	if x != nil {
		return x.SourceParams
	}
	return nil
}

func (x *Index) GetSourceType() string {
	if x != nil && x.SourceType != nil {
		return *x.SourceType
	}
	return ""
}

func (x *Index) GetSourceUuid() string {
	if x != nil && x.SourceUuid != nil {
		return *x.SourceUuid
	}
	return ""
}

func (x *Index) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Index) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

// CreateIndexRequest does not use Index because of the uuid field.
type CreateIndexRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Params        map[string][]byte      `protobuf:"bytes,2,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	PlanParams    map[string][]byte      `protobuf:"bytes,3,rep,name=plan_params,json=planParams,proto3" json:"plan_params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	PrevIndexUuid *string                `protobuf:"bytes,4,opt,name=prev_index_uuid,json=prevIndexUuid,proto3,oneof" json:"prev_index_uuid,omitempty"`
	SourceName    *string                `protobuf:"bytes,5,opt,name=source_name,json=sourceName,proto3,oneof" json:"source_name,omitempty"`
	SourceParams  map[string][]byte      `protobuf:"bytes,6,rep,name=source_params,json=sourceParams,proto3" json:"source_params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	SourceType    *string                `protobuf:"bytes,7,opt,name=source_type,json=sourceType,proto3,oneof" json:"source_type,omitempty"`
	SourceUuid    *string                `protobuf:"bytes,8,opt,name=source_uuid,json=sourceUuid,proto3,oneof" json:"source_uuid,omitempty"`
	Type          string                 `protobuf:"bytes,9,opt,name=type,proto3" json:"type,omitempty"`
	BucketName    *string                `protobuf:"bytes,10,opt,name=bucket_name,json=bucketName,proto3,oneof" json:"bucket_name,omitempty"`
	ScopeName     *string                `protobuf:"bytes,11,opt,name=scope_name,json=scopeName,proto3,oneof" json:"scope_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateIndexRequest) Reset() {
	*x = CreateIndexRequest{}
	mi := &file_couchbase_admin_search_v1_search_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateIndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIndexRequest) ProtoMessage() {}

func (x *CreateIndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_search_v1_search_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIndexRequest.ProtoReflect.Descriptor instead.
func (*CreateIndexRequest) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_search_v1_search_proto_rawDescGZIP(), []int{1}
}

func (x *CreateIndexRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateIndexRequest) GetParams() map[string][]byte {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *CreateIndexRequest) GetPlanParams() map[string][]byte {
	if x != nil {
		return x.PlanParams
	}
	return nil
}

func (x *CreateIndexRequest) GetPrevIndexUuid() string {
	if x != nil && x.PrevIndexUuid != nil {
		return *x.PrevIndexUuid
	}
	return ""
}

func (x *CreateIndexRequest) GetSourceName() string {
	if x != nil && x.SourceName != nil {
		return *x.SourceName
	}
	return ""
}

func (x *CreateIndexRequest) GetSourceParams() map[string][]byte {
	if x != nil {
		return x.SourceParams
	}
	return nil
}

func (x *CreateIndexRequest) GetSourceType() string {
	if x != nil && x.SourceType != nil {
		return *x.SourceType
	}
	return ""
}

func (x *CreateIndexRequest) GetSourceUuid() string {
	if x != nil && x.SourceUuid != nil {
		return *x.SourceUuid
	}
	return ""
}

func (x *CreateIndexRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CreateIndexRequest) GetBucketName() string {
	if x != nil && x.BucketName != nil {
		return *x.BucketName
	}
	return ""
}

func (x *CreateIndexRequest) GetScopeName() string {
	if x != nil && x.ScopeName != nil {
		return *x.ScopeName
	}
	return ""
}

type CreateIndexResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateIndexResponse) Reset() {
	*x = CreateIndexResponse{}
	mi := &file_couchbase_admin_search_v1_search_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIndexResponse) ProtoMessage() {}

func (x *CreateIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_search_v1_search_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIndexResponse.ProtoReflect.Descriptor instead.
func (*CreateIndexResponse) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_search_v1_search_proto_rawDescGZIP(), []int{2}
}

type UpdateIndexRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Index         *Index                 `protobuf:"bytes,1,opt,name=index,proto3" json:"index,omitempty"`
	BucketName    *string                `protobuf:"bytes,2,opt,name=bucket_name,json=bucketName,proto3,oneof" json:"bucket_name,omitempty"`
	ScopeName     *string                `protobuf:"bytes,3,opt,name=scope_name,json=scopeName,proto3,oneof" json:"scope_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateIndexRequest) Reset() {
	*x = UpdateIndexRequest{}
	mi := &file_couchbase_admin_search_v1_search_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateIndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIndexRequest) ProtoMessage() {}

func (x *UpdateIndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_search_v1_search_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIndexRequest.ProtoReflect.Descriptor instead.
func (*UpdateIndexRequest) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_search_v1_search_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateIndexRequest) GetIndex() *Index {
	if x != nil {
		return x.Index
	}
	return nil
}

func (x *UpdateIndexRequest) GetBucketName() string {
	if x != nil && x.BucketName != nil {
		return *x.BucketName
	}
	return ""
}

func (x *UpdateIndexRequest) GetScopeName() string {
	if x != nil && x.ScopeName != nil {
		return *x.ScopeName
	}
	return ""
}

type UpdateIndexResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateIndexResponse) Reset() {
	*x = UpdateIndexResponse{}
	mi := &file_couchbase_admin_search_v1_search_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIndexResponse) ProtoMessage() {}

func (x *UpdateIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_search_v1_search_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIndexResponse.ProtoReflect.Descriptor instead.
func (*UpdateIndexResponse) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_search_v1_search_proto_rawDescGZIP(), []int{4}
}

type GetIndexRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	BucketName    *string                `protobuf:"bytes,2,opt,name=bucket_name,json=bucketName,proto3,oneof" json:"bucket_name,omitempty"`
	ScopeName     *string                `protobuf:"bytes,3,opt,name=scope_name,json=scopeName,proto3,oneof" json:"scope_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetIndexRequest) Reset() {
	*x = GetIndexRequest{}
	mi := &file_couchbase_admin_search_v1_search_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetIndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIndexRequest) ProtoMessage() {}

func (x *GetIndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_search_v1_search_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIndexRequest.ProtoReflect.Descriptor instead.
func (*GetIndexRequest) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_search_v1_search_proto_rawDescGZIP(), []int{5}
}

func (x *GetIndexRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetIndexRequest) GetBucketName() string {
	if x != nil && x.BucketName != nil {
		return *x.BucketName
	}
	return ""
}

func (x *GetIndexRequest) GetScopeName() string {
	if x != nil && x.ScopeName != nil {
		return *x.ScopeName
	}
	return ""
}

type GetIndexResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Index         *Index                 `protobuf:"bytes,1,opt,name=index,proto3" json:"index,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetIndexResponse) Reset() {
	*x = GetIndexResponse{}
	mi := &file_couchbase_admin_search_v1_search_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIndexResponse) ProtoMessage() {}

func (x *GetIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_search_v1_search_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIndexResponse.ProtoReflect.Descriptor instead.
func (*GetIndexResponse) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_search_v1_search_proto_rawDescGZIP(), []int{6}
}

func (x *GetIndexResponse) GetIndex() *Index {
	if x != nil {
		return x.Index
	}
	return nil
}

type ListIndexesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BucketName    *string                `protobuf:"bytes,1,opt,name=bucket_name,json=bucketName,proto3,oneof" json:"bucket_name,omitempty"`
	ScopeName     *string                `protobuf:"bytes,2,opt,name=scope_name,json=scopeName,proto3,oneof" json:"scope_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListIndexesRequest) Reset() {
	*x = ListIndexesRequest{}
	mi := &file_couchbase_admin_search_v1_search_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListIndexesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIndexesRequest) ProtoMessage() {}

func (x *ListIndexesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_search_v1_search_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIndexesRequest.ProtoReflect.Descriptor instead.
func (*ListIndexesRequest) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_search_v1_search_proto_rawDescGZIP(), []int{7}
}

func (x *ListIndexesRequest) GetBucketName() string {
	if x != nil && x.BucketName != nil {
		return *x.BucketName
	}
	return ""
}

func (x *ListIndexesRequest) GetScopeName() string {
	if x != nil && x.ScopeName != nil {
		return *x.ScopeName
	}
	return ""
}

type ListIndexesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Indexes       []*Index               `protobuf:"bytes,1,rep,name=indexes,proto3" json:"indexes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListIndexesResponse) Reset() {
	*x = ListIndexesResponse{}
	mi := &file_couchbase_admin_search_v1_search_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListIndexesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIndexesResponse) ProtoMessage() {}

func (x *ListIndexesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_search_v1_search_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIndexesResponse.ProtoReflect.Descriptor instead.
func (*ListIndexesResponse) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_search_v1_search_proto_rawDescGZIP(), []int{8}
}

func (x *ListIndexesResponse) GetIndexes() []*Index {
	if x != nil {
		return x.Indexes
	}
	return nil
}

type DeleteIndexRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	BucketName    *string                `protobuf:"bytes,2,opt,name=bucket_name,json=bucketName,proto3,oneof" json:"bucket_name,omitempty"`
	ScopeName     *string                `protobuf:"bytes,3,opt,name=scope_name,json=scopeName,proto3,oneof" json:"scope_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteIndexRequest) Reset() {
	*x = DeleteIndexRequest{}
	mi := &file_couchbase_admin_search_v1_search_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteIndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteIndexRequest) ProtoMessage() {}

func (x *DeleteIndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_search_v1_search_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteIndexRequest.ProtoReflect.Descriptor instead.
func (*DeleteIndexRequest) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_search_v1_search_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteIndexRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeleteIndexRequest) GetBucketName() string {
	if x != nil && x.BucketName != nil {
		return *x.BucketName
	}
	return ""
}

func (x *DeleteIndexRequest) GetScopeName() string {
	if x != nil && x.ScopeName != nil {
		return *x.ScopeName
	}
	return ""
}

type DeleteIndexResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteIndexResponse) Reset() {
	*x = DeleteIndexResponse{}
	mi := &file_couchbase_admin_search_v1_search_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteIndexResponse) ProtoMessage() {}

func (x *DeleteIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_search_v1_search_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteIndexResponse.ProtoReflect.Descriptor instead.
func (*DeleteIndexResponse) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_search_v1_search_proto_rawDescGZIP(), []int{10}
}

type AnalyzeDocumentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Doc           []byte                 `protobuf:"bytes,2,opt,name=doc,proto3" json:"doc,omitempty"`
	BucketName    *string                `protobuf:"bytes,3,opt,name=bucket_name,json=bucketName,proto3,oneof" json:"bucket_name,omitempty"`
	ScopeName     *string                `protobuf:"bytes,4,opt,name=scope_name,json=scopeName,proto3,oneof" json:"scope_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnalyzeDocumentRequest) Reset() {
	*x = AnalyzeDocumentRequest{}
	mi := &file_couchbase_admin_search_v1_search_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnalyzeDocumentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzeDocumentRequest) ProtoMessage() {}

func (x *AnalyzeDocumentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_search_v1_search_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzeDocumentRequest.ProtoReflect.Descriptor instead.
func (*AnalyzeDocumentRequest) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_search_v1_search_proto_rawDescGZIP(), []int{11}
}

func (x *AnalyzeDocumentRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AnalyzeDocumentRequest) GetDoc() []byte {
	if x != nil {
		return x.Doc
	}
	return nil
}

func (x *AnalyzeDocumentRequest) GetBucketName() string {
	if x != nil && x.BucketName != nil {
		return *x.BucketName
	}
	return ""
}

func (x *AnalyzeDocumentRequest) GetScopeName() string {
	if x != nil && x.ScopeName != nil {
		return *x.ScopeName
	}
	return ""
}

type AnalyzeDocumentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Analyzed      []byte                 `protobuf:"bytes,2,opt,name=analyzed,proto3" json:"analyzed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnalyzeDocumentResponse) Reset() {
	*x = AnalyzeDocumentResponse{}
	mi := &file_couchbase_admin_search_v1_search_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnalyzeDocumentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzeDocumentResponse) ProtoMessage() {}

func (x *AnalyzeDocumentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_search_v1_search_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzeDocumentResponse.ProtoReflect.Descriptor instead.
func (*AnalyzeDocumentResponse) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_search_v1_search_proto_rawDescGZIP(), []int{12}
}

func (x *AnalyzeDocumentResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AnalyzeDocumentResponse) GetAnalyzed() []byte {
	if x != nil {
		return x.Analyzed
	}
	return nil
}

type GetIndexedDocumentsCountRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	BucketName    *string                `protobuf:"bytes,3,opt,name=bucket_name,json=bucketName,proto3,oneof" json:"bucket_name,omitempty"`
	ScopeName     *string                `protobuf:"bytes,4,opt,name=scope_name,json=scopeName,proto3,oneof" json:"scope_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetIndexedDocumentsCountRequest) Reset() {
	*x = GetIndexedDocumentsCountRequest{}
	mi := &file_couchbase_admin_search_v1_search_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetIndexedDocumentsCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIndexedDocumentsCountRequest) ProtoMessage() {}

func (x *GetIndexedDocumentsCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_search_v1_search_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIndexedDocumentsCountRequest.ProtoReflect.Descriptor instead.
func (*GetIndexedDocumentsCountRequest) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_search_v1_search_proto_rawDescGZIP(), []int{13}
}

func (x *GetIndexedDocumentsCountRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetIndexedDocumentsCountRequest) GetBucketName() string {
	if x != nil && x.BucketName != nil {
		return *x.BucketName
	}
	return ""
}

func (x *GetIndexedDocumentsCountRequest) GetScopeName() string {
	if x != nil && x.ScopeName != nil {
		return *x.ScopeName
	}
	return ""
}

type GetIndexedDocumentsCountResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         uint64                 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetIndexedDocumentsCountResponse) Reset() {
	*x = GetIndexedDocumentsCountResponse{}
	mi := &file_couchbase_admin_search_v1_search_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetIndexedDocumentsCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIndexedDocumentsCountResponse) ProtoMessage() {}

func (x *GetIndexedDocumentsCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_search_v1_search_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIndexedDocumentsCountResponse.ProtoReflect.Descriptor instead.
func (*GetIndexedDocumentsCountResponse) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_search_v1_search_proto_rawDescGZIP(), []int{14}
}

func (x *GetIndexedDocumentsCountResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type PauseIndexIngestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	BucketName    *string                `protobuf:"bytes,2,opt,name=bucket_name,json=bucketName,proto3,oneof" json:"bucket_name,omitempty"`
	ScopeName     *string                `protobuf:"bytes,3,opt,name=scope_name,json=scopeName,proto3,oneof" json:"scope_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PauseIndexIngestRequest) Reset() {
	*x = PauseIndexIngestRequest{}
	mi := &file_couchbase_admin_search_v1_search_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PauseIndexIngestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseIndexIngestRequest) ProtoMessage() {}

func (x *PauseIndexIngestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_search_v1_search_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseIndexIngestRequest.ProtoReflect.Descriptor instead.
func (*PauseIndexIngestRequest) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_search_v1_search_proto_rawDescGZIP(), []int{15}
}

func (x *PauseIndexIngestRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PauseIndexIngestRequest) GetBucketName() string {
	if x != nil && x.BucketName != nil {
		return *x.BucketName
	}
	return ""
}

func (x *PauseIndexIngestRequest) GetScopeName() string {
	if x != nil && x.ScopeName != nil {
		return *x.ScopeName
	}
	return ""
}

type PauseIndexIngestResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PauseIndexIngestResponse) Reset() {
	*x = PauseIndexIngestResponse{}
	mi := &file_couchbase_admin_search_v1_search_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PauseIndexIngestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseIndexIngestResponse) ProtoMessage() {}

func (x *PauseIndexIngestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_search_v1_search_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseIndexIngestResponse.ProtoReflect.Descriptor instead.
func (*PauseIndexIngestResponse) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_search_v1_search_proto_rawDescGZIP(), []int{16}
}

type ResumeIndexIngestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	BucketName    *string                `protobuf:"bytes,2,opt,name=bucket_name,json=bucketName,proto3,oneof" json:"bucket_name,omitempty"`
	ScopeName     *string                `protobuf:"bytes,3,opt,name=scope_name,json=scopeName,proto3,oneof" json:"scope_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResumeIndexIngestRequest) Reset() {
	*x = ResumeIndexIngestRequest{}
	mi := &file_couchbase_admin_search_v1_search_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResumeIndexIngestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResumeIndexIngestRequest) ProtoMessage() {}

func (x *ResumeIndexIngestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_search_v1_search_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResumeIndexIngestRequest.ProtoReflect.Descriptor instead.
func (*ResumeIndexIngestRequest) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_search_v1_search_proto_rawDescGZIP(), []int{17}
}

func (x *ResumeIndexIngestRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ResumeIndexIngestRequest) GetBucketName() string {
	if x != nil && x.BucketName != nil {
		return *x.BucketName
	}
	return ""
}

func (x *ResumeIndexIngestRequest) GetScopeName() string {
	if x != nil && x.ScopeName != nil {
		return *x.ScopeName
	}
	return ""
}

type ResumeIndexIngestResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResumeIndexIngestResponse) Reset() {
	*x = ResumeIndexIngestResponse{}
	mi := &file_couchbase_admin_search_v1_search_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResumeIndexIngestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResumeIndexIngestResponse) ProtoMessage() {}

func (x *ResumeIndexIngestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_search_v1_search_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResumeIndexIngestResponse.ProtoReflect.Descriptor instead.
func (*ResumeIndexIngestResponse) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_search_v1_search_proto_rawDescGZIP(), []int{18}
}

type AllowIndexQueryingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	BucketName    *string                `protobuf:"bytes,2,opt,name=bucket_name,json=bucketName,proto3,oneof" json:"bucket_name,omitempty"`
	ScopeName     *string                `protobuf:"bytes,3,opt,name=scope_name,json=scopeName,proto3,oneof" json:"scope_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AllowIndexQueryingRequest) Reset() {
	*x = AllowIndexQueryingRequest{}
	mi := &file_couchbase_admin_search_v1_search_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AllowIndexQueryingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllowIndexQueryingRequest) ProtoMessage() {}

func (x *AllowIndexQueryingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_search_v1_search_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllowIndexQueryingRequest.ProtoReflect.Descriptor instead.
func (*AllowIndexQueryingRequest) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_search_v1_search_proto_rawDescGZIP(), []int{19}
}

func (x *AllowIndexQueryingRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AllowIndexQueryingRequest) GetBucketName() string {
	if x != nil && x.BucketName != nil {
		return *x.BucketName
	}
	return ""
}

func (x *AllowIndexQueryingRequest) GetScopeName() string {
	if x != nil && x.ScopeName != nil {
		return *x.ScopeName
	}
	return ""
}

type AllowIndexQueryingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AllowIndexQueryingResponse) Reset() {
	*x = AllowIndexQueryingResponse{}
	mi := &file_couchbase_admin_search_v1_search_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AllowIndexQueryingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllowIndexQueryingResponse) ProtoMessage() {}

func (x *AllowIndexQueryingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_search_v1_search_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllowIndexQueryingResponse.ProtoReflect.Descriptor instead.
func (*AllowIndexQueryingResponse) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_search_v1_search_proto_rawDescGZIP(), []int{20}
}

type DisallowIndexQueryingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	BucketName    *string                `protobuf:"bytes,2,opt,name=bucket_name,json=bucketName,proto3,oneof" json:"bucket_name,omitempty"`
	ScopeName     *string                `protobuf:"bytes,3,opt,name=scope_name,json=scopeName,proto3,oneof" json:"scope_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisallowIndexQueryingRequest) Reset() {
	*x = DisallowIndexQueryingRequest{}
	mi := &file_couchbase_admin_search_v1_search_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisallowIndexQueryingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisallowIndexQueryingRequest) ProtoMessage() {}

func (x *DisallowIndexQueryingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_search_v1_search_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisallowIndexQueryingRequest.ProtoReflect.Descriptor instead.
func (*DisallowIndexQueryingRequest) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_search_v1_search_proto_rawDescGZIP(), []int{21}
}

func (x *DisallowIndexQueryingRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DisallowIndexQueryingRequest) GetBucketName() string {
	if x != nil && x.BucketName != nil {
		return *x.BucketName
	}
	return ""
}

func (x *DisallowIndexQueryingRequest) GetScopeName() string {
	if x != nil && x.ScopeName != nil {
		return *x.ScopeName
	}
	return ""
}

type DisallowIndexQueryingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisallowIndexQueryingResponse) Reset() {
	*x = DisallowIndexQueryingResponse{}
	mi := &file_couchbase_admin_search_v1_search_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisallowIndexQueryingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisallowIndexQueryingResponse) ProtoMessage() {}

func (x *DisallowIndexQueryingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_search_v1_search_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisallowIndexQueryingResponse.ProtoReflect.Descriptor instead.
func (*DisallowIndexQueryingResponse) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_search_v1_search_proto_rawDescGZIP(), []int{22}
}

type FreezeIndexPlanRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	BucketName    *string                `protobuf:"bytes,2,opt,name=bucket_name,json=bucketName,proto3,oneof" json:"bucket_name,omitempty"`
	ScopeName     *string                `protobuf:"bytes,3,opt,name=scope_name,json=scopeName,proto3,oneof" json:"scope_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FreezeIndexPlanRequest) Reset() {
	*x = FreezeIndexPlanRequest{}
	mi := &file_couchbase_admin_search_v1_search_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FreezeIndexPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FreezeIndexPlanRequest) ProtoMessage() {}

func (x *FreezeIndexPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_search_v1_search_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FreezeIndexPlanRequest.ProtoReflect.Descriptor instead.
func (*FreezeIndexPlanRequest) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_search_v1_search_proto_rawDescGZIP(), []int{23}
}

func (x *FreezeIndexPlanRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FreezeIndexPlanRequest) GetBucketName() string {
	if x != nil && x.BucketName != nil {
		return *x.BucketName
	}
	return ""
}

func (x *FreezeIndexPlanRequest) GetScopeName() string {
	if x != nil && x.ScopeName != nil {
		return *x.ScopeName
	}
	return ""
}

type FreezeIndexPlanResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FreezeIndexPlanResponse) Reset() {
	*x = FreezeIndexPlanResponse{}
	mi := &file_couchbase_admin_search_v1_search_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FreezeIndexPlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FreezeIndexPlanResponse) ProtoMessage() {}

func (x *FreezeIndexPlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_search_v1_search_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FreezeIndexPlanResponse.ProtoReflect.Descriptor instead.
func (*FreezeIndexPlanResponse) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_search_v1_search_proto_rawDescGZIP(), []int{24}
}

type UnfreezeIndexPlanRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	BucketName    *string                `protobuf:"bytes,2,opt,name=bucket_name,json=bucketName,proto3,oneof" json:"bucket_name,omitempty"`
	ScopeName     *string                `protobuf:"bytes,3,opt,name=scope_name,json=scopeName,proto3,oneof" json:"scope_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnfreezeIndexPlanRequest) Reset() {
	*x = UnfreezeIndexPlanRequest{}
	mi := &file_couchbase_admin_search_v1_search_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnfreezeIndexPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnfreezeIndexPlanRequest) ProtoMessage() {}

func (x *UnfreezeIndexPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_search_v1_search_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnfreezeIndexPlanRequest.ProtoReflect.Descriptor instead.
func (*UnfreezeIndexPlanRequest) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_search_v1_search_proto_rawDescGZIP(), []int{25}
}

func (x *UnfreezeIndexPlanRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UnfreezeIndexPlanRequest) GetBucketName() string {
	if x != nil && x.BucketName != nil {
		return *x.BucketName
	}
	return ""
}

func (x *UnfreezeIndexPlanRequest) GetScopeName() string {
	if x != nil && x.ScopeName != nil {
		return *x.ScopeName
	}
	return ""
}

type UnfreezeIndexPlanResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnfreezeIndexPlanResponse) Reset() {
	*x = UnfreezeIndexPlanResponse{}
	mi := &file_couchbase_admin_search_v1_search_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnfreezeIndexPlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnfreezeIndexPlanResponse) ProtoMessage() {}

func (x *UnfreezeIndexPlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_search_v1_search_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnfreezeIndexPlanResponse.ProtoReflect.Descriptor instead.
func (*UnfreezeIndexPlanResponse) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_search_v1_search_proto_rawDescGZIP(), []int{26}
}

var File_couchbase_admin_search_v1_search_proto protoreflect.FileDescriptor

const file_couchbase_admin_search_v1_search_proto_rawDesc = "" +
	"\n" +
	"&couchbase/admin/search/v1/search.proto\x12\x19couchbase.admin.search.v1\"\x92\x05\n" +
	"\x05Index\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12D\n" +
	"\x06params\x18\x02 \x03(\v2,.couchbase.admin.search.v1.Index.ParamsEntryR\x06params\x12Q\n" +
	"\vplan_params\x18\x03 \x03(\v20.couchbase.admin.search.v1.Index.PlanParamsEntryR\n" +
	"planParams\x12$\n" +
	"\vsource_name\x18\x04 \x01(\tH\x00R\n" +
	"sourceName\x88\x01\x01\x12W\n" +
	"\rsource_params\x18\x05 \x03(\v22.couchbase.admin.search.v1.Index.SourceParamsEntryR\fsourceParams\x12$\n" +
	"\vsource_type\x18\x06 \x01(\tH\x01R\n" +
	"sourceType\x88\x01\x01\x12$\n" +
	"\vsource_uuid\x18\a \x01(\tH\x02R\n" +
	"sourceUuid\x88\x01\x01\x12\x12\n" +
	"\x04type\x18\b \x01(\tR\x04type\x12\x12\n" +
	"\x04uuid\x18\t \x01(\tR\x04uuid\x1a9\n" +
	"\vParamsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01\x1a=\n" +
	"\x0fPlanParamsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01\x1a?\n" +
	"\x11SourceParamsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01B\x0e\n" +
	"\f_source_nameB\x0e\n" +
	"\f_source_typeB\x0e\n" +
	"\f_source_uuid\"\xdc\x06\n" +
	"\x12CreateIndexRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12Q\n" +
	"\x06params\x18\x02 \x03(\v29.couchbase.admin.search.v1.CreateIndexRequest.ParamsEntryR\x06params\x12^\n" +
	"\vplan_params\x18\x03 \x03(\v2=.couchbase.admin.search.v1.CreateIndexRequest.PlanParamsEntryR\n" +
	"planParams\x12+\n" +
	"\x0fprev_index_uuid\x18\x04 \x01(\tH\x00R\rprevIndexUuid\x88\x01\x01\x12$\n" +
	"\vsource_name\x18\x05 \x01(\tH\x01R\n" +
	"sourceName\x88\x01\x01\x12d\n" +
	"\rsource_params\x18\x06 \x03(\v2?.couchbase.admin.search.v1.CreateIndexRequest.SourceParamsEntryR\fsourceParams\x12$\n" +
	"\vsource_type\x18\a \x01(\tH\x02R\n" +
	"sourceType\x88\x01\x01\x12$\n" +
	"\vsource_uuid\x18\b \x01(\tH\x03R\n" +
	"sourceUuid\x88\x01\x01\x12\x12\n" +
	"\x04type\x18\t \x01(\tR\x04type\x12$\n" +
	"\vbucket_name\x18\n" +
	" \x01(\tH\x04R\n" +
	"bucketName\x88\x01\x01\x12\"\n" +
	"\n" +
	"scope_name\x18\v \x01(\tH\x05R\tscopeName\x88\x01\x01\x1a9\n" +
	"\vParamsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01\x1a=\n" +
	"\x0fPlanParamsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01\x1a?\n" +
	"\x11SourceParamsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01B\x12\n" +
	"\x10_prev_index_uuidB\x0e\n" +
	"\f_source_nameB\x0e\n" +
	"\f_source_typeB\x0e\n" +
	"\f_source_uuidB\x0e\n" +
	"\f_bucket_nameB\r\n" +
	"\v_scope_name\"\x15\n" +
	"\x13CreateIndexResponse\"\xb5\x01\n" +
	"\x12UpdateIndexRequest\x126\n" +
	"\x05index\x18\x01 \x01(\v2 .couchbase.admin.search.v1.IndexR\x05index\x12$\n" +
	"\vbucket_name\x18\x02 \x01(\tH\x00R\n" +
	"bucketName\x88\x01\x01\x12\"\n" +
	"\n" +
	"scope_name\x18\x03 \x01(\tH\x01R\tscopeName\x88\x01\x01B\x0e\n" +
	"\f_bucket_nameB\r\n" +
	"\v_scope_name\"\x15\n" +
	"\x13UpdateIndexResponse\"\x8e\x01\n" +
	"\x0fGetIndexRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12$\n" +
	"\vbucket_name\x18\x02 \x01(\tH\x00R\n" +
	"bucketName\x88\x01\x01\x12\"\n" +
	"\n" +
	"scope_name\x18\x03 \x01(\tH\x01R\tscopeName\x88\x01\x01B\x0e\n" +
	"\f_bucket_nameB\r\n" +
	"\v_scope_name\"J\n" +
	"\x10GetIndexResponse\x126\n" +
	"\x05index\x18\x01 \x01(\v2 .couchbase.admin.search.v1.IndexR\x05index\"}\n" +
	"\x12ListIndexesRequest\x12$\n" +
	"\vbucket_name\x18\x01 \x01(\tH\x00R\n" +
	"bucketName\x88\x01\x01\x12\"\n" +
	"\n" +
	"scope_name\x18\x02 \x01(\tH\x01R\tscopeName\x88\x01\x01B\x0e\n" +
	"\f_bucket_nameB\r\n" +
	"\v_scope_name\"Q\n" +
	"\x13ListIndexesResponse\x12:\n" +
	"\aindexes\x18\x01 \x03(\v2 .couchbase.admin.search.v1.IndexR\aindexes\"\x91\x01\n" +
	"\x12DeleteIndexRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12$\n" +
	"\vbucket_name\x18\x02 \x01(\tH\x00R\n" +
	"bucketName\x88\x01\x01\x12\"\n" +
	"\n" +
	"scope_name\x18\x03 \x01(\tH\x01R\tscopeName\x88\x01\x01B\x0e\n" +
	"\f_bucket_nameB\r\n" +
	"\v_scope_name\"\x15\n" +
	"\x13DeleteIndexResponse\"\xa7\x01\n" +
	"\x16AnalyzeDocumentRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x10\n" +
	"\x03doc\x18\x02 \x01(\fR\x03doc\x12$\n" +
	"\vbucket_name\x18\x03 \x01(\tH\x00R\n" +
	"bucketName\x88\x01\x01\x12\"\n" +
	"\n" +
	"scope_name\x18\x04 \x01(\tH\x01R\tscopeName\x88\x01\x01B\x0e\n" +
	"\f_bucket_nameB\r\n" +
	"\v_scope_name\"M\n" +
	"\x17AnalyzeDocumentResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x1a\n" +
	"\banalyzed\x18\x02 \x01(\fR\banalyzed\"\x9e\x01\n" +
	"\x1fGetIndexedDocumentsCountRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12$\n" +
	"\vbucket_name\x18\x03 \x01(\tH\x00R\n" +
	"bucketName\x88\x01\x01\x12\"\n" +
	"\n" +
	"scope_name\x18\x04 \x01(\tH\x01R\tscopeName\x88\x01\x01B\x0e\n" +
	"\f_bucket_nameB\r\n" +
	"\v_scope_name\"8\n" +
	" GetIndexedDocumentsCountResponse\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x04R\x05count\"\x96\x01\n" +
	"\x17PauseIndexIngestRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12$\n" +
	"\vbucket_name\x18\x02 \x01(\tH\x00R\n" +
	"bucketName\x88\x01\x01\x12\"\n" +
	"\n" +
	"scope_name\x18\x03 \x01(\tH\x01R\tscopeName\x88\x01\x01B\x0e\n" +
	"\f_bucket_nameB\r\n" +
	"\v_scope_name\"\x1a\n" +
	"\x18PauseIndexIngestResponse\"\x97\x01\n" +
	"\x18ResumeIndexIngestRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12$\n" +
	"\vbucket_name\x18\x02 \x01(\tH\x00R\n" +
	"bucketName\x88\x01\x01\x12\"\n" +
	"\n" +
	"scope_name\x18\x03 \x01(\tH\x01R\tscopeName\x88\x01\x01B\x0e\n" +
	"\f_bucket_nameB\r\n" +
	"\v_scope_name\"\x1b\n" +
	"\x19ResumeIndexIngestResponse\"\x98\x01\n" +
	"\x19AllowIndexQueryingRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12$\n" +
	"\vbucket_name\x18\x02 \x01(\tH\x00R\n" +
	"bucketName\x88\x01\x01\x12\"\n" +
	"\n" +
	"scope_name\x18\x03 \x01(\tH\x01R\tscopeName\x88\x01\x01B\x0e\n" +
	"\f_bucket_nameB\r\n" +
	"\v_scope_name\"\x1c\n" +
	"\x1aAllowIndexQueryingResponse\"\x9b\x01\n" +
	"\x1cDisallowIndexQueryingRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12$\n" +
	"\vbucket_name\x18\x02 \x01(\tH\x00R\n" +
	"bucketName\x88\x01\x01\x12\"\n" +
	"\n" +
	"scope_name\x18\x03 \x01(\tH\x01R\tscopeName\x88\x01\x01B\x0e\n" +
	"\f_bucket_nameB\r\n" +
	"\v_scope_name\"\x1f\n" +
	"\x1dDisallowIndexQueryingResponse\"\x95\x01\n" +
	"\x16FreezeIndexPlanRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12$\n" +
	"\vbucket_name\x18\x02 \x01(\tH\x00R\n" +
	"bucketName\x88\x01\x01\x12\"\n" +
	"\n" +
	"scope_name\x18\x03 \x01(\tH\x01R\tscopeName\x88\x01\x01B\x0e\n" +
	"\f_bucket_nameB\r\n" +
	"\v_scope_name\"\x19\n" +
	"\x17FreezeIndexPlanResponse\"\x97\x01\n" +
	"\x18UnfreezeIndexPlanRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12$\n" +
	"\vbucket_name\x18\x02 \x01(\tH\x00R\n" +
	"bucketName\x88\x01\x01\x12\"\n" +
	"\n" +
	"scope_name\x18\x03 \x01(\tH\x01R\tscopeName\x88\x01\x01B\x0e\n" +
	"\f_bucket_nameB\r\n" +
	"\v_scope_name\"\x1b\n" +
	"\x19UnfreezeIndexPlanResponse2\xe5\f\n" +
	"\x12SearchAdminService\x12e\n" +
	"\bGetIndex\x12*.couchbase.admin.search.v1.GetIndexRequest\x1a+.couchbase.admin.search.v1.GetIndexResponse\"\x00\x12n\n" +
	"\vListIndexes\x12-.couchbase.admin.search.v1.ListIndexesRequest\x1a..couchbase.admin.search.v1.ListIndexesResponse\"\x00\x12n\n" +
	"\vCreateIndex\x12-.couchbase.admin.search.v1.CreateIndexRequest\x1a..couchbase.admin.search.v1.CreateIndexResponse\"\x00\x12n\n" +
	"\vUpdateIndex\x12-.couchbase.admin.search.v1.UpdateIndexRequest\x1a..couchbase.admin.search.v1.UpdateIndexResponse\"\x00\x12n\n" +
	"\vDeleteIndex\x12-.couchbase.admin.search.v1.DeleteIndexRequest\x1a..couchbase.admin.search.v1.DeleteIndexResponse\"\x00\x12z\n" +
	"\x0fAnalyzeDocument\x121.couchbase.admin.search.v1.AnalyzeDocumentRequest\x1a2.couchbase.admin.search.v1.AnalyzeDocumentResponse\"\x00\x12\x95\x01\n" +
	"\x18GetIndexedDocumentsCount\x12:.couchbase.admin.search.v1.GetIndexedDocumentsCountRequest\x1a;.couchbase.admin.search.v1.GetIndexedDocumentsCountResponse\"\x00\x12}\n" +
	"\x10PauseIndexIngest\x122.couchbase.admin.search.v1.PauseIndexIngestRequest\x1a3.couchbase.admin.search.v1.PauseIndexIngestResponse\"\x00\x12\x80\x01\n" +
	"\x11ResumeIndexIngest\x123.couchbase.admin.search.v1.ResumeIndexIngestRequest\x1a4.couchbase.admin.search.v1.ResumeIndexIngestResponse\"\x00\x12\x83\x01\n" +
	"\x12AllowIndexQuerying\x124.couchbase.admin.search.v1.AllowIndexQueryingRequest\x1a5.couchbase.admin.search.v1.AllowIndexQueryingResponse\"\x00\x12\x8c\x01\n" +
	"\x15DisallowIndexQuerying\x127.couchbase.admin.search.v1.DisallowIndexQueryingRequest\x1a8.couchbase.admin.search.v1.DisallowIndexQueryingResponse\"\x00\x12z\n" +
	"\x0fFreezeIndexPlan\x121.couchbase.admin.search.v1.FreezeIndexPlanRequest\x1a2.couchbase.admin.search.v1.FreezeIndexPlanResponse\"\x00\x12\x80\x01\n" +
	"\x11UnfreezeIndexPlan\x123.couchbase.admin.search.v1.UnfreezeIndexPlanRequest\x1a4.couchbase.admin.search.v1.UnfreezeIndexPlanResponse\"\x00B\x97\x02\n" +
	"1com.couchbase.client.protostellar.admin.search.v1P\x01ZLgithub.com/couchbase/goprotostellar/genproto/admin_search_v1;admin_search_v1\xaa\x02&Couchbase.Protostellar.Admin.Search.V1\xca\x020Couchbase\\Protostellar\\Generated\\Admin\\Search\\V1\xea\x025Couchbase::Protostellar::Generated::Admin::Search::V1b\x06proto3"

var (
	file_couchbase_admin_search_v1_search_proto_rawDescOnce sync.Once
	file_couchbase_admin_search_v1_search_proto_rawDescData []byte
)

func file_couchbase_admin_search_v1_search_proto_rawDescGZIP() []byte {
	file_couchbase_admin_search_v1_search_proto_rawDescOnce.Do(func() {
		file_couchbase_admin_search_v1_search_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_couchbase_admin_search_v1_search_proto_rawDesc), len(file_couchbase_admin_search_v1_search_proto_rawDesc)))
	})
	return file_couchbase_admin_search_v1_search_proto_rawDescData
}

var file_couchbase_admin_search_v1_search_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_couchbase_admin_search_v1_search_proto_goTypes = []any{
	(*Index)(nil),                            // 0: couchbase.admin.search.v1.Index
	(*CreateIndexRequest)(nil),               // 1: couchbase.admin.search.v1.CreateIndexRequest
	(*CreateIndexResponse)(nil),              // 2: couchbase.admin.search.v1.CreateIndexResponse
	(*UpdateIndexRequest)(nil),               // 3: couchbase.admin.search.v1.UpdateIndexRequest
	(*UpdateIndexResponse)(nil),              // 4: couchbase.admin.search.v1.UpdateIndexResponse
	(*GetIndexRequest)(nil),                  // 5: couchbase.admin.search.v1.GetIndexRequest
	(*GetIndexResponse)(nil),                 // 6: couchbase.admin.search.v1.GetIndexResponse
	(*ListIndexesRequest)(nil),               // 7: couchbase.admin.search.v1.ListIndexesRequest
	(*ListIndexesResponse)(nil),              // 8: couchbase.admin.search.v1.ListIndexesResponse
	(*DeleteIndexRequest)(nil),               // 9: couchbase.admin.search.v1.DeleteIndexRequest
	(*DeleteIndexResponse)(nil),              // 10: couchbase.admin.search.v1.DeleteIndexResponse
	(*AnalyzeDocumentRequest)(nil),           // 11: couchbase.admin.search.v1.AnalyzeDocumentRequest
	(*AnalyzeDocumentResponse)(nil),          // 12: couchbase.admin.search.v1.AnalyzeDocumentResponse
	(*GetIndexedDocumentsCountRequest)(nil),  // 13: couchbase.admin.search.v1.GetIndexedDocumentsCountRequest
	(*GetIndexedDocumentsCountResponse)(nil), // 14: couchbase.admin.search.v1.GetIndexedDocumentsCountResponse
	(*PauseIndexIngestRequest)(nil),          // 15: couchbase.admin.search.v1.PauseIndexIngestRequest
	(*PauseIndexIngestResponse)(nil),         // 16: couchbase.admin.search.v1.PauseIndexIngestResponse
	(*ResumeIndexIngestRequest)(nil),         // 17: couchbase.admin.search.v1.ResumeIndexIngestRequest
	(*ResumeIndexIngestResponse)(nil),        // 18: couchbase.admin.search.v1.ResumeIndexIngestResponse
	(*AllowIndexQueryingRequest)(nil),        // 19: couchbase.admin.search.v1.AllowIndexQueryingRequest
	(*AllowIndexQueryingResponse)(nil),       // 20: couchbase.admin.search.v1.AllowIndexQueryingResponse
	(*DisallowIndexQueryingRequest)(nil),     // 21: couchbase.admin.search.v1.DisallowIndexQueryingRequest
	(*DisallowIndexQueryingResponse)(nil),    // 22: couchbase.admin.search.v1.DisallowIndexQueryingResponse
	(*FreezeIndexPlanRequest)(nil),           // 23: couchbase.admin.search.v1.FreezeIndexPlanRequest
	(*FreezeIndexPlanResponse)(nil),          // 24: couchbase.admin.search.v1.FreezeIndexPlanResponse
	(*UnfreezeIndexPlanRequest)(nil),         // 25: couchbase.admin.search.v1.UnfreezeIndexPlanRequest
	(*UnfreezeIndexPlanResponse)(nil),        // 26: couchbase.admin.search.v1.UnfreezeIndexPlanResponse
	nil,                                      // 27: couchbase.admin.search.v1.Index.ParamsEntry
	nil,                                      // 28: couchbase.admin.search.v1.Index.PlanParamsEntry
	nil,                                      // 29: couchbase.admin.search.v1.Index.SourceParamsEntry
	nil,                                      // 30: couchbase.admin.search.v1.CreateIndexRequest.ParamsEntry
	nil,                                      // 31: couchbase.admin.search.v1.CreateIndexRequest.PlanParamsEntry
	nil,                                      // 32: couchbase.admin.search.v1.CreateIndexRequest.SourceParamsEntry
}
var file_couchbase_admin_search_v1_search_proto_depIdxs = []int32{
	27, // 0: couchbase.admin.search.v1.Index.params:type_name -> couchbase.admin.search.v1.Index.ParamsEntry
	28, // 1: couchbase.admin.search.v1.Index.plan_params:type_name -> couchbase.admin.search.v1.Index.PlanParamsEntry
	29, // 2: couchbase.admin.search.v1.Index.source_params:type_name -> couchbase.admin.search.v1.Index.SourceParamsEntry
	30, // 3: couchbase.admin.search.v1.CreateIndexRequest.params:type_name -> couchbase.admin.search.v1.CreateIndexRequest.ParamsEntry
	31, // 4: couchbase.admin.search.v1.CreateIndexRequest.plan_params:type_name -> couchbase.admin.search.v1.CreateIndexRequest.PlanParamsEntry
	32, // 5: couchbase.admin.search.v1.CreateIndexRequest.source_params:type_name -> couchbase.admin.search.v1.CreateIndexRequest.SourceParamsEntry
	0,  // 6: couchbase.admin.search.v1.UpdateIndexRequest.index:type_name -> couchbase.admin.search.v1.Index
	0,  // 7: couchbase.admin.search.v1.GetIndexResponse.index:type_name -> couchbase.admin.search.v1.Index
	0,  // 8: couchbase.admin.search.v1.ListIndexesResponse.indexes:type_name -> couchbase.admin.search.v1.Index
	5,  // 9: couchbase.admin.search.v1.SearchAdminService.GetIndex:input_type -> couchbase.admin.search.v1.GetIndexRequest
	7,  // 10: couchbase.admin.search.v1.SearchAdminService.ListIndexes:input_type -> couchbase.admin.search.v1.ListIndexesRequest
	1,  // 11: couchbase.admin.search.v1.SearchAdminService.CreateIndex:input_type -> couchbase.admin.search.v1.CreateIndexRequest
	3,  // 12: couchbase.admin.search.v1.SearchAdminService.UpdateIndex:input_type -> couchbase.admin.search.v1.UpdateIndexRequest
	9,  // 13: couchbase.admin.search.v1.SearchAdminService.DeleteIndex:input_type -> couchbase.admin.search.v1.DeleteIndexRequest
	11, // 14: couchbase.admin.search.v1.SearchAdminService.AnalyzeDocument:input_type -> couchbase.admin.search.v1.AnalyzeDocumentRequest
	13, // 15: couchbase.admin.search.v1.SearchAdminService.GetIndexedDocumentsCount:input_type -> couchbase.admin.search.v1.GetIndexedDocumentsCountRequest
	15, // 16: couchbase.admin.search.v1.SearchAdminService.PauseIndexIngest:input_type -> couchbase.admin.search.v1.PauseIndexIngestRequest
	17, // 17: couchbase.admin.search.v1.SearchAdminService.ResumeIndexIngest:input_type -> couchbase.admin.search.v1.ResumeIndexIngestRequest
	19, // 18: couchbase.admin.search.v1.SearchAdminService.AllowIndexQuerying:input_type -> couchbase.admin.search.v1.AllowIndexQueryingRequest
	21, // 19: couchbase.admin.search.v1.SearchAdminService.DisallowIndexQuerying:input_type -> couchbase.admin.search.v1.DisallowIndexQueryingRequest
	23, // 20: couchbase.admin.search.v1.SearchAdminService.FreezeIndexPlan:input_type -> couchbase.admin.search.v1.FreezeIndexPlanRequest
	25, // 21: couchbase.admin.search.v1.SearchAdminService.UnfreezeIndexPlan:input_type -> couchbase.admin.search.v1.UnfreezeIndexPlanRequest
	6,  // 22: couchbase.admin.search.v1.SearchAdminService.GetIndex:output_type -> couchbase.admin.search.v1.GetIndexResponse
	8,  // 23: couchbase.admin.search.v1.SearchAdminService.ListIndexes:output_type -> couchbase.admin.search.v1.ListIndexesResponse
	2,  // 24: couchbase.admin.search.v1.SearchAdminService.CreateIndex:output_type -> couchbase.admin.search.v1.CreateIndexResponse
	4,  // 25: couchbase.admin.search.v1.SearchAdminService.UpdateIndex:output_type -> couchbase.admin.search.v1.UpdateIndexResponse
	10, // 26: couchbase.admin.search.v1.SearchAdminService.DeleteIndex:output_type -> couchbase.admin.search.v1.DeleteIndexResponse
	12, // 27: couchbase.admin.search.v1.SearchAdminService.AnalyzeDocument:output_type -> couchbase.admin.search.v1.AnalyzeDocumentResponse
	14, // 28: couchbase.admin.search.v1.SearchAdminService.GetIndexedDocumentsCount:output_type -> couchbase.admin.search.v1.GetIndexedDocumentsCountResponse
	16, // 29: couchbase.admin.search.v1.SearchAdminService.PauseIndexIngest:output_type -> couchbase.admin.search.v1.PauseIndexIngestResponse
	18, // 30: couchbase.admin.search.v1.SearchAdminService.ResumeIndexIngest:output_type -> couchbase.admin.search.v1.ResumeIndexIngestResponse
	20, // 31: couchbase.admin.search.v1.SearchAdminService.AllowIndexQuerying:output_type -> couchbase.admin.search.v1.AllowIndexQueryingResponse
	22, // 32: couchbase.admin.search.v1.SearchAdminService.DisallowIndexQuerying:output_type -> couchbase.admin.search.v1.DisallowIndexQueryingResponse
	24, // 33: couchbase.admin.search.v1.SearchAdminService.FreezeIndexPlan:output_type -> couchbase.admin.search.v1.FreezeIndexPlanResponse
	26, // 34: couchbase.admin.search.v1.SearchAdminService.UnfreezeIndexPlan:output_type -> couchbase.admin.search.v1.UnfreezeIndexPlanResponse
	22, // [22:35] is the sub-list for method output_type
	9,  // [9:22] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_couchbase_admin_search_v1_search_proto_init() }
func file_couchbase_admin_search_v1_search_proto_init() {
	if File_couchbase_admin_search_v1_search_proto != nil {
		return
	}
	file_couchbase_admin_search_v1_search_proto_msgTypes[0].OneofWrappers = []any{}
	file_couchbase_admin_search_v1_search_proto_msgTypes[1].OneofWrappers = []any{}
	file_couchbase_admin_search_v1_search_proto_msgTypes[3].OneofWrappers = []any{}
	file_couchbase_admin_search_v1_search_proto_msgTypes[5].OneofWrappers = []any{}
	file_couchbase_admin_search_v1_search_proto_msgTypes[7].OneofWrappers = []any{}
	file_couchbase_admin_search_v1_search_proto_msgTypes[9].OneofWrappers = []any{}
	file_couchbase_admin_search_v1_search_proto_msgTypes[11].OneofWrappers = []any{}
	file_couchbase_admin_search_v1_search_proto_msgTypes[13].OneofWrappers = []any{}
	file_couchbase_admin_search_v1_search_proto_msgTypes[15].OneofWrappers = []any{}
	file_couchbase_admin_search_v1_search_proto_msgTypes[17].OneofWrappers = []any{}
	file_couchbase_admin_search_v1_search_proto_msgTypes[19].OneofWrappers = []any{}
	file_couchbase_admin_search_v1_search_proto_msgTypes[21].OneofWrappers = []any{}
	file_couchbase_admin_search_v1_search_proto_msgTypes[23].OneofWrappers = []any{}
	file_couchbase_admin_search_v1_search_proto_msgTypes[25].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_couchbase_admin_search_v1_search_proto_rawDesc), len(file_couchbase_admin_search_v1_search_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_couchbase_admin_search_v1_search_proto_goTypes,
		DependencyIndexes: file_couchbase_admin_search_v1_search_proto_depIdxs,
		MessageInfos:      file_couchbase_admin_search_v1_search_proto_msgTypes,
	}.Build()
	File_couchbase_admin_search_v1_search_proto = out.File
	file_couchbase_admin_search_v1_search_proto_goTypes = nil
	file_couchbase_admin_search_v1_search_proto_depIdxs = nil
}
