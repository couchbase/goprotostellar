// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: couchbase/kv/v1/kv.proto

package kv_v1

import (
	status "google.golang.org/genproto/googleapis/rpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DurabilityLevel int32

const (
	DurabilityLevel_DURABILITY_LEVEL_MAJORITY                       DurabilityLevel = 0
	DurabilityLevel_DURABILITY_LEVEL_MAJORITY_AND_PERSIST_TO_ACTIVE DurabilityLevel = 1
	DurabilityLevel_DURABILITY_LEVEL_PERSIST_TO_MAJORITY            DurabilityLevel = 2
)

// Enum value maps for DurabilityLevel.
var (
	DurabilityLevel_name = map[int32]string{
		0: "DURABILITY_LEVEL_MAJORITY",
		1: "DURABILITY_LEVEL_MAJORITY_AND_PERSIST_TO_ACTIVE",
		2: "DURABILITY_LEVEL_PERSIST_TO_MAJORITY",
	}
	DurabilityLevel_value = map[string]int32{
		"DURABILITY_LEVEL_MAJORITY":                       0,
		"DURABILITY_LEVEL_MAJORITY_AND_PERSIST_TO_ACTIVE": 1,
		"DURABILITY_LEVEL_PERSIST_TO_MAJORITY":            2,
	}
)

func (x DurabilityLevel) Enum() *DurabilityLevel {
	p := new(DurabilityLevel)
	*p = x
	return p
}

func (x DurabilityLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DurabilityLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_couchbase_kv_v1_kv_proto_enumTypes[0].Descriptor()
}

func (DurabilityLevel) Type() protoreflect.EnumType {
	return &file_couchbase_kv_v1_kv_proto_enumTypes[0]
}

func (x DurabilityLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DurabilityLevel.Descriptor instead.
func (DurabilityLevel) EnumDescriptor() ([]byte, []int) {
	return file_couchbase_kv_v1_kv_proto_rawDescGZIP(), []int{0}
}

type CompressionEnabled int32

const (
	CompressionEnabled_COMPRESSION_ENABLED_OPTIONAL CompressionEnabled = 0
	CompressionEnabled_COMPRESSION_ENABLED_ALWAYS   CompressionEnabled = 1
)

// Enum value maps for CompressionEnabled.
var (
	CompressionEnabled_name = map[int32]string{
		0: "COMPRESSION_ENABLED_OPTIONAL",
		1: "COMPRESSION_ENABLED_ALWAYS",
	}
	CompressionEnabled_value = map[string]int32{
		"COMPRESSION_ENABLED_OPTIONAL": 0,
		"COMPRESSION_ENABLED_ALWAYS":   1,
	}
)

func (x CompressionEnabled) Enum() *CompressionEnabled {
	p := new(CompressionEnabled)
	*p = x
	return p
}

func (x CompressionEnabled) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CompressionEnabled) Descriptor() protoreflect.EnumDescriptor {
	return file_couchbase_kv_v1_kv_proto_enumTypes[1].Descriptor()
}

func (CompressionEnabled) Type() protoreflect.EnumType {
	return &file_couchbase_kv_v1_kv_proto_enumTypes[1]
}

func (x CompressionEnabled) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CompressionEnabled.Descriptor instead.
func (CompressionEnabled) EnumDescriptor() ([]byte, []int) {
	return file_couchbase_kv_v1_kv_proto_rawDescGZIP(), []int{1}
}

type LookupInRequest_Spec_Operation int32

const (
	LookupInRequest_Spec_OPERATION_GET    LookupInRequest_Spec_Operation = 0
	LookupInRequest_Spec_OPERATION_EXISTS LookupInRequest_Spec_Operation = 1
	LookupInRequest_Spec_OPERATION_COUNT  LookupInRequest_Spec_Operation = 2
)

// Enum value maps for LookupInRequest_Spec_Operation.
var (
	LookupInRequest_Spec_Operation_name = map[int32]string{
		0: "OPERATION_GET",
		1: "OPERATION_EXISTS",
		2: "OPERATION_COUNT",
	}
	LookupInRequest_Spec_Operation_value = map[string]int32{
		"OPERATION_GET":    0,
		"OPERATION_EXISTS": 1,
		"OPERATION_COUNT":  2,
	}
)

func (x LookupInRequest_Spec_Operation) Enum() *LookupInRequest_Spec_Operation {
	p := new(LookupInRequest_Spec_Operation)
	*p = x
	return p
}

func (x LookupInRequest_Spec_Operation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LookupInRequest_Spec_Operation) Descriptor() protoreflect.EnumDescriptor {
	return file_couchbase_kv_v1_kv_proto_enumTypes[2].Descriptor()
}

func (LookupInRequest_Spec_Operation) Type() protoreflect.EnumType {
	return &file_couchbase_kv_v1_kv_proto_enumTypes[2]
}

func (x LookupInRequest_Spec_Operation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LookupInRequest_Spec_Operation.Descriptor instead.
func (LookupInRequest_Spec_Operation) EnumDescriptor() ([]byte, []int) {
	return file_couchbase_kv_v1_kv_proto_rawDescGZIP(), []int{30, 0, 0}
}

type MutateInRequest_StoreSemantic int32

const (
	MutateInRequest_STORE_SEMANTIC_REPLACE MutateInRequest_StoreSemantic = 0
	MutateInRequest_STORE_SEMANTIC_UPSERT  MutateInRequest_StoreSemantic = 1
	MutateInRequest_STORE_SEMANTIC_INSERT  MutateInRequest_StoreSemantic = 2
)

// Enum value maps for MutateInRequest_StoreSemantic.
var (
	MutateInRequest_StoreSemantic_name = map[int32]string{
		0: "STORE_SEMANTIC_REPLACE",
		1: "STORE_SEMANTIC_UPSERT",
		2: "STORE_SEMANTIC_INSERT",
	}
	MutateInRequest_StoreSemantic_value = map[string]int32{
		"STORE_SEMANTIC_REPLACE": 0,
		"STORE_SEMANTIC_UPSERT":  1,
		"STORE_SEMANTIC_INSERT":  2,
	}
)

func (x MutateInRequest_StoreSemantic) Enum() *MutateInRequest_StoreSemantic {
	p := new(MutateInRequest_StoreSemantic)
	*p = x
	return p
}

func (x MutateInRequest_StoreSemantic) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MutateInRequest_StoreSemantic) Descriptor() protoreflect.EnumDescriptor {
	return file_couchbase_kv_v1_kv_proto_enumTypes[3].Descriptor()
}

func (MutateInRequest_StoreSemantic) Type() protoreflect.EnumType {
	return &file_couchbase_kv_v1_kv_proto_enumTypes[3]
}

func (x MutateInRequest_StoreSemantic) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MutateInRequest_StoreSemantic.Descriptor instead.
func (MutateInRequest_StoreSemantic) EnumDescriptor() ([]byte, []int) {
	return file_couchbase_kv_v1_kv_proto_rawDescGZIP(), []int{32, 0}
}

type MutateInRequest_Spec_Operation int32

const (
	MutateInRequest_Spec_OPERATION_INSERT           MutateInRequest_Spec_Operation = 0
	MutateInRequest_Spec_OPERATION_UPSERT           MutateInRequest_Spec_Operation = 1
	MutateInRequest_Spec_OPERATION_REPLACE          MutateInRequest_Spec_Operation = 2
	MutateInRequest_Spec_OPERATION_REMOVE           MutateInRequest_Spec_Operation = 3
	MutateInRequest_Spec_OPERATION_ARRAY_APPEND     MutateInRequest_Spec_Operation = 4
	MutateInRequest_Spec_OPERATION_ARRAY_PREPEND    MutateInRequest_Spec_Operation = 5
	MutateInRequest_Spec_OPERATION_ARRAY_INSERT     MutateInRequest_Spec_Operation = 6
	MutateInRequest_Spec_OPERATION_ARRAY_ADD_UNIQUE MutateInRequest_Spec_Operation = 7
	MutateInRequest_Spec_OPERATION_COUNTER          MutateInRequest_Spec_Operation = 8
)

// Enum value maps for MutateInRequest_Spec_Operation.
var (
	MutateInRequest_Spec_Operation_name = map[int32]string{
		0: "OPERATION_INSERT",
		1: "OPERATION_UPSERT",
		2: "OPERATION_REPLACE",
		3: "OPERATION_REMOVE",
		4: "OPERATION_ARRAY_APPEND",
		5: "OPERATION_ARRAY_PREPEND",
		6: "OPERATION_ARRAY_INSERT",
		7: "OPERATION_ARRAY_ADD_UNIQUE",
		8: "OPERATION_COUNTER",
	}
	MutateInRequest_Spec_Operation_value = map[string]int32{
		"OPERATION_INSERT":           0,
		"OPERATION_UPSERT":           1,
		"OPERATION_REPLACE":          2,
		"OPERATION_REMOVE":           3,
		"OPERATION_ARRAY_APPEND":     4,
		"OPERATION_ARRAY_PREPEND":    5,
		"OPERATION_ARRAY_INSERT":     6,
		"OPERATION_ARRAY_ADD_UNIQUE": 7,
		"OPERATION_COUNTER":          8,
	}
)

func (x MutateInRequest_Spec_Operation) Enum() *MutateInRequest_Spec_Operation {
	p := new(MutateInRequest_Spec_Operation)
	*p = x
	return p
}

func (x MutateInRequest_Spec_Operation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MutateInRequest_Spec_Operation) Descriptor() protoreflect.EnumDescriptor {
	return file_couchbase_kv_v1_kv_proto_enumTypes[4].Descriptor()
}

func (MutateInRequest_Spec_Operation) Type() protoreflect.EnumType {
	return &file_couchbase_kv_v1_kv_proto_enumTypes[4]
}

func (x MutateInRequest_Spec_Operation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MutateInRequest_Spec_Operation.Descriptor instead.
func (MutateInRequest_Spec_Operation) EnumDescriptor() ([]byte, []int) {
	return file_couchbase_kv_v1_kv_proto_rawDescGZIP(), []int{32, 0, 0}
}

type LegacyDurabilitySpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NumReplicated uint32                 `protobuf:"varint,1,opt,name=num_replicated,json=numReplicated,proto3" json:"num_replicated,omitempty"`
	NumPersisted  uint32                 `protobuf:"varint,2,opt,name=num_persisted,json=numPersisted,proto3" json:"num_persisted,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LegacyDurabilitySpec) Reset() {
	*x = LegacyDurabilitySpec{}
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LegacyDurabilitySpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LegacyDurabilitySpec) ProtoMessage() {}

func (x *LegacyDurabilitySpec) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LegacyDurabilitySpec.ProtoReflect.Descriptor instead.
func (*LegacyDurabilitySpec) Descriptor() ([]byte, []int) {
	return file_couchbase_kv_v1_kv_proto_rawDescGZIP(), []int{0}
}

func (x *LegacyDurabilitySpec) GetNumReplicated() uint32 {
	if x != nil {
		return x.NumReplicated
	}
	return 0
}

func (x *LegacyDurabilitySpec) GetNumPersisted() uint32 {
	if x != nil {
		return x.NumPersisted
	}
	return 0
}

type MutationToken struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BucketName    string                 `protobuf:"bytes,1,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	VbucketId     uint32                 `protobuf:"varint,2,opt,name=vbucket_id,json=vbucketId,proto3" json:"vbucket_id,omitempty"`
	VbucketUuid   uint64                 `protobuf:"varint,3,opt,name=vbucket_uuid,json=vbucketUuid,proto3" json:"vbucket_uuid,omitempty"`
	SeqNo         uint64                 `protobuf:"varint,4,opt,name=seq_no,json=seqNo,proto3" json:"seq_no,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MutationToken) Reset() {
	*x = MutationToken{}
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MutationToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MutationToken) ProtoMessage() {}

func (x *MutationToken) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MutationToken.ProtoReflect.Descriptor instead.
func (*MutationToken) Descriptor() ([]byte, []int) {
	return file_couchbase_kv_v1_kv_proto_rawDescGZIP(), []int{1}
}

func (x *MutationToken) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *MutationToken) GetVbucketId() uint32 {
	if x != nil {
		return x.VbucketId
	}
	return 0
}

func (x *MutationToken) GetVbucketUuid() uint64 {
	if x != nil {
		return x.VbucketUuid
	}
	return 0
}

func (x *MutationToken) GetSeqNo() uint64 {
	if x != nil {
		return x.SeqNo
	}
	return 0
}

type GetRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	BucketName     string                 `protobuf:"bytes,1,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	ScopeName      string                 `protobuf:"bytes,2,opt,name=scope_name,json=scopeName,proto3" json:"scope_name,omitempty"`
	CollectionName string                 `protobuf:"bytes,3,opt,name=collection_name,json=collectionName,proto3" json:"collection_name,omitempty"`
	Key            string                 `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	Project        []string               `protobuf:"bytes,5,rep,name=project,proto3" json:"project,omitempty"`
	Compression    *CompressionEnabled    `protobuf:"varint,6,opt,name=compression,proto3,enum=couchbase.kv.v1.CompressionEnabled,oneof" json:"compression,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_couchbase_kv_v1_kv_proto_rawDescGZIP(), []int{2}
}

func (x *GetRequest) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *GetRequest) GetScopeName() string {
	if x != nil {
		return x.ScopeName
	}
	return ""
}

func (x *GetRequest) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *GetRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GetRequest) GetProject() []string {
	if x != nil {
		return x.Project
	}
	return nil
}

func (x *GetRequest) GetCompression() CompressionEnabled {
	if x != nil && x.Compression != nil {
		return *x.Compression
	}
	return CompressionEnabled_COMPRESSION_ENABLED_OPTIONAL
}

type GetResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Content:
	//
	//	*GetResponse_ContentUncompressed
	//	*GetResponse_ContentCompressed
	Content       isGetResponse_Content  `protobuf_oneof:"content"`
	ContentFlags  uint32                 `protobuf:"varint,6,opt,name=content_flags,json=contentFlags,proto3" json:"content_flags,omitempty"`
	Cas           uint64                 `protobuf:"varint,3,opt,name=cas,proto3" json:"cas,omitempty"`
	Expiry        *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=expiry,proto3" json:"expiry,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetResponse) Reset() {
	*x = GetResponse{}
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponse) ProtoMessage() {}

func (x *GetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponse.ProtoReflect.Descriptor instead.
func (*GetResponse) Descriptor() ([]byte, []int) {
	return file_couchbase_kv_v1_kv_proto_rawDescGZIP(), []int{3}
}

func (x *GetResponse) GetContent() isGetResponse_Content {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *GetResponse) GetContentUncompressed() []byte {
	if x != nil {
		if x, ok := x.Content.(*GetResponse_ContentUncompressed); ok {
			return x.ContentUncompressed
		}
	}
	return nil
}

func (x *GetResponse) GetContentCompressed() []byte {
	if x != nil {
		if x, ok := x.Content.(*GetResponse_ContentCompressed); ok {
			return x.ContentCompressed
		}
	}
	return nil
}

func (x *GetResponse) GetContentFlags() uint32 {
	if x != nil {
		return x.ContentFlags
	}
	return 0
}

func (x *GetResponse) GetCas() uint64 {
	if x != nil {
		return x.Cas
	}
	return 0
}

func (x *GetResponse) GetExpiry() *timestamppb.Timestamp {
	if x != nil {
		return x.Expiry
	}
	return nil
}

type isGetResponse_Content interface {
	isGetResponse_Content()
}

type GetResponse_ContentUncompressed struct {
	ContentUncompressed []byte `protobuf:"bytes,1,opt,name=content_uncompressed,json=contentUncompressed,proto3,oneof"`
}

type GetResponse_ContentCompressed struct {
	ContentCompressed []byte `protobuf:"bytes,7,opt,name=content_compressed,json=contentCompressed,proto3,oneof"`
}

func (*GetResponse_ContentUncompressed) isGetResponse_Content() {}

func (*GetResponse_ContentCompressed) isGetResponse_Content() {}

type GetAndTouchRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	BucketName     string                 `protobuf:"bytes,1,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	ScopeName      string                 `protobuf:"bytes,2,opt,name=scope_name,json=scopeName,proto3" json:"scope_name,omitempty"`
	CollectionName string                 `protobuf:"bytes,3,opt,name=collection_name,json=collectionName,proto3" json:"collection_name,omitempty"`
	Key            string                 `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	// Types that are valid to be assigned to Expiry:
	//
	//	*GetAndTouchRequest_ExpiryTime
	//	*GetAndTouchRequest_ExpirySecs
	Expiry        isGetAndTouchRequest_Expiry `protobuf_oneof:"expiry"`
	Compression   *CompressionEnabled         `protobuf:"varint,7,opt,name=compression,proto3,enum=couchbase.kv.v1.CompressionEnabled,oneof" json:"compression,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAndTouchRequest) Reset() {
	*x = GetAndTouchRequest{}
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAndTouchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAndTouchRequest) ProtoMessage() {}

func (x *GetAndTouchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAndTouchRequest.ProtoReflect.Descriptor instead.
func (*GetAndTouchRequest) Descriptor() ([]byte, []int) {
	return file_couchbase_kv_v1_kv_proto_rawDescGZIP(), []int{4}
}

func (x *GetAndTouchRequest) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *GetAndTouchRequest) GetScopeName() string {
	if x != nil {
		return x.ScopeName
	}
	return ""
}

func (x *GetAndTouchRequest) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *GetAndTouchRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GetAndTouchRequest) GetExpiry() isGetAndTouchRequest_Expiry {
	if x != nil {
		return x.Expiry
	}
	return nil
}

func (x *GetAndTouchRequest) GetExpiryTime() *timestamppb.Timestamp {
	if x != nil {
		if x, ok := x.Expiry.(*GetAndTouchRequest_ExpiryTime); ok {
			return x.ExpiryTime
		}
	}
	return nil
}

func (x *GetAndTouchRequest) GetExpirySecs() uint32 {
	if x != nil {
		if x, ok := x.Expiry.(*GetAndTouchRequest_ExpirySecs); ok {
			return x.ExpirySecs
		}
	}
	return 0
}

func (x *GetAndTouchRequest) GetCompression() CompressionEnabled {
	if x != nil && x.Compression != nil {
		return *x.Compression
	}
	return CompressionEnabled_COMPRESSION_ENABLED_OPTIONAL
}

type isGetAndTouchRequest_Expiry interface {
	isGetAndTouchRequest_Expiry()
}

type GetAndTouchRequest_ExpiryTime struct {
	ExpiryTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=expiry_time,json=expiryTime,proto3,oneof"`
}

type GetAndTouchRequest_ExpirySecs struct {
	ExpirySecs uint32 `protobuf:"varint,6,opt,name=expiry_secs,json=expirySecs,proto3,oneof"`
}

func (*GetAndTouchRequest_ExpiryTime) isGetAndTouchRequest_Expiry() {}

func (*GetAndTouchRequest_ExpirySecs) isGetAndTouchRequest_Expiry() {}

type GetAndTouchResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Content:
	//
	//	*GetAndTouchResponse_ContentUncompressed
	//	*GetAndTouchResponse_ContentCompressed
	Content       isGetAndTouchResponse_Content `protobuf_oneof:"content"`
	ContentFlags  uint32                        `protobuf:"varint,6,opt,name=content_flags,json=contentFlags,proto3" json:"content_flags,omitempty"`
	Cas           uint64                        `protobuf:"varint,3,opt,name=cas,proto3" json:"cas,omitempty"`
	Expiry        *timestamppb.Timestamp        `protobuf:"bytes,4,opt,name=expiry,proto3" json:"expiry,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAndTouchResponse) Reset() {
	*x = GetAndTouchResponse{}
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAndTouchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAndTouchResponse) ProtoMessage() {}

func (x *GetAndTouchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAndTouchResponse.ProtoReflect.Descriptor instead.
func (*GetAndTouchResponse) Descriptor() ([]byte, []int) {
	return file_couchbase_kv_v1_kv_proto_rawDescGZIP(), []int{5}
}

func (x *GetAndTouchResponse) GetContent() isGetAndTouchResponse_Content {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *GetAndTouchResponse) GetContentUncompressed() []byte {
	if x != nil {
		if x, ok := x.Content.(*GetAndTouchResponse_ContentUncompressed); ok {
			return x.ContentUncompressed
		}
	}
	return nil
}

func (x *GetAndTouchResponse) GetContentCompressed() []byte {
	if x != nil {
		if x, ok := x.Content.(*GetAndTouchResponse_ContentCompressed); ok {
			return x.ContentCompressed
		}
	}
	return nil
}

func (x *GetAndTouchResponse) GetContentFlags() uint32 {
	if x != nil {
		return x.ContentFlags
	}
	return 0
}

func (x *GetAndTouchResponse) GetCas() uint64 {
	if x != nil {
		return x.Cas
	}
	return 0
}

func (x *GetAndTouchResponse) GetExpiry() *timestamppb.Timestamp {
	if x != nil {
		return x.Expiry
	}
	return nil
}

type isGetAndTouchResponse_Content interface {
	isGetAndTouchResponse_Content()
}

type GetAndTouchResponse_ContentUncompressed struct {
	ContentUncompressed []byte `protobuf:"bytes,1,opt,name=content_uncompressed,json=contentUncompressed,proto3,oneof"`
}

type GetAndTouchResponse_ContentCompressed struct {
	ContentCompressed []byte `protobuf:"bytes,7,opt,name=content_compressed,json=contentCompressed,proto3,oneof"`
}

func (*GetAndTouchResponse_ContentUncompressed) isGetAndTouchResponse_Content() {}

func (*GetAndTouchResponse_ContentCompressed) isGetAndTouchResponse_Content() {}

type GetAndLockRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	BucketName     string                 `protobuf:"bytes,1,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	ScopeName      string                 `protobuf:"bytes,2,opt,name=scope_name,json=scopeName,proto3" json:"scope_name,omitempty"`
	CollectionName string                 `protobuf:"bytes,3,opt,name=collection_name,json=collectionName,proto3" json:"collection_name,omitempty"`
	Key            string                 `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	LockTime       uint32                 `protobuf:"varint,5,opt,name=lock_time,json=lockTime,proto3" json:"lock_time,omitempty"`
	Compression    *CompressionEnabled    `protobuf:"varint,6,opt,name=compression,proto3,enum=couchbase.kv.v1.CompressionEnabled,oneof" json:"compression,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetAndLockRequest) Reset() {
	*x = GetAndLockRequest{}
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAndLockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAndLockRequest) ProtoMessage() {}

func (x *GetAndLockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAndLockRequest.ProtoReflect.Descriptor instead.
func (*GetAndLockRequest) Descriptor() ([]byte, []int) {
	return file_couchbase_kv_v1_kv_proto_rawDescGZIP(), []int{6}
}

func (x *GetAndLockRequest) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *GetAndLockRequest) GetScopeName() string {
	if x != nil {
		return x.ScopeName
	}
	return ""
}

func (x *GetAndLockRequest) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *GetAndLockRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GetAndLockRequest) GetLockTime() uint32 {
	if x != nil {
		return x.LockTime
	}
	return 0
}

func (x *GetAndLockRequest) GetCompression() CompressionEnabled {
	if x != nil && x.Compression != nil {
		return *x.Compression
	}
	return CompressionEnabled_COMPRESSION_ENABLED_OPTIONAL
}

type GetAndLockResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Content:
	//
	//	*GetAndLockResponse_ContentUncompressed
	//	*GetAndLockResponse_ContentCompressed
	Content       isGetAndLockResponse_Content `protobuf_oneof:"content"`
	ContentFlags  uint32                       `protobuf:"varint,6,opt,name=content_flags,json=contentFlags,proto3" json:"content_flags,omitempty"`
	Cas           uint64                       `protobuf:"varint,3,opt,name=cas,proto3" json:"cas,omitempty"`
	Expiry        *timestamppb.Timestamp       `protobuf:"bytes,4,opt,name=expiry,proto3" json:"expiry,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAndLockResponse) Reset() {
	*x = GetAndLockResponse{}
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAndLockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAndLockResponse) ProtoMessage() {}

func (x *GetAndLockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAndLockResponse.ProtoReflect.Descriptor instead.
func (*GetAndLockResponse) Descriptor() ([]byte, []int) {
	return file_couchbase_kv_v1_kv_proto_rawDescGZIP(), []int{7}
}

func (x *GetAndLockResponse) GetContent() isGetAndLockResponse_Content {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *GetAndLockResponse) GetContentUncompressed() []byte {
	if x != nil {
		if x, ok := x.Content.(*GetAndLockResponse_ContentUncompressed); ok {
			return x.ContentUncompressed
		}
	}
	return nil
}

func (x *GetAndLockResponse) GetContentCompressed() []byte {
	if x != nil {
		if x, ok := x.Content.(*GetAndLockResponse_ContentCompressed); ok {
			return x.ContentCompressed
		}
	}
	return nil
}

func (x *GetAndLockResponse) GetContentFlags() uint32 {
	if x != nil {
		return x.ContentFlags
	}
	return 0
}

func (x *GetAndLockResponse) GetCas() uint64 {
	if x != nil {
		return x.Cas
	}
	return 0
}

func (x *GetAndLockResponse) GetExpiry() *timestamppb.Timestamp {
	if x != nil {
		return x.Expiry
	}
	return nil
}

type isGetAndLockResponse_Content interface {
	isGetAndLockResponse_Content()
}

type GetAndLockResponse_ContentUncompressed struct {
	ContentUncompressed []byte `protobuf:"bytes,1,opt,name=content_uncompressed,json=contentUncompressed,proto3,oneof"`
}

type GetAndLockResponse_ContentCompressed struct {
	ContentCompressed []byte `protobuf:"bytes,7,opt,name=content_compressed,json=contentCompressed,proto3,oneof"`
}

func (*GetAndLockResponse_ContentUncompressed) isGetAndLockResponse_Content() {}

func (*GetAndLockResponse_ContentCompressed) isGetAndLockResponse_Content() {}

type UnlockRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	BucketName     string                 `protobuf:"bytes,1,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	ScopeName      string                 `protobuf:"bytes,2,opt,name=scope_name,json=scopeName,proto3" json:"scope_name,omitempty"`
	CollectionName string                 `protobuf:"bytes,3,opt,name=collection_name,json=collectionName,proto3" json:"collection_name,omitempty"`
	Key            string                 `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	Cas            uint64                 `protobuf:"varint,5,opt,name=cas,proto3" json:"cas,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UnlockRequest) Reset() {
	*x = UnlockRequest{}
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlockRequest) ProtoMessage() {}

func (x *UnlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlockRequest.ProtoReflect.Descriptor instead.
func (*UnlockRequest) Descriptor() ([]byte, []int) {
	return file_couchbase_kv_v1_kv_proto_rawDescGZIP(), []int{8}
}

func (x *UnlockRequest) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *UnlockRequest) GetScopeName() string {
	if x != nil {
		return x.ScopeName
	}
	return ""
}

func (x *UnlockRequest) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *UnlockRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *UnlockRequest) GetCas() uint64 {
	if x != nil {
		return x.Cas
	}
	return 0
}

type UnlockResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnlockResponse) Reset() {
	*x = UnlockResponse{}
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlockResponse) ProtoMessage() {}

func (x *UnlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlockResponse.ProtoReflect.Descriptor instead.
func (*UnlockResponse) Descriptor() ([]byte, []int) {
	return file_couchbase_kv_v1_kv_proto_rawDescGZIP(), []int{9}
}

type TouchRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	BucketName     string                 `protobuf:"bytes,1,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	ScopeName      string                 `protobuf:"bytes,2,opt,name=scope_name,json=scopeName,proto3" json:"scope_name,omitempty"`
	CollectionName string                 `protobuf:"bytes,3,opt,name=collection_name,json=collectionName,proto3" json:"collection_name,omitempty"`
	Key            string                 `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	// Types that are valid to be assigned to Expiry:
	//
	//	*TouchRequest_ExpiryTime
	//	*TouchRequest_ExpirySecs
	Expiry        isTouchRequest_Expiry `protobuf_oneof:"expiry"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TouchRequest) Reset() {
	*x = TouchRequest{}
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TouchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TouchRequest) ProtoMessage() {}

func (x *TouchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TouchRequest.ProtoReflect.Descriptor instead.
func (*TouchRequest) Descriptor() ([]byte, []int) {
	return file_couchbase_kv_v1_kv_proto_rawDescGZIP(), []int{10}
}

func (x *TouchRequest) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *TouchRequest) GetScopeName() string {
	if x != nil {
		return x.ScopeName
	}
	return ""
}

func (x *TouchRequest) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *TouchRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *TouchRequest) GetExpiry() isTouchRequest_Expiry {
	if x != nil {
		return x.Expiry
	}
	return nil
}

func (x *TouchRequest) GetExpiryTime() *timestamppb.Timestamp {
	if x != nil {
		if x, ok := x.Expiry.(*TouchRequest_ExpiryTime); ok {
			return x.ExpiryTime
		}
	}
	return nil
}

func (x *TouchRequest) GetExpirySecs() uint32 {
	if x != nil {
		if x, ok := x.Expiry.(*TouchRequest_ExpirySecs); ok {
			return x.ExpirySecs
		}
	}
	return 0
}

type isTouchRequest_Expiry interface {
	isTouchRequest_Expiry()
}

type TouchRequest_ExpiryTime struct {
	ExpiryTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=expiry_time,json=expiryTime,proto3,oneof"`
}

type TouchRequest_ExpirySecs struct {
	ExpirySecs uint32 `protobuf:"varint,6,opt,name=expiry_secs,json=expirySecs,proto3,oneof"`
}

func (*TouchRequest_ExpiryTime) isTouchRequest_Expiry() {}

func (*TouchRequest_ExpirySecs) isTouchRequest_Expiry() {}

type TouchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cas           uint64                 `protobuf:"varint,1,opt,name=cas,proto3" json:"cas,omitempty"`
	MutationToken *MutationToken         `protobuf:"bytes,2,opt,name=mutation_token,json=mutationToken,proto3" json:"mutation_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TouchResponse) Reset() {
	*x = TouchResponse{}
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TouchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TouchResponse) ProtoMessage() {}

func (x *TouchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TouchResponse.ProtoReflect.Descriptor instead.
func (*TouchResponse) Descriptor() ([]byte, []int) {
	return file_couchbase_kv_v1_kv_proto_rawDescGZIP(), []int{11}
}

func (x *TouchResponse) GetCas() uint64 {
	if x != nil {
		return x.Cas
	}
	return 0
}

func (x *TouchResponse) GetMutationToken() *MutationToken {
	if x != nil {
		return x.MutationToken
	}
	return nil
}

type ExistsRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	BucketName     string                 `protobuf:"bytes,1,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	ScopeName      string                 `protobuf:"bytes,2,opt,name=scope_name,json=scopeName,proto3" json:"scope_name,omitempty"`
	CollectionName string                 `protobuf:"bytes,3,opt,name=collection_name,json=collectionName,proto3" json:"collection_name,omitempty"`
	Key            string                 `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ExistsRequest) Reset() {
	*x = ExistsRequest{}
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExistsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistsRequest) ProtoMessage() {}

func (x *ExistsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistsRequest.ProtoReflect.Descriptor instead.
func (*ExistsRequest) Descriptor() ([]byte, []int) {
	return file_couchbase_kv_v1_kv_proto_rawDescGZIP(), []int{12}
}

func (x *ExistsRequest) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *ExistsRequest) GetScopeName() string {
	if x != nil {
		return x.ScopeName
	}
	return ""
}

func (x *ExistsRequest) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *ExistsRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type ExistsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        bool                   `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	Cas           uint64                 `protobuf:"varint,2,opt,name=cas,proto3" json:"cas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExistsResponse) Reset() {
	*x = ExistsResponse{}
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExistsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistsResponse) ProtoMessage() {}

func (x *ExistsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistsResponse.ProtoReflect.Descriptor instead.
func (*ExistsResponse) Descriptor() ([]byte, []int) {
	return file_couchbase_kv_v1_kv_proto_rawDescGZIP(), []int{13}
}

func (x *ExistsResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

func (x *ExistsResponse) GetCas() uint64 {
	if x != nil {
		return x.Cas
	}
	return 0
}

type InsertRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	BucketName     string                 `protobuf:"bytes,1,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	ScopeName      string                 `protobuf:"bytes,2,opt,name=scope_name,json=scopeName,proto3" json:"scope_name,omitempty"`
	CollectionName string                 `protobuf:"bytes,3,opt,name=collection_name,json=collectionName,proto3" json:"collection_name,omitempty"`
	Key            string                 `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	// Types that are valid to be assigned to Content:
	//
	//	*InsertRequest_ContentUncompressed
	//	*InsertRequest_ContentCompressed
	Content      isInsertRequest_Content `protobuf_oneof:"content"`
	ContentFlags uint32                  `protobuf:"varint,11,opt,name=content_flags,json=contentFlags,proto3" json:"content_flags,omitempty"`
	// Types that are valid to be assigned to Expiry:
	//
	//	*InsertRequest_ExpiryTime
	//	*InsertRequest_ExpirySecs
	Expiry          isInsertRequest_Expiry `protobuf_oneof:"expiry"`
	DurabilityLevel *DurabilityLevel       `protobuf:"varint,9,opt,name=durability_level,json=durabilityLevel,proto3,enum=couchbase.kv.v1.DurabilityLevel,oneof" json:"durability_level,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *InsertRequest) Reset() {
	*x = InsertRequest{}
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InsertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertRequest) ProtoMessage() {}

func (x *InsertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertRequest.ProtoReflect.Descriptor instead.
func (*InsertRequest) Descriptor() ([]byte, []int) {
	return file_couchbase_kv_v1_kv_proto_rawDescGZIP(), []int{14}
}

func (x *InsertRequest) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *InsertRequest) GetScopeName() string {
	if x != nil {
		return x.ScopeName
	}
	return ""
}

func (x *InsertRequest) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *InsertRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *InsertRequest) GetContent() isInsertRequest_Content {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *InsertRequest) GetContentUncompressed() []byte {
	if x != nil {
		if x, ok := x.Content.(*InsertRequest_ContentUncompressed); ok {
			return x.ContentUncompressed
		}
	}
	return nil
}

func (x *InsertRequest) GetContentCompressed() []byte {
	if x != nil {
		if x, ok := x.Content.(*InsertRequest_ContentCompressed); ok {
			return x.ContentCompressed
		}
	}
	return nil
}

func (x *InsertRequest) GetContentFlags() uint32 {
	if x != nil {
		return x.ContentFlags
	}
	return 0
}

func (x *InsertRequest) GetExpiry() isInsertRequest_Expiry {
	if x != nil {
		return x.Expiry
	}
	return nil
}

func (x *InsertRequest) GetExpiryTime() *timestamppb.Timestamp {
	if x != nil {
		if x, ok := x.Expiry.(*InsertRequest_ExpiryTime); ok {
			return x.ExpiryTime
		}
	}
	return nil
}

func (x *InsertRequest) GetExpirySecs() uint32 {
	if x != nil {
		if x, ok := x.Expiry.(*InsertRequest_ExpirySecs); ok {
			return x.ExpirySecs
		}
	}
	return 0
}

func (x *InsertRequest) GetDurabilityLevel() DurabilityLevel {
	if x != nil && x.DurabilityLevel != nil {
		return *x.DurabilityLevel
	}
	return DurabilityLevel_DURABILITY_LEVEL_MAJORITY
}

type isInsertRequest_Content interface {
	isInsertRequest_Content()
}

type InsertRequest_ContentUncompressed struct {
	ContentUncompressed []byte `protobuf:"bytes,5,opt,name=content_uncompressed,json=contentUncompressed,proto3,oneof"`
}

type InsertRequest_ContentCompressed struct {
	ContentCompressed []byte `protobuf:"bytes,12,opt,name=content_compressed,json=contentCompressed,proto3,oneof"`
}

func (*InsertRequest_ContentUncompressed) isInsertRequest_Content() {}

func (*InsertRequest_ContentCompressed) isInsertRequest_Content() {}

type isInsertRequest_Expiry interface {
	isInsertRequest_Expiry()
}

type InsertRequest_ExpiryTime struct {
	ExpiryTime *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=expiry_time,json=expiryTime,proto3,oneof"`
}

type InsertRequest_ExpirySecs struct {
	ExpirySecs uint32 `protobuf:"varint,10,opt,name=expiry_secs,json=expirySecs,proto3,oneof"`
}

func (*InsertRequest_ExpiryTime) isInsertRequest_Expiry() {}

func (*InsertRequest_ExpirySecs) isInsertRequest_Expiry() {}

type InsertResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cas           uint64                 `protobuf:"varint,1,opt,name=cas,proto3" json:"cas,omitempty"`
	MutationToken *MutationToken         `protobuf:"bytes,2,opt,name=mutation_token,json=mutationToken,proto3" json:"mutation_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InsertResponse) Reset() {
	*x = InsertResponse{}
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InsertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertResponse) ProtoMessage() {}

func (x *InsertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertResponse.ProtoReflect.Descriptor instead.
func (*InsertResponse) Descriptor() ([]byte, []int) {
	return file_couchbase_kv_v1_kv_proto_rawDescGZIP(), []int{15}
}

func (x *InsertResponse) GetCas() uint64 {
	if x != nil {
		return x.Cas
	}
	return 0
}

func (x *InsertResponse) GetMutationToken() *MutationToken {
	if x != nil {
		return x.MutationToken
	}
	return nil
}

type UpsertRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	BucketName     string                 `protobuf:"bytes,1,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	ScopeName      string                 `protobuf:"bytes,2,opt,name=scope_name,json=scopeName,proto3" json:"scope_name,omitempty"`
	CollectionName string                 `protobuf:"bytes,3,opt,name=collection_name,json=collectionName,proto3" json:"collection_name,omitempty"`
	Key            string                 `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	// Types that are valid to be assigned to Content:
	//
	//	*UpsertRequest_ContentUncompressed
	//	*UpsertRequest_ContentCompressed
	Content      isUpsertRequest_Content `protobuf_oneof:"content"`
	ContentFlags uint32                  `protobuf:"varint,11,opt,name=content_flags,json=contentFlags,proto3" json:"content_flags,omitempty"`
	// Types that are valid to be assigned to Expiry:
	//
	//	*UpsertRequest_ExpiryTime
	//	*UpsertRequest_ExpirySecs
	Expiry                   isUpsertRequest_Expiry `protobuf_oneof:"expiry"`
	PreserveExpiryOnExisting *bool                  `protobuf:"varint,12,opt,name=preserve_expiry_on_existing,json=preserveExpiryOnExisting,proto3,oneof" json:"preserve_expiry_on_existing,omitempty"`
	DurabilityLevel          *DurabilityLevel       `protobuf:"varint,9,opt,name=durability_level,json=durabilityLevel,proto3,enum=couchbase.kv.v1.DurabilityLevel,oneof" json:"durability_level,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *UpsertRequest) Reset() {
	*x = UpsertRequest{}
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpsertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertRequest) ProtoMessage() {}

func (x *UpsertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertRequest.ProtoReflect.Descriptor instead.
func (*UpsertRequest) Descriptor() ([]byte, []int) {
	return file_couchbase_kv_v1_kv_proto_rawDescGZIP(), []int{16}
}

func (x *UpsertRequest) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *UpsertRequest) GetScopeName() string {
	if x != nil {
		return x.ScopeName
	}
	return ""
}

func (x *UpsertRequest) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *UpsertRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *UpsertRequest) GetContent() isUpsertRequest_Content {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *UpsertRequest) GetContentUncompressed() []byte {
	if x != nil {
		if x, ok := x.Content.(*UpsertRequest_ContentUncompressed); ok {
			return x.ContentUncompressed
		}
	}
	return nil
}

func (x *UpsertRequest) GetContentCompressed() []byte {
	if x != nil {
		if x, ok := x.Content.(*UpsertRequest_ContentCompressed); ok {
			return x.ContentCompressed
		}
	}
	return nil
}

func (x *UpsertRequest) GetContentFlags() uint32 {
	if x != nil {
		return x.ContentFlags
	}
	return 0
}

func (x *UpsertRequest) GetExpiry() isUpsertRequest_Expiry {
	if x != nil {
		return x.Expiry
	}
	return nil
}

func (x *UpsertRequest) GetExpiryTime() *timestamppb.Timestamp {
	if x != nil {
		if x, ok := x.Expiry.(*UpsertRequest_ExpiryTime); ok {
			return x.ExpiryTime
		}
	}
	return nil
}

func (x *UpsertRequest) GetExpirySecs() uint32 {
	if x != nil {
		if x, ok := x.Expiry.(*UpsertRequest_ExpirySecs); ok {
			return x.ExpirySecs
		}
	}
	return 0
}

func (x *UpsertRequest) GetPreserveExpiryOnExisting() bool {
	if x != nil && x.PreserveExpiryOnExisting != nil {
		return *x.PreserveExpiryOnExisting
	}
	return false
}

func (x *UpsertRequest) GetDurabilityLevel() DurabilityLevel {
	if x != nil && x.DurabilityLevel != nil {
		return *x.DurabilityLevel
	}
	return DurabilityLevel_DURABILITY_LEVEL_MAJORITY
}

type isUpsertRequest_Content interface {
	isUpsertRequest_Content()
}

type UpsertRequest_ContentUncompressed struct {
	ContentUncompressed []byte `protobuf:"bytes,5,opt,name=content_uncompressed,json=contentUncompressed,proto3,oneof"`
}

type UpsertRequest_ContentCompressed struct {
	ContentCompressed []byte `protobuf:"bytes,13,opt,name=content_compressed,json=contentCompressed,proto3,oneof"`
}

func (*UpsertRequest_ContentUncompressed) isUpsertRequest_Content() {}

func (*UpsertRequest_ContentCompressed) isUpsertRequest_Content() {}

type isUpsertRequest_Expiry interface {
	isUpsertRequest_Expiry()
}

type UpsertRequest_ExpiryTime struct {
	ExpiryTime *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=expiry_time,json=expiryTime,proto3,oneof"`
}

type UpsertRequest_ExpirySecs struct {
	ExpirySecs uint32 `protobuf:"varint,10,opt,name=expiry_secs,json=expirySecs,proto3,oneof"`
}

func (*UpsertRequest_ExpiryTime) isUpsertRequest_Expiry() {}

func (*UpsertRequest_ExpirySecs) isUpsertRequest_Expiry() {}

type UpsertResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cas           uint64                 `protobuf:"varint,1,opt,name=cas,proto3" json:"cas,omitempty"`
	MutationToken *MutationToken         `protobuf:"bytes,2,opt,name=mutation_token,json=mutationToken,proto3" json:"mutation_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpsertResponse) Reset() {
	*x = UpsertResponse{}
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpsertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertResponse) ProtoMessage() {}

func (x *UpsertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertResponse.ProtoReflect.Descriptor instead.
func (*UpsertResponse) Descriptor() ([]byte, []int) {
	return file_couchbase_kv_v1_kv_proto_rawDescGZIP(), []int{17}
}

func (x *UpsertResponse) GetCas() uint64 {
	if x != nil {
		return x.Cas
	}
	return 0
}

func (x *UpsertResponse) GetMutationToken() *MutationToken {
	if x != nil {
		return x.MutationToken
	}
	return nil
}

type ReplaceRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	BucketName     string                 `protobuf:"bytes,1,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	ScopeName      string                 `protobuf:"bytes,2,opt,name=scope_name,json=scopeName,proto3" json:"scope_name,omitempty"`
	CollectionName string                 `protobuf:"bytes,3,opt,name=collection_name,json=collectionName,proto3" json:"collection_name,omitempty"`
	Key            string                 `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	// Types that are valid to be assigned to Content:
	//
	//	*ReplaceRequest_ContentUncompressed
	//	*ReplaceRequest_ContentCompressed
	Content      isReplaceRequest_Content `protobuf_oneof:"content"`
	ContentFlags uint32                   `protobuf:"varint,12,opt,name=content_flags,json=contentFlags,proto3" json:"content_flags,omitempty"`
	Cas          *uint64                  `protobuf:"varint,7,opt,name=cas,proto3,oneof" json:"cas,omitempty"`
	// Types that are valid to be assigned to Expiry:
	//
	//	*ReplaceRequest_ExpiryTime
	//	*ReplaceRequest_ExpirySecs
	Expiry          isReplaceRequest_Expiry `protobuf_oneof:"expiry"`
	DurabilityLevel *DurabilityLevel        `protobuf:"varint,10,opt,name=durability_level,json=durabilityLevel,proto3,enum=couchbase.kv.v1.DurabilityLevel,oneof" json:"durability_level,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ReplaceRequest) Reset() {
	*x = ReplaceRequest{}
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplaceRequest) ProtoMessage() {}

func (x *ReplaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplaceRequest.ProtoReflect.Descriptor instead.
func (*ReplaceRequest) Descriptor() ([]byte, []int) {
	return file_couchbase_kv_v1_kv_proto_rawDescGZIP(), []int{18}
}

func (x *ReplaceRequest) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *ReplaceRequest) GetScopeName() string {
	if x != nil {
		return x.ScopeName
	}
	return ""
}

func (x *ReplaceRequest) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *ReplaceRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ReplaceRequest) GetContent() isReplaceRequest_Content {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *ReplaceRequest) GetContentUncompressed() []byte {
	if x != nil {
		if x, ok := x.Content.(*ReplaceRequest_ContentUncompressed); ok {
			return x.ContentUncompressed
		}
	}
	return nil
}

func (x *ReplaceRequest) GetContentCompressed() []byte {
	if x != nil {
		if x, ok := x.Content.(*ReplaceRequest_ContentCompressed); ok {
			return x.ContentCompressed
		}
	}
	return nil
}

func (x *ReplaceRequest) GetContentFlags() uint32 {
	if x != nil {
		return x.ContentFlags
	}
	return 0
}

func (x *ReplaceRequest) GetCas() uint64 {
	if x != nil && x.Cas != nil {
		return *x.Cas
	}
	return 0
}

func (x *ReplaceRequest) GetExpiry() isReplaceRequest_Expiry {
	if x != nil {
		return x.Expiry
	}
	return nil
}

func (x *ReplaceRequest) GetExpiryTime() *timestamppb.Timestamp {
	if x != nil {
		if x, ok := x.Expiry.(*ReplaceRequest_ExpiryTime); ok {
			return x.ExpiryTime
		}
	}
	return nil
}

func (x *ReplaceRequest) GetExpirySecs() uint32 {
	if x != nil {
		if x, ok := x.Expiry.(*ReplaceRequest_ExpirySecs); ok {
			return x.ExpirySecs
		}
	}
	return 0
}

func (x *ReplaceRequest) GetDurabilityLevel() DurabilityLevel {
	if x != nil && x.DurabilityLevel != nil {
		return *x.DurabilityLevel
	}
	return DurabilityLevel_DURABILITY_LEVEL_MAJORITY
}

type isReplaceRequest_Content interface {
	isReplaceRequest_Content()
}

type ReplaceRequest_ContentUncompressed struct {
	ContentUncompressed []byte `protobuf:"bytes,5,opt,name=content_uncompressed,json=contentUncompressed,proto3,oneof"`
}

type ReplaceRequest_ContentCompressed struct {
	ContentCompressed []byte `protobuf:"bytes,13,opt,name=content_compressed,json=contentCompressed,proto3,oneof"`
}

func (*ReplaceRequest_ContentUncompressed) isReplaceRequest_Content() {}

func (*ReplaceRequest_ContentCompressed) isReplaceRequest_Content() {}

type isReplaceRequest_Expiry interface {
	isReplaceRequest_Expiry()
}

type ReplaceRequest_ExpiryTime struct {
	ExpiryTime *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=expiry_time,json=expiryTime,proto3,oneof"`
}

type ReplaceRequest_ExpirySecs struct {
	ExpirySecs uint32 `protobuf:"varint,11,opt,name=expiry_secs,json=expirySecs,proto3,oneof"`
}

func (*ReplaceRequest_ExpiryTime) isReplaceRequest_Expiry() {}

func (*ReplaceRequest_ExpirySecs) isReplaceRequest_Expiry() {}

type ReplaceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cas           uint64                 `protobuf:"varint,1,opt,name=cas,proto3" json:"cas,omitempty"`
	MutationToken *MutationToken         `protobuf:"bytes,2,opt,name=mutation_token,json=mutationToken,proto3" json:"mutation_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplaceResponse) Reset() {
	*x = ReplaceResponse{}
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplaceResponse) ProtoMessage() {}

func (x *ReplaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplaceResponse.ProtoReflect.Descriptor instead.
func (*ReplaceResponse) Descriptor() ([]byte, []int) {
	return file_couchbase_kv_v1_kv_proto_rawDescGZIP(), []int{19}
}

func (x *ReplaceResponse) GetCas() uint64 {
	if x != nil {
		return x.Cas
	}
	return 0
}

func (x *ReplaceResponse) GetMutationToken() *MutationToken {
	if x != nil {
		return x.MutationToken
	}
	return nil
}

type RemoveRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	BucketName      string                 `protobuf:"bytes,1,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	ScopeName       string                 `protobuf:"bytes,2,opt,name=scope_name,json=scopeName,proto3" json:"scope_name,omitempty"`
	CollectionName  string                 `protobuf:"bytes,3,opt,name=collection_name,json=collectionName,proto3" json:"collection_name,omitempty"`
	Key             string                 `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	Cas             *uint64                `protobuf:"varint,5,opt,name=cas,proto3,oneof" json:"cas,omitempty"`
	DurabilityLevel *DurabilityLevel       `protobuf:"varint,7,opt,name=durability_level,json=durabilityLevel,proto3,enum=couchbase.kv.v1.DurabilityLevel,oneof" json:"durability_level,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RemoveRequest) Reset() {
	*x = RemoveRequest{}
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveRequest) ProtoMessage() {}

func (x *RemoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveRequest.ProtoReflect.Descriptor instead.
func (*RemoveRequest) Descriptor() ([]byte, []int) {
	return file_couchbase_kv_v1_kv_proto_rawDescGZIP(), []int{20}
}

func (x *RemoveRequest) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *RemoveRequest) GetScopeName() string {
	if x != nil {
		return x.ScopeName
	}
	return ""
}

func (x *RemoveRequest) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *RemoveRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *RemoveRequest) GetCas() uint64 {
	if x != nil && x.Cas != nil {
		return *x.Cas
	}
	return 0
}

func (x *RemoveRequest) GetDurabilityLevel() DurabilityLevel {
	if x != nil && x.DurabilityLevel != nil {
		return *x.DurabilityLevel
	}
	return DurabilityLevel_DURABILITY_LEVEL_MAJORITY
}

type RemoveResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cas           uint64                 `protobuf:"varint,1,opt,name=cas,proto3" json:"cas,omitempty"`
	MutationToken *MutationToken         `protobuf:"bytes,2,opt,name=mutation_token,json=mutationToken,proto3" json:"mutation_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveResponse) Reset() {
	*x = RemoveResponse{}
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveResponse) ProtoMessage() {}

func (x *RemoveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveResponse.ProtoReflect.Descriptor instead.
func (*RemoveResponse) Descriptor() ([]byte, []int) {
	return file_couchbase_kv_v1_kv_proto_rawDescGZIP(), []int{21}
}

func (x *RemoveResponse) GetCas() uint64 {
	if x != nil {
		return x.Cas
	}
	return 0
}

func (x *RemoveResponse) GetMutationToken() *MutationToken {
	if x != nil {
		return x.MutationToken
	}
	return nil
}

type IncrementRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	BucketName     string                 `protobuf:"bytes,1,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	ScopeName      string                 `protobuf:"bytes,2,opt,name=scope_name,json=scopeName,proto3" json:"scope_name,omitempty"`
	CollectionName string                 `protobuf:"bytes,3,opt,name=collection_name,json=collectionName,proto3" json:"collection_name,omitempty"`
	Key            string                 `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	Delta          uint64                 `protobuf:"varint,5,opt,name=delta,proto3" json:"delta,omitempty"`
	// Types that are valid to be assigned to Expiry:
	//
	//	*IncrementRequest_ExpiryTime
	//	*IncrementRequest_ExpirySecs
	Expiry          isIncrementRequest_Expiry `protobuf_oneof:"expiry"`
	Initial         *int64                    `protobuf:"varint,7,opt,name=initial,proto3,oneof" json:"initial,omitempty"`
	DurabilityLevel *DurabilityLevel          `protobuf:"varint,9,opt,name=durability_level,json=durabilityLevel,proto3,enum=couchbase.kv.v1.DurabilityLevel,oneof" json:"durability_level,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *IncrementRequest) Reset() {
	*x = IncrementRequest{}
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IncrementRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncrementRequest) ProtoMessage() {}

func (x *IncrementRequest) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncrementRequest.ProtoReflect.Descriptor instead.
func (*IncrementRequest) Descriptor() ([]byte, []int) {
	return file_couchbase_kv_v1_kv_proto_rawDescGZIP(), []int{22}
}

func (x *IncrementRequest) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *IncrementRequest) GetScopeName() string {
	if x != nil {
		return x.ScopeName
	}
	return ""
}

func (x *IncrementRequest) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *IncrementRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *IncrementRequest) GetDelta() uint64 {
	if x != nil {
		return x.Delta
	}
	return 0
}

func (x *IncrementRequest) GetExpiry() isIncrementRequest_Expiry {
	if x != nil {
		return x.Expiry
	}
	return nil
}

func (x *IncrementRequest) GetExpiryTime() *timestamppb.Timestamp {
	if x != nil {
		if x, ok := x.Expiry.(*IncrementRequest_ExpiryTime); ok {
			return x.ExpiryTime
		}
	}
	return nil
}

func (x *IncrementRequest) GetExpirySecs() uint32 {
	if x != nil {
		if x, ok := x.Expiry.(*IncrementRequest_ExpirySecs); ok {
			return x.ExpirySecs
		}
	}
	return 0
}

func (x *IncrementRequest) GetInitial() int64 {
	if x != nil && x.Initial != nil {
		return *x.Initial
	}
	return 0
}

func (x *IncrementRequest) GetDurabilityLevel() DurabilityLevel {
	if x != nil && x.DurabilityLevel != nil {
		return *x.DurabilityLevel
	}
	return DurabilityLevel_DURABILITY_LEVEL_MAJORITY
}

type isIncrementRequest_Expiry interface {
	isIncrementRequest_Expiry()
}

type IncrementRequest_ExpiryTime struct {
	ExpiryTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=expiry_time,json=expiryTime,proto3,oneof"`
}

type IncrementRequest_ExpirySecs struct {
	ExpirySecs uint32 `protobuf:"varint,10,opt,name=expiry_secs,json=expirySecs,proto3,oneof"`
}

func (*IncrementRequest_ExpiryTime) isIncrementRequest_Expiry() {}

func (*IncrementRequest_ExpirySecs) isIncrementRequest_Expiry() {}

type IncrementResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cas           uint64                 `protobuf:"varint,1,opt,name=cas,proto3" json:"cas,omitempty"`
	Content       int64                  `protobuf:"varint,2,opt,name=content,proto3" json:"content,omitempty"`
	MutationToken *MutationToken         `protobuf:"bytes,3,opt,name=mutation_token,json=mutationToken,proto3" json:"mutation_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IncrementResponse) Reset() {
	*x = IncrementResponse{}
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IncrementResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncrementResponse) ProtoMessage() {}

func (x *IncrementResponse) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncrementResponse.ProtoReflect.Descriptor instead.
func (*IncrementResponse) Descriptor() ([]byte, []int) {
	return file_couchbase_kv_v1_kv_proto_rawDescGZIP(), []int{23}
}

func (x *IncrementResponse) GetCas() uint64 {
	if x != nil {
		return x.Cas
	}
	return 0
}

func (x *IncrementResponse) GetContent() int64 {
	if x != nil {
		return x.Content
	}
	return 0
}

func (x *IncrementResponse) GetMutationToken() *MutationToken {
	if x != nil {
		return x.MutationToken
	}
	return nil
}

type DecrementRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	BucketName     string                 `protobuf:"bytes,1,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	ScopeName      string                 `protobuf:"bytes,2,opt,name=scope_name,json=scopeName,proto3" json:"scope_name,omitempty"`
	CollectionName string                 `protobuf:"bytes,3,opt,name=collection_name,json=collectionName,proto3" json:"collection_name,omitempty"`
	Key            string                 `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	Delta          uint64                 `protobuf:"varint,5,opt,name=delta,proto3" json:"delta,omitempty"`
	// Types that are valid to be assigned to Expiry:
	//
	//	*DecrementRequest_ExpiryTime
	//	*DecrementRequest_ExpirySecs
	Expiry          isDecrementRequest_Expiry `protobuf_oneof:"expiry"`
	Initial         *int64                    `protobuf:"varint,7,opt,name=initial,proto3,oneof" json:"initial,omitempty"`
	DurabilityLevel *DurabilityLevel          `protobuf:"varint,9,opt,name=durability_level,json=durabilityLevel,proto3,enum=couchbase.kv.v1.DurabilityLevel,oneof" json:"durability_level,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DecrementRequest) Reset() {
	*x = DecrementRequest{}
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecrementRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecrementRequest) ProtoMessage() {}

func (x *DecrementRequest) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecrementRequest.ProtoReflect.Descriptor instead.
func (*DecrementRequest) Descriptor() ([]byte, []int) {
	return file_couchbase_kv_v1_kv_proto_rawDescGZIP(), []int{24}
}

func (x *DecrementRequest) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *DecrementRequest) GetScopeName() string {
	if x != nil {
		return x.ScopeName
	}
	return ""
}

func (x *DecrementRequest) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *DecrementRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *DecrementRequest) GetDelta() uint64 {
	if x != nil {
		return x.Delta
	}
	return 0
}

func (x *DecrementRequest) GetExpiry() isDecrementRequest_Expiry {
	if x != nil {
		return x.Expiry
	}
	return nil
}

func (x *DecrementRequest) GetExpiryTime() *timestamppb.Timestamp {
	if x != nil {
		if x, ok := x.Expiry.(*DecrementRequest_ExpiryTime); ok {
			return x.ExpiryTime
		}
	}
	return nil
}

func (x *DecrementRequest) GetExpirySecs() uint32 {
	if x != nil {
		if x, ok := x.Expiry.(*DecrementRequest_ExpirySecs); ok {
			return x.ExpirySecs
		}
	}
	return 0
}

func (x *DecrementRequest) GetInitial() int64 {
	if x != nil && x.Initial != nil {
		return *x.Initial
	}
	return 0
}

func (x *DecrementRequest) GetDurabilityLevel() DurabilityLevel {
	if x != nil && x.DurabilityLevel != nil {
		return *x.DurabilityLevel
	}
	return DurabilityLevel_DURABILITY_LEVEL_MAJORITY
}

type isDecrementRequest_Expiry interface {
	isDecrementRequest_Expiry()
}

type DecrementRequest_ExpiryTime struct {
	ExpiryTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=expiry_time,json=expiryTime,proto3,oneof"`
}

type DecrementRequest_ExpirySecs struct {
	ExpirySecs uint32 `protobuf:"varint,10,opt,name=expiry_secs,json=expirySecs,proto3,oneof"`
}

func (*DecrementRequest_ExpiryTime) isDecrementRequest_Expiry() {}

func (*DecrementRequest_ExpirySecs) isDecrementRequest_Expiry() {}

type DecrementResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cas           uint64                 `protobuf:"varint,1,opt,name=cas,proto3" json:"cas,omitempty"`
	Content       int64                  `protobuf:"varint,2,opt,name=content,proto3" json:"content,omitempty"`
	MutationToken *MutationToken         `protobuf:"bytes,3,opt,name=mutation_token,json=mutationToken,proto3" json:"mutation_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecrementResponse) Reset() {
	*x = DecrementResponse{}
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecrementResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecrementResponse) ProtoMessage() {}

func (x *DecrementResponse) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecrementResponse.ProtoReflect.Descriptor instead.
func (*DecrementResponse) Descriptor() ([]byte, []int) {
	return file_couchbase_kv_v1_kv_proto_rawDescGZIP(), []int{25}
}

func (x *DecrementResponse) GetCas() uint64 {
	if x != nil {
		return x.Cas
	}
	return 0
}

func (x *DecrementResponse) GetContent() int64 {
	if x != nil {
		return x.Content
	}
	return 0
}

func (x *DecrementResponse) GetMutationToken() *MutationToken {
	if x != nil {
		return x.MutationToken
	}
	return nil
}

type AppendRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	BucketName      string                 `protobuf:"bytes,1,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	ScopeName       string                 `protobuf:"bytes,2,opt,name=scope_name,json=scopeName,proto3" json:"scope_name,omitempty"`
	CollectionName  string                 `protobuf:"bytes,3,opt,name=collection_name,json=collectionName,proto3" json:"collection_name,omitempty"`
	Key             string                 `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	Content         []byte                 `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	Cas             *uint64                `protobuf:"varint,6,opt,name=cas,proto3,oneof" json:"cas,omitempty"`
	DurabilityLevel *DurabilityLevel       `protobuf:"varint,8,opt,name=durability_level,json=durabilityLevel,proto3,enum=couchbase.kv.v1.DurabilityLevel,oneof" json:"durability_level,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *AppendRequest) Reset() {
	*x = AppendRequest{}
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendRequest) ProtoMessage() {}

func (x *AppendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendRequest.ProtoReflect.Descriptor instead.
func (*AppendRequest) Descriptor() ([]byte, []int) {
	return file_couchbase_kv_v1_kv_proto_rawDescGZIP(), []int{26}
}

func (x *AppendRequest) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *AppendRequest) GetScopeName() string {
	if x != nil {
		return x.ScopeName
	}
	return ""
}

func (x *AppendRequest) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *AppendRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *AppendRequest) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *AppendRequest) GetCas() uint64 {
	if x != nil && x.Cas != nil {
		return *x.Cas
	}
	return 0
}

func (x *AppendRequest) GetDurabilityLevel() DurabilityLevel {
	if x != nil && x.DurabilityLevel != nil {
		return *x.DurabilityLevel
	}
	return DurabilityLevel_DURABILITY_LEVEL_MAJORITY
}

type AppendResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cas           uint64                 `protobuf:"varint,1,opt,name=cas,proto3" json:"cas,omitempty"`
	MutationToken *MutationToken         `protobuf:"bytes,2,opt,name=mutation_token,json=mutationToken,proto3" json:"mutation_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppendResponse) Reset() {
	*x = AppendResponse{}
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendResponse) ProtoMessage() {}

func (x *AppendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendResponse.ProtoReflect.Descriptor instead.
func (*AppendResponse) Descriptor() ([]byte, []int) {
	return file_couchbase_kv_v1_kv_proto_rawDescGZIP(), []int{27}
}

func (x *AppendResponse) GetCas() uint64 {
	if x != nil {
		return x.Cas
	}
	return 0
}

func (x *AppendResponse) GetMutationToken() *MutationToken {
	if x != nil {
		return x.MutationToken
	}
	return nil
}

type PrependRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	BucketName      string                 `protobuf:"bytes,1,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	ScopeName       string                 `protobuf:"bytes,2,opt,name=scope_name,json=scopeName,proto3" json:"scope_name,omitempty"`
	CollectionName  string                 `protobuf:"bytes,3,opt,name=collection_name,json=collectionName,proto3" json:"collection_name,omitempty"`
	Key             string                 `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	Content         []byte                 `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	Cas             *uint64                `protobuf:"varint,6,opt,name=cas,proto3,oneof" json:"cas,omitempty"`
	DurabilityLevel *DurabilityLevel       `protobuf:"varint,8,opt,name=durability_level,json=durabilityLevel,proto3,enum=couchbase.kv.v1.DurabilityLevel,oneof" json:"durability_level,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PrependRequest) Reset() {
	*x = PrependRequest{}
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrependRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrependRequest) ProtoMessage() {}

func (x *PrependRequest) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrependRequest.ProtoReflect.Descriptor instead.
func (*PrependRequest) Descriptor() ([]byte, []int) {
	return file_couchbase_kv_v1_kv_proto_rawDescGZIP(), []int{28}
}

func (x *PrependRequest) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *PrependRequest) GetScopeName() string {
	if x != nil {
		return x.ScopeName
	}
	return ""
}

func (x *PrependRequest) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *PrependRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *PrependRequest) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *PrependRequest) GetCas() uint64 {
	if x != nil && x.Cas != nil {
		return *x.Cas
	}
	return 0
}

func (x *PrependRequest) GetDurabilityLevel() DurabilityLevel {
	if x != nil && x.DurabilityLevel != nil {
		return *x.DurabilityLevel
	}
	return DurabilityLevel_DURABILITY_LEVEL_MAJORITY
}

type PrependResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cas           uint64                 `protobuf:"varint,1,opt,name=cas,proto3" json:"cas,omitempty"`
	MutationToken *MutationToken         `protobuf:"bytes,2,opt,name=mutation_token,json=mutationToken,proto3" json:"mutation_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PrependResponse) Reset() {
	*x = PrependResponse{}
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrependResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrependResponse) ProtoMessage() {}

func (x *PrependResponse) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrependResponse.ProtoReflect.Descriptor instead.
func (*PrependResponse) Descriptor() ([]byte, []int) {
	return file_couchbase_kv_v1_kv_proto_rawDescGZIP(), []int{29}
}

func (x *PrependResponse) GetCas() uint64 {
	if x != nil {
		return x.Cas
	}
	return 0
}

func (x *PrependResponse) GetMutationToken() *MutationToken {
	if x != nil {
		return x.MutationToken
	}
	return nil
}

type LookupInRequest struct {
	state          protoimpl.MessageState  `protogen:"open.v1"`
	BucketName     string                  `protobuf:"bytes,1,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	ScopeName      string                  `protobuf:"bytes,2,opt,name=scope_name,json=scopeName,proto3" json:"scope_name,omitempty"`
	CollectionName string                  `protobuf:"bytes,3,opt,name=collection_name,json=collectionName,proto3" json:"collection_name,omitempty"`
	Key            string                  `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	Specs          []*LookupInRequest_Spec `protobuf:"bytes,5,rep,name=specs,proto3" json:"specs,omitempty"`
	Flags          *LookupInRequest_Flags  `protobuf:"bytes,6,opt,name=flags,proto3,oneof" json:"flags,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *LookupInRequest) Reset() {
	*x = LookupInRequest{}
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LookupInRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupInRequest) ProtoMessage() {}

func (x *LookupInRequest) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookupInRequest.ProtoReflect.Descriptor instead.
func (*LookupInRequest) Descriptor() ([]byte, []int) {
	return file_couchbase_kv_v1_kv_proto_rawDescGZIP(), []int{30}
}

func (x *LookupInRequest) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *LookupInRequest) GetScopeName() string {
	if x != nil {
		return x.ScopeName
	}
	return ""
}

func (x *LookupInRequest) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *LookupInRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *LookupInRequest) GetSpecs() []*LookupInRequest_Spec {
	if x != nil {
		return x.Specs
	}
	return nil
}

func (x *LookupInRequest) GetFlags() *LookupInRequest_Flags {
	if x != nil {
		return x.Flags
	}
	return nil
}

type LookupInResponse struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Specs         []*LookupInResponse_Spec `protobuf:"bytes,1,rep,name=specs,proto3" json:"specs,omitempty"`
	Cas           uint64                   `protobuf:"varint,2,opt,name=cas,proto3" json:"cas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LookupInResponse) Reset() {
	*x = LookupInResponse{}
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LookupInResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupInResponse) ProtoMessage() {}

func (x *LookupInResponse) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookupInResponse.ProtoReflect.Descriptor instead.
func (*LookupInResponse) Descriptor() ([]byte, []int) {
	return file_couchbase_kv_v1_kv_proto_rawDescGZIP(), []int{31}
}

func (x *LookupInResponse) GetSpecs() []*LookupInResponse_Spec {
	if x != nil {
		return x.Specs
	}
	return nil
}

func (x *LookupInResponse) GetCas() uint64 {
	if x != nil {
		return x.Cas
	}
	return 0
}

type MutateInRequest struct {
	state           protoimpl.MessageState         `protogen:"open.v1"`
	BucketName      string                         `protobuf:"bytes,1,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	ScopeName       string                         `protobuf:"bytes,2,opt,name=scope_name,json=scopeName,proto3" json:"scope_name,omitempty"`
	CollectionName  string                         `protobuf:"bytes,3,opt,name=collection_name,json=collectionName,proto3" json:"collection_name,omitempty"`
	Key             string                         `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	Specs           []*MutateInRequest_Spec        `protobuf:"bytes,5,rep,name=specs,proto3" json:"specs,omitempty"`
	StoreSemantic   *MutateInRequest_StoreSemantic `protobuf:"varint,6,opt,name=store_semantic,json=storeSemantic,proto3,enum=couchbase.kv.v1.MutateInRequest_StoreSemantic,oneof" json:"store_semantic,omitempty"`
	DurabilityLevel *DurabilityLevel               `protobuf:"varint,8,opt,name=durability_level,json=durabilityLevel,proto3,enum=couchbase.kv.v1.DurabilityLevel,oneof" json:"durability_level,omitempty"`
	Cas             *uint64                        `protobuf:"varint,9,opt,name=cas,proto3,oneof" json:"cas,omitempty"`
	Flags           *MutateInRequest_Flags         `protobuf:"bytes,10,opt,name=flags,proto3,oneof" json:"flags,omitempty"`
	// Types that are valid to be assigned to Expiry:
	//
	//	*MutateInRequest_ExpiryTime
	//	*MutateInRequest_ExpirySecs
	Expiry        isMutateInRequest_Expiry `protobuf_oneof:"expiry"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MutateInRequest) Reset() {
	*x = MutateInRequest{}
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MutateInRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MutateInRequest) ProtoMessage() {}

func (x *MutateInRequest) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MutateInRequest.ProtoReflect.Descriptor instead.
func (*MutateInRequest) Descriptor() ([]byte, []int) {
	return file_couchbase_kv_v1_kv_proto_rawDescGZIP(), []int{32}
}

func (x *MutateInRequest) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *MutateInRequest) GetScopeName() string {
	if x != nil {
		return x.ScopeName
	}
	return ""
}

func (x *MutateInRequest) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *MutateInRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *MutateInRequest) GetSpecs() []*MutateInRequest_Spec {
	if x != nil {
		return x.Specs
	}
	return nil
}

func (x *MutateInRequest) GetStoreSemantic() MutateInRequest_StoreSemantic {
	if x != nil && x.StoreSemantic != nil {
		return *x.StoreSemantic
	}
	return MutateInRequest_STORE_SEMANTIC_REPLACE
}

func (x *MutateInRequest) GetDurabilityLevel() DurabilityLevel {
	if x != nil && x.DurabilityLevel != nil {
		return *x.DurabilityLevel
	}
	return DurabilityLevel_DURABILITY_LEVEL_MAJORITY
}

func (x *MutateInRequest) GetCas() uint64 {
	if x != nil && x.Cas != nil {
		return *x.Cas
	}
	return 0
}

func (x *MutateInRequest) GetFlags() *MutateInRequest_Flags {
	if x != nil {
		return x.Flags
	}
	return nil
}

func (x *MutateInRequest) GetExpiry() isMutateInRequest_Expiry {
	if x != nil {
		return x.Expiry
	}
	return nil
}

func (x *MutateInRequest) GetExpiryTime() *timestamppb.Timestamp {
	if x != nil {
		if x, ok := x.Expiry.(*MutateInRequest_ExpiryTime); ok {
			return x.ExpiryTime
		}
	}
	return nil
}

func (x *MutateInRequest) GetExpirySecs() uint32 {
	if x != nil {
		if x, ok := x.Expiry.(*MutateInRequest_ExpirySecs); ok {
			return x.ExpirySecs
		}
	}
	return 0
}

type isMutateInRequest_Expiry interface {
	isMutateInRequest_Expiry()
}

type MutateInRequest_ExpiryTime struct {
	ExpiryTime *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=expiry_time,json=expiryTime,proto3,oneof"`
}

type MutateInRequest_ExpirySecs struct {
	ExpirySecs uint32 `protobuf:"varint,12,opt,name=expiry_secs,json=expirySecs,proto3,oneof"`
}

func (*MutateInRequest_ExpiryTime) isMutateInRequest_Expiry() {}

func (*MutateInRequest_ExpirySecs) isMutateInRequest_Expiry() {}

type MutateInResponse struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Specs         []*MutateInResponse_Spec `protobuf:"bytes,1,rep,name=specs,proto3" json:"specs,omitempty"`
	Cas           uint64                   `protobuf:"varint,2,opt,name=cas,proto3" json:"cas,omitempty"`
	MutationToken *MutationToken           `protobuf:"bytes,3,opt,name=mutation_token,json=mutationToken,proto3" json:"mutation_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MutateInResponse) Reset() {
	*x = MutateInResponse{}
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MutateInResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MutateInResponse) ProtoMessage() {}

func (x *MutateInResponse) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MutateInResponse.ProtoReflect.Descriptor instead.
func (*MutateInResponse) Descriptor() ([]byte, []int) {
	return file_couchbase_kv_v1_kv_proto_rawDescGZIP(), []int{33}
}

func (x *MutateInResponse) GetSpecs() []*MutateInResponse_Spec {
	if x != nil {
		return x.Specs
	}
	return nil
}

func (x *MutateInResponse) GetCas() uint64 {
	if x != nil {
		return x.Cas
	}
	return 0
}

func (x *MutateInResponse) GetMutationToken() *MutationToken {
	if x != nil {
		return x.MutationToken
	}
	return nil
}

type GetAllReplicasRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	BucketName     string                 `protobuf:"bytes,1,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	ScopeName      string                 `protobuf:"bytes,2,opt,name=scope_name,json=scopeName,proto3" json:"scope_name,omitempty"`
	CollectionName string                 `protobuf:"bytes,3,opt,name=collection_name,json=collectionName,proto3" json:"collection_name,omitempty"`
	Key            string                 `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetAllReplicasRequest) Reset() {
	*x = GetAllReplicasRequest{}
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllReplicasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllReplicasRequest) ProtoMessage() {}

func (x *GetAllReplicasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllReplicasRequest.ProtoReflect.Descriptor instead.
func (*GetAllReplicasRequest) Descriptor() ([]byte, []int) {
	return file_couchbase_kv_v1_kv_proto_rawDescGZIP(), []int{34}
}

func (x *GetAllReplicasRequest) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *GetAllReplicasRequest) GetScopeName() string {
	if x != nil {
		return x.ScopeName
	}
	return ""
}

func (x *GetAllReplicasRequest) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *GetAllReplicasRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type GetAllReplicasResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsReplica     bool                   `protobuf:"varint,1,opt,name=is_replica,json=isReplica,proto3" json:"is_replica,omitempty"`
	Content       []byte                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	ContentFlags  uint32                 `protobuf:"varint,3,opt,name=content_flags,json=contentFlags,proto3" json:"content_flags,omitempty"`
	Cas           uint64                 `protobuf:"varint,4,opt,name=cas,proto3" json:"cas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAllReplicasResponse) Reset() {
	*x = GetAllReplicasResponse{}
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllReplicasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllReplicasResponse) ProtoMessage() {}

func (x *GetAllReplicasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllReplicasResponse.ProtoReflect.Descriptor instead.
func (*GetAllReplicasResponse) Descriptor() ([]byte, []int) {
	return file_couchbase_kv_v1_kv_proto_rawDescGZIP(), []int{35}
}

func (x *GetAllReplicasResponse) GetIsReplica() bool {
	if x != nil {
		return x.IsReplica
	}
	return false
}

func (x *GetAllReplicasResponse) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *GetAllReplicasResponse) GetContentFlags() uint32 {
	if x != nil {
		return x.ContentFlags
	}
	return 0
}

func (x *GetAllReplicasResponse) GetCas() uint64 {
	if x != nil {
		return x.Cas
	}
	return 0
}

type LookupInRequest_Spec struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Operation     LookupInRequest_Spec_Operation `protobuf:"varint,1,opt,name=operation,proto3,enum=couchbase.kv.v1.LookupInRequest_Spec_Operation" json:"operation,omitempty"`
	Path          string                         `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Flags         *LookupInRequest_Spec_Flags    `protobuf:"bytes,3,opt,name=flags,proto3,oneof" json:"flags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LookupInRequest_Spec) Reset() {
	*x = LookupInRequest_Spec{}
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LookupInRequest_Spec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupInRequest_Spec) ProtoMessage() {}

func (x *LookupInRequest_Spec) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookupInRequest_Spec.ProtoReflect.Descriptor instead.
func (*LookupInRequest_Spec) Descriptor() ([]byte, []int) {
	return file_couchbase_kv_v1_kv_proto_rawDescGZIP(), []int{30, 0}
}

func (x *LookupInRequest_Spec) GetOperation() LookupInRequest_Spec_Operation {
	if x != nil {
		return x.Operation
	}
	return LookupInRequest_Spec_OPERATION_GET
}

func (x *LookupInRequest_Spec) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *LookupInRequest_Spec) GetFlags() *LookupInRequest_Spec_Flags {
	if x != nil {
		return x.Flags
	}
	return nil
}

type LookupInRequest_Flags struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccessDeleted *bool                  `protobuf:"varint,1,opt,name=access_deleted,json=accessDeleted,proto3,oneof" json:"access_deleted,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LookupInRequest_Flags) Reset() {
	*x = LookupInRequest_Flags{}
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LookupInRequest_Flags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupInRequest_Flags) ProtoMessage() {}

func (x *LookupInRequest_Flags) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookupInRequest_Flags.ProtoReflect.Descriptor instead.
func (*LookupInRequest_Flags) Descriptor() ([]byte, []int) {
	return file_couchbase_kv_v1_kv_proto_rawDescGZIP(), []int{30, 1}
}

func (x *LookupInRequest_Flags) GetAccessDeleted() bool {
	if x != nil && x.AccessDeleted != nil {
		return *x.AccessDeleted
	}
	return false
}

type LookupInRequest_Spec_Flags struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Xattr         *bool                  `protobuf:"varint,1,opt,name=xattr,proto3,oneof" json:"xattr,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LookupInRequest_Spec_Flags) Reset() {
	*x = LookupInRequest_Spec_Flags{}
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LookupInRequest_Spec_Flags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupInRequest_Spec_Flags) ProtoMessage() {}

func (x *LookupInRequest_Spec_Flags) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookupInRequest_Spec_Flags.ProtoReflect.Descriptor instead.
func (*LookupInRequest_Spec_Flags) Descriptor() ([]byte, []int) {
	return file_couchbase_kv_v1_kv_proto_rawDescGZIP(), []int{30, 0, 0}
}

func (x *LookupInRequest_Spec_Flags) GetXattr() bool {
	if x != nil && x.Xattr != nil {
		return *x.Xattr
	}
	return false
}

type LookupInResponse_Spec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *status.Status         `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Content       []byte                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LookupInResponse_Spec) Reset() {
	*x = LookupInResponse_Spec{}
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LookupInResponse_Spec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupInResponse_Spec) ProtoMessage() {}

func (x *LookupInResponse_Spec) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookupInResponse_Spec.ProtoReflect.Descriptor instead.
func (*LookupInResponse_Spec) Descriptor() ([]byte, []int) {
	return file_couchbase_kv_v1_kv_proto_rawDescGZIP(), []int{31, 0}
}

func (x *LookupInResponse_Spec) GetStatus() *status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *LookupInResponse_Spec) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type MutateInRequest_Spec struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Operation     MutateInRequest_Spec_Operation `protobuf:"varint,1,opt,name=operation,proto3,enum=couchbase.kv.v1.MutateInRequest_Spec_Operation" json:"operation,omitempty"`
	Path          string                         `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Content       []byte                         `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Flags         *MutateInRequest_Spec_Flags    `protobuf:"bytes,4,opt,name=flags,proto3,oneof" json:"flags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MutateInRequest_Spec) Reset() {
	*x = MutateInRequest_Spec{}
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MutateInRequest_Spec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MutateInRequest_Spec) ProtoMessage() {}

func (x *MutateInRequest_Spec) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MutateInRequest_Spec.ProtoReflect.Descriptor instead.
func (*MutateInRequest_Spec) Descriptor() ([]byte, []int) {
	return file_couchbase_kv_v1_kv_proto_rawDescGZIP(), []int{32, 0}
}

func (x *MutateInRequest_Spec) GetOperation() MutateInRequest_Spec_Operation {
	if x != nil {
		return x.Operation
	}
	return MutateInRequest_Spec_OPERATION_INSERT
}

func (x *MutateInRequest_Spec) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *MutateInRequest_Spec) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *MutateInRequest_Spec) GetFlags() *MutateInRequest_Spec_Flags {
	if x != nil {
		return x.Flags
	}
	return nil
}

type MutateInRequest_Flags struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccessDeleted *bool                  `protobuf:"varint,1,opt,name=access_deleted,json=accessDeleted,proto3,oneof" json:"access_deleted,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MutateInRequest_Flags) Reset() {
	*x = MutateInRequest_Flags{}
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MutateInRequest_Flags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MutateInRequest_Flags) ProtoMessage() {}

func (x *MutateInRequest_Flags) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MutateInRequest_Flags.ProtoReflect.Descriptor instead.
func (*MutateInRequest_Flags) Descriptor() ([]byte, []int) {
	return file_couchbase_kv_v1_kv_proto_rawDescGZIP(), []int{32, 1}
}

func (x *MutateInRequest_Flags) GetAccessDeleted() bool {
	if x != nil && x.AccessDeleted != nil {
		return *x.AccessDeleted
	}
	return false
}

type MutateInRequest_Spec_Flags struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CreatePath    *bool                  `protobuf:"varint,1,opt,name=create_path,json=createPath,proto3,oneof" json:"create_path,omitempty"`
	Xattr         *bool                  `protobuf:"varint,2,opt,name=xattr,proto3,oneof" json:"xattr,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MutateInRequest_Spec_Flags) Reset() {
	*x = MutateInRequest_Spec_Flags{}
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MutateInRequest_Spec_Flags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MutateInRequest_Spec_Flags) ProtoMessage() {}

func (x *MutateInRequest_Spec_Flags) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MutateInRequest_Spec_Flags.ProtoReflect.Descriptor instead.
func (*MutateInRequest_Spec_Flags) Descriptor() ([]byte, []int) {
	return file_couchbase_kv_v1_kv_proto_rawDescGZIP(), []int{32, 0, 0}
}

func (x *MutateInRequest_Spec_Flags) GetCreatePath() bool {
	if x != nil && x.CreatePath != nil {
		return *x.CreatePath
	}
	return false
}

func (x *MutateInRequest_Spec_Flags) GetXattr() bool {
	if x != nil && x.Xattr != nil {
		return *x.Xattr
	}
	return false
}

type MutateInResponse_Spec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       []byte                 `protobuf:"bytes,1,opt,name=content,proto3,oneof" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MutateInResponse_Spec) Reset() {
	*x = MutateInResponse_Spec{}
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MutateInResponse_Spec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MutateInResponse_Spec) ProtoMessage() {}

func (x *MutateInResponse_Spec) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_kv_v1_kv_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MutateInResponse_Spec.ProtoReflect.Descriptor instead.
func (*MutateInResponse_Spec) Descriptor() ([]byte, []int) {
	return file_couchbase_kv_v1_kv_proto_rawDescGZIP(), []int{33, 0}
}

func (x *MutateInResponse_Spec) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

var File_couchbase_kv_v1_kv_proto protoreflect.FileDescriptor

const file_couchbase_kv_v1_kv_proto_rawDesc = "" +
	"\n" +
	"\x18couchbase/kv/v1/kv.proto\x12\x0fcouchbase.kv.v1\x1a\x17google/rpc/status.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"b\n" +
	"\x14LegacyDurabilitySpec\x12%\n" +
	"\x0enum_replicated\x18\x01 \x01(\rR\rnumReplicated\x12#\n" +
	"\rnum_persisted\x18\x02 \x01(\rR\fnumPersisted\"\x89\x01\n" +
	"\rMutationToken\x12\x1f\n" +
	"\vbucket_name\x18\x01 \x01(\tR\n" +
	"bucketName\x12\x1d\n" +
	"\n" +
	"vbucket_id\x18\x02 \x01(\rR\tvbucketId\x12!\n" +
	"\fvbucket_uuid\x18\x03 \x01(\x04R\vvbucketUuid\x12\x15\n" +
	"\x06seq_no\x18\x04 \x01(\x04R\x05seqNo\"\xfd\x01\n" +
	"\n" +
	"GetRequest\x12\x1f\n" +
	"\vbucket_name\x18\x01 \x01(\tR\n" +
	"bucketName\x12\x1d\n" +
	"\n" +
	"scope_name\x18\x02 \x01(\tR\tscopeName\x12'\n" +
	"\x0fcollection_name\x18\x03 \x01(\tR\x0ecollectionName\x12\x10\n" +
	"\x03key\x18\x04 \x01(\tR\x03key\x12\x18\n" +
	"\aproject\x18\x05 \x03(\tR\aproject\x12J\n" +
	"\vcompression\x18\x06 \x01(\x0e2#.couchbase.kv.v1.CompressionEnabledH\x00R\vcompression\x88\x01\x01B\x0e\n" +
	"\f_compression\"\xf5\x01\n" +
	"\vGetResponse\x123\n" +
	"\x14content_uncompressed\x18\x01 \x01(\fH\x00R\x13contentUncompressed\x12/\n" +
	"\x12content_compressed\x18\a \x01(\fH\x00R\x11contentCompressed\x12#\n" +
	"\rcontent_flags\x18\x06 \x01(\rR\fcontentFlags\x12\x10\n" +
	"\x03cas\x18\x03 \x01(\x04R\x03cas\x122\n" +
	"\x06expiry\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x06expiryB\t\n" +
	"\acontentJ\x04\b\x02\x10\x03J\x04\b\x05\x10\x06\"\xd7\x02\n" +
	"\x12GetAndTouchRequest\x12\x1f\n" +
	"\vbucket_name\x18\x01 \x01(\tR\n" +
	"bucketName\x12\x1d\n" +
	"\n" +
	"scope_name\x18\x02 \x01(\tR\tscopeName\x12'\n" +
	"\x0fcollection_name\x18\x03 \x01(\tR\x0ecollectionName\x12\x10\n" +
	"\x03key\x18\x04 \x01(\tR\x03key\x12=\n" +
	"\vexpiry_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampH\x00R\n" +
	"expiryTime\x12!\n" +
	"\vexpiry_secs\x18\x06 \x01(\rH\x00R\n" +
	"expirySecs\x12J\n" +
	"\vcompression\x18\a \x01(\x0e2#.couchbase.kv.v1.CompressionEnabledH\x01R\vcompression\x88\x01\x01B\b\n" +
	"\x06expiryB\x0e\n" +
	"\f_compression\"\xfd\x01\n" +
	"\x13GetAndTouchResponse\x123\n" +
	"\x14content_uncompressed\x18\x01 \x01(\fH\x00R\x13contentUncompressed\x12/\n" +
	"\x12content_compressed\x18\a \x01(\fH\x00R\x11contentCompressed\x12#\n" +
	"\rcontent_flags\x18\x06 \x01(\rR\fcontentFlags\x12\x10\n" +
	"\x03cas\x18\x03 \x01(\x04R\x03cas\x122\n" +
	"\x06expiry\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x06expiryB\t\n" +
	"\acontentJ\x04\b\x02\x10\x03J\x04\b\x05\x10\x06\"\x87\x02\n" +
	"\x11GetAndLockRequest\x12\x1f\n" +
	"\vbucket_name\x18\x01 \x01(\tR\n" +
	"bucketName\x12\x1d\n" +
	"\n" +
	"scope_name\x18\x02 \x01(\tR\tscopeName\x12'\n" +
	"\x0fcollection_name\x18\x03 \x01(\tR\x0ecollectionName\x12\x10\n" +
	"\x03key\x18\x04 \x01(\tR\x03key\x12\x1b\n" +
	"\tlock_time\x18\x05 \x01(\rR\blockTime\x12J\n" +
	"\vcompression\x18\x06 \x01(\x0e2#.couchbase.kv.v1.CompressionEnabledH\x00R\vcompression\x88\x01\x01B\x0e\n" +
	"\f_compression\"\xfc\x01\n" +
	"\x12GetAndLockResponse\x123\n" +
	"\x14content_uncompressed\x18\x01 \x01(\fH\x00R\x13contentUncompressed\x12/\n" +
	"\x12content_compressed\x18\a \x01(\fH\x00R\x11contentCompressed\x12#\n" +
	"\rcontent_flags\x18\x06 \x01(\rR\fcontentFlags\x12\x10\n" +
	"\x03cas\x18\x03 \x01(\x04R\x03cas\x122\n" +
	"\x06expiry\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x06expiryB\t\n" +
	"\acontentJ\x04\b\x02\x10\x03J\x04\b\x05\x10\x06\"\x9c\x01\n" +
	"\rUnlockRequest\x12\x1f\n" +
	"\vbucket_name\x18\x01 \x01(\tR\n" +
	"bucketName\x12\x1d\n" +
	"\n" +
	"scope_name\x18\x02 \x01(\tR\tscopeName\x12'\n" +
	"\x0fcollection_name\x18\x03 \x01(\tR\x0ecollectionName\x12\x10\n" +
	"\x03key\x18\x04 \x01(\tR\x03key\x12\x10\n" +
	"\x03cas\x18\x05 \x01(\x04R\x03cas\"\x10\n" +
	"\x0eUnlockResponse\"\xf5\x01\n" +
	"\fTouchRequest\x12\x1f\n" +
	"\vbucket_name\x18\x01 \x01(\tR\n" +
	"bucketName\x12\x1d\n" +
	"\n" +
	"scope_name\x18\x02 \x01(\tR\tscopeName\x12'\n" +
	"\x0fcollection_name\x18\x03 \x01(\tR\x0ecollectionName\x12\x10\n" +
	"\x03key\x18\x04 \x01(\tR\x03key\x12=\n" +
	"\vexpiry_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampH\x00R\n" +
	"expiryTime\x12!\n" +
	"\vexpiry_secs\x18\x06 \x01(\rH\x00R\n" +
	"expirySecsB\b\n" +
	"\x06expiry\"h\n" +
	"\rTouchResponse\x12\x10\n" +
	"\x03cas\x18\x01 \x01(\x04R\x03cas\x12E\n" +
	"\x0emutation_token\x18\x02 \x01(\v2\x1e.couchbase.kv.v1.MutationTokenR\rmutationToken\"\x8a\x01\n" +
	"\rExistsRequest\x12\x1f\n" +
	"\vbucket_name\x18\x01 \x01(\tR\n" +
	"bucketName\x12\x1d\n" +
	"\n" +
	"scope_name\x18\x02 \x01(\tR\tscopeName\x12'\n" +
	"\x0fcollection_name\x18\x03 \x01(\tR\x0ecollectionName\x12\x10\n" +
	"\x03key\x18\x04 \x01(\tR\x03key\":\n" +
	"\x0eExistsResponse\x12\x16\n" +
	"\x06result\x18\x01 \x01(\bR\x06result\x12\x10\n" +
	"\x03cas\x18\x02 \x01(\x04R\x03cas\"\xf9\x03\n" +
	"\rInsertRequest\x12\x1f\n" +
	"\vbucket_name\x18\x01 \x01(\tR\n" +
	"bucketName\x12\x1d\n" +
	"\n" +
	"scope_name\x18\x02 \x01(\tR\tscopeName\x12'\n" +
	"\x0fcollection_name\x18\x03 \x01(\tR\x0ecollectionName\x12\x10\n" +
	"\x03key\x18\x04 \x01(\tR\x03key\x123\n" +
	"\x14content_uncompressed\x18\x05 \x01(\fH\x00R\x13contentUncompressed\x12/\n" +
	"\x12content_compressed\x18\f \x01(\fH\x00R\x11contentCompressed\x12#\n" +
	"\rcontent_flags\x18\v \x01(\rR\fcontentFlags\x12=\n" +
	"\vexpiry_time\x18\a \x01(\v2\x1a.google.protobuf.TimestampH\x01R\n" +
	"expiryTime\x12!\n" +
	"\vexpiry_secs\x18\n" +
	" \x01(\rH\x01R\n" +
	"expirySecs\x12P\n" +
	"\x10durability_level\x18\t \x01(\x0e2 .couchbase.kv.v1.DurabilityLevelH\x02R\x0fdurabilityLevel\x88\x01\x01B\t\n" +
	"\acontentB\b\n" +
	"\x06expiryB\x13\n" +
	"\x11_durability_levelJ\x04\b\x06\x10\a\"i\n" +
	"\x0eInsertResponse\x12\x10\n" +
	"\x03cas\x18\x01 \x01(\x04R\x03cas\x12E\n" +
	"\x0emutation_token\x18\x02 \x01(\v2\x1e.couchbase.kv.v1.MutationTokenR\rmutationToken\"\xdd\x04\n" +
	"\rUpsertRequest\x12\x1f\n" +
	"\vbucket_name\x18\x01 \x01(\tR\n" +
	"bucketName\x12\x1d\n" +
	"\n" +
	"scope_name\x18\x02 \x01(\tR\tscopeName\x12'\n" +
	"\x0fcollection_name\x18\x03 \x01(\tR\x0ecollectionName\x12\x10\n" +
	"\x03key\x18\x04 \x01(\tR\x03key\x123\n" +
	"\x14content_uncompressed\x18\x05 \x01(\fH\x00R\x13contentUncompressed\x12/\n" +
	"\x12content_compressed\x18\r \x01(\fH\x00R\x11contentCompressed\x12#\n" +
	"\rcontent_flags\x18\v \x01(\rR\fcontentFlags\x12=\n" +
	"\vexpiry_time\x18\a \x01(\v2\x1a.google.protobuf.TimestampH\x01R\n" +
	"expiryTime\x12!\n" +
	"\vexpiry_secs\x18\n" +
	" \x01(\rH\x01R\n" +
	"expirySecs\x12B\n" +
	"\x1bpreserve_expiry_on_existing\x18\f \x01(\bH\x02R\x18preserveExpiryOnExisting\x88\x01\x01\x12P\n" +
	"\x10durability_level\x18\t \x01(\x0e2 .couchbase.kv.v1.DurabilityLevelH\x03R\x0fdurabilityLevel\x88\x01\x01B\t\n" +
	"\acontentB\b\n" +
	"\x06expiryB\x1e\n" +
	"\x1c_preserve_expiry_on_existingB\x13\n" +
	"\x11_durability_levelJ\x04\b\x06\x10\a\"i\n" +
	"\x0eUpsertResponse\x12\x10\n" +
	"\x03cas\x18\x01 \x01(\x04R\x03cas\x12E\n" +
	"\x0emutation_token\x18\x02 \x01(\v2\x1e.couchbase.kv.v1.MutationTokenR\rmutationToken\"\x99\x04\n" +
	"\x0eReplaceRequest\x12\x1f\n" +
	"\vbucket_name\x18\x01 \x01(\tR\n" +
	"bucketName\x12\x1d\n" +
	"\n" +
	"scope_name\x18\x02 \x01(\tR\tscopeName\x12'\n" +
	"\x0fcollection_name\x18\x03 \x01(\tR\x0ecollectionName\x12\x10\n" +
	"\x03key\x18\x04 \x01(\tR\x03key\x123\n" +
	"\x14content_uncompressed\x18\x05 \x01(\fH\x00R\x13contentUncompressed\x12/\n" +
	"\x12content_compressed\x18\r \x01(\fH\x00R\x11contentCompressed\x12#\n" +
	"\rcontent_flags\x18\f \x01(\rR\fcontentFlags\x12\x15\n" +
	"\x03cas\x18\a \x01(\x04H\x02R\x03cas\x88\x01\x01\x12=\n" +
	"\vexpiry_time\x18\b \x01(\v2\x1a.google.protobuf.TimestampH\x01R\n" +
	"expiryTime\x12!\n" +
	"\vexpiry_secs\x18\v \x01(\rH\x01R\n" +
	"expirySecs\x12P\n" +
	"\x10durability_level\x18\n" +
	" \x01(\x0e2 .couchbase.kv.v1.DurabilityLevelH\x03R\x0fdurabilityLevel\x88\x01\x01B\t\n" +
	"\acontentB\b\n" +
	"\x06expiryB\x06\n" +
	"\x04_casB\x13\n" +
	"\x11_durability_levelJ\x04\b\x06\x10\a\"j\n" +
	"\x0fReplaceResponse\x12\x10\n" +
	"\x03cas\x18\x01 \x01(\x04R\x03cas\x12E\n" +
	"\x0emutation_token\x18\x02 \x01(\v2\x1e.couchbase.kv.v1.MutationTokenR\rmutationToken\"\x90\x02\n" +
	"\rRemoveRequest\x12\x1f\n" +
	"\vbucket_name\x18\x01 \x01(\tR\n" +
	"bucketName\x12\x1d\n" +
	"\n" +
	"scope_name\x18\x02 \x01(\tR\tscopeName\x12'\n" +
	"\x0fcollection_name\x18\x03 \x01(\tR\x0ecollectionName\x12\x10\n" +
	"\x03key\x18\x04 \x01(\tR\x03key\x12\x15\n" +
	"\x03cas\x18\x05 \x01(\x04H\x00R\x03cas\x88\x01\x01\x12P\n" +
	"\x10durability_level\x18\a \x01(\x0e2 .couchbase.kv.v1.DurabilityLevelH\x01R\x0fdurabilityLevel\x88\x01\x01B\x06\n" +
	"\x04_casB\x13\n" +
	"\x11_durability_level\"i\n" +
	"\x0eRemoveResponse\x12\x10\n" +
	"\x03cas\x18\x01 \x01(\x04R\x03cas\x12E\n" +
	"\x0emutation_token\x18\x02 \x01(\v2\x1e.couchbase.kv.v1.MutationTokenR\rmutationToken\"\xa1\x03\n" +
	"\x10IncrementRequest\x12\x1f\n" +
	"\vbucket_name\x18\x01 \x01(\tR\n" +
	"bucketName\x12\x1d\n" +
	"\n" +
	"scope_name\x18\x02 \x01(\tR\tscopeName\x12'\n" +
	"\x0fcollection_name\x18\x03 \x01(\tR\x0ecollectionName\x12\x10\n" +
	"\x03key\x18\x04 \x01(\tR\x03key\x12\x14\n" +
	"\x05delta\x18\x05 \x01(\x04R\x05delta\x12=\n" +
	"\vexpiry_time\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampH\x00R\n" +
	"expiryTime\x12!\n" +
	"\vexpiry_secs\x18\n" +
	" \x01(\rH\x00R\n" +
	"expirySecs\x12\x1d\n" +
	"\ainitial\x18\a \x01(\x03H\x01R\ainitial\x88\x01\x01\x12P\n" +
	"\x10durability_level\x18\t \x01(\x0e2 .couchbase.kv.v1.DurabilityLevelH\x02R\x0fdurabilityLevel\x88\x01\x01B\b\n" +
	"\x06expiryB\n" +
	"\n" +
	"\b_initialB\x13\n" +
	"\x11_durability_level\"\x86\x01\n" +
	"\x11IncrementResponse\x12\x10\n" +
	"\x03cas\x18\x01 \x01(\x04R\x03cas\x12\x18\n" +
	"\acontent\x18\x02 \x01(\x03R\acontent\x12E\n" +
	"\x0emutation_token\x18\x03 \x01(\v2\x1e.couchbase.kv.v1.MutationTokenR\rmutationToken\"\xa1\x03\n" +
	"\x10DecrementRequest\x12\x1f\n" +
	"\vbucket_name\x18\x01 \x01(\tR\n" +
	"bucketName\x12\x1d\n" +
	"\n" +
	"scope_name\x18\x02 \x01(\tR\tscopeName\x12'\n" +
	"\x0fcollection_name\x18\x03 \x01(\tR\x0ecollectionName\x12\x10\n" +
	"\x03key\x18\x04 \x01(\tR\x03key\x12\x14\n" +
	"\x05delta\x18\x05 \x01(\x04R\x05delta\x12=\n" +
	"\vexpiry_time\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampH\x00R\n" +
	"expiryTime\x12!\n" +
	"\vexpiry_secs\x18\n" +
	" \x01(\rH\x00R\n" +
	"expirySecs\x12\x1d\n" +
	"\ainitial\x18\a \x01(\x03H\x01R\ainitial\x88\x01\x01\x12P\n" +
	"\x10durability_level\x18\t \x01(\x0e2 .couchbase.kv.v1.DurabilityLevelH\x02R\x0fdurabilityLevel\x88\x01\x01B\b\n" +
	"\x06expiryB\n" +
	"\n" +
	"\b_initialB\x13\n" +
	"\x11_durability_level\"\x86\x01\n" +
	"\x11DecrementResponse\x12\x10\n" +
	"\x03cas\x18\x01 \x01(\x04R\x03cas\x12\x18\n" +
	"\acontent\x18\x02 \x01(\x03R\acontent\x12E\n" +
	"\x0emutation_token\x18\x03 \x01(\v2\x1e.couchbase.kv.v1.MutationTokenR\rmutationToken\"\xaa\x02\n" +
	"\rAppendRequest\x12\x1f\n" +
	"\vbucket_name\x18\x01 \x01(\tR\n" +
	"bucketName\x12\x1d\n" +
	"\n" +
	"scope_name\x18\x02 \x01(\tR\tscopeName\x12'\n" +
	"\x0fcollection_name\x18\x03 \x01(\tR\x0ecollectionName\x12\x10\n" +
	"\x03key\x18\x04 \x01(\tR\x03key\x12\x18\n" +
	"\acontent\x18\x05 \x01(\fR\acontent\x12\x15\n" +
	"\x03cas\x18\x06 \x01(\x04H\x00R\x03cas\x88\x01\x01\x12P\n" +
	"\x10durability_level\x18\b \x01(\x0e2 .couchbase.kv.v1.DurabilityLevelH\x01R\x0fdurabilityLevel\x88\x01\x01B\x06\n" +
	"\x04_casB\x13\n" +
	"\x11_durability_level\"i\n" +
	"\x0eAppendResponse\x12\x10\n" +
	"\x03cas\x18\x01 \x01(\x04R\x03cas\x12E\n" +
	"\x0emutation_token\x18\x02 \x01(\v2\x1e.couchbase.kv.v1.MutationTokenR\rmutationToken\"\xab\x02\n" +
	"\x0ePrependRequest\x12\x1f\n" +
	"\vbucket_name\x18\x01 \x01(\tR\n" +
	"bucketName\x12\x1d\n" +
	"\n" +
	"scope_name\x18\x02 \x01(\tR\tscopeName\x12'\n" +
	"\x0fcollection_name\x18\x03 \x01(\tR\x0ecollectionName\x12\x10\n" +
	"\x03key\x18\x04 \x01(\tR\x03key\x12\x18\n" +
	"\acontent\x18\x05 \x01(\fR\acontent\x12\x15\n" +
	"\x03cas\x18\x06 \x01(\x04H\x00R\x03cas\x88\x01\x01\x12P\n" +
	"\x10durability_level\x18\b \x01(\x0e2 .couchbase.kv.v1.DurabilityLevelH\x01R\x0fdurabilityLevel\x88\x01\x01B\x06\n" +
	"\x04_casB\x13\n" +
	"\x11_durability_level\"j\n" +
	"\x0fPrependResponse\x12\x10\n" +
	"\x03cas\x18\x01 \x01(\x04R\x03cas\x12E\n" +
	"\x0emutation_token\x18\x02 \x01(\v2\x1e.couchbase.kv.v1.MutationTokenR\rmutationToken\"\x95\x05\n" +
	"\x0fLookupInRequest\x12\x1f\n" +
	"\vbucket_name\x18\x01 \x01(\tR\n" +
	"bucketName\x12\x1d\n" +
	"\n" +
	"scope_name\x18\x02 \x01(\tR\tscopeName\x12'\n" +
	"\x0fcollection_name\x18\x03 \x01(\tR\x0ecollectionName\x12\x10\n" +
	"\x03key\x18\x04 \x01(\tR\x03key\x12;\n" +
	"\x05specs\x18\x05 \x03(\v2%.couchbase.kv.v1.LookupInRequest.SpecR\x05specs\x12A\n" +
	"\x05flags\x18\x06 \x01(\v2&.couchbase.kv.v1.LookupInRequest.FlagsH\x00R\x05flags\x88\x01\x01\x1a\xb4\x02\n" +
	"\x04Spec\x12M\n" +
	"\toperation\x18\x01 \x01(\x0e2/.couchbase.kv.v1.LookupInRequest.Spec.OperationR\toperation\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x12F\n" +
	"\x05flags\x18\x03 \x01(\v2+.couchbase.kv.v1.LookupInRequest.Spec.FlagsH\x00R\x05flags\x88\x01\x01\x1a,\n" +
	"\x05Flags\x12\x19\n" +
	"\x05xattr\x18\x01 \x01(\bH\x00R\x05xattr\x88\x01\x01B\b\n" +
	"\x06_xattr\"I\n" +
	"\tOperation\x12\x11\n" +
	"\rOPERATION_GET\x10\x00\x12\x14\n" +
	"\x10OPERATION_EXISTS\x10\x01\x12\x13\n" +
	"\x0fOPERATION_COUNT\x10\x02B\b\n" +
	"\x06_flags\x1aF\n" +
	"\x05Flags\x12*\n" +
	"\x0eaccess_deleted\x18\x01 \x01(\bH\x00R\raccessDeleted\x88\x01\x01B\x11\n" +
	"\x0f_access_deletedB\b\n" +
	"\x06_flags\"\xb0\x01\n" +
	"\x10LookupInResponse\x12<\n" +
	"\x05specs\x18\x01 \x03(\v2&.couchbase.kv.v1.LookupInResponse.SpecR\x05specs\x12\x10\n" +
	"\x03cas\x18\x02 \x01(\x04R\x03cas\x1aL\n" +
	"\x04Spec\x12*\n" +
	"\x06status\x18\x01 \x01(\v2\x12.google.rpc.StatusR\x06status\x12\x18\n" +
	"\acontent\x18\x02 \x01(\fR\acontent\"\xd1\n" +
	"\n" +
	"\x0fMutateInRequest\x12\x1f\n" +
	"\vbucket_name\x18\x01 \x01(\tR\n" +
	"bucketName\x12\x1d\n" +
	"\n" +
	"scope_name\x18\x02 \x01(\tR\tscopeName\x12'\n" +
	"\x0fcollection_name\x18\x03 \x01(\tR\x0ecollectionName\x12\x10\n" +
	"\x03key\x18\x04 \x01(\tR\x03key\x12;\n" +
	"\x05specs\x18\x05 \x03(\v2%.couchbase.kv.v1.MutateInRequest.SpecR\x05specs\x12Z\n" +
	"\x0estore_semantic\x18\x06 \x01(\x0e2..couchbase.kv.v1.MutateInRequest.StoreSemanticH\x01R\rstoreSemantic\x88\x01\x01\x12P\n" +
	"\x10durability_level\x18\b \x01(\x0e2 .couchbase.kv.v1.DurabilityLevelH\x02R\x0fdurabilityLevel\x88\x01\x01\x12\x15\n" +
	"\x03cas\x18\t \x01(\x04H\x03R\x03cas\x88\x01\x01\x12A\n" +
	"\x05flags\x18\n" +
	" \x01(\v2&.couchbase.kv.v1.MutateInRequest.FlagsH\x04R\x05flags\x88\x01\x01\x12=\n" +
	"\vexpiry_time\x18\v \x01(\v2\x1a.google.protobuf.TimestampH\x00R\n" +
	"expiryTime\x12!\n" +
	"\vexpiry_secs\x18\f \x01(\rH\x00R\n" +
	"expirySecs\x1a\xac\x04\n" +
	"\x04Spec\x12M\n" +
	"\toperation\x18\x01 \x01(\x0e2/.couchbase.kv.v1.MutateInRequest.Spec.OperationR\toperation\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x12\x18\n" +
	"\acontent\x18\x03 \x01(\fR\acontent\x12F\n" +
	"\x05flags\x18\x04 \x01(\v2+.couchbase.kv.v1.MutateInRequest.Spec.FlagsH\x00R\x05flags\x88\x01\x01\x1ab\n" +
	"\x05Flags\x12$\n" +
	"\vcreate_path\x18\x01 \x01(\bH\x00R\n" +
	"createPath\x88\x01\x01\x12\x19\n" +
	"\x05xattr\x18\x02 \x01(\bH\x01R\x05xattr\x88\x01\x01B\x0e\n" +
	"\f_create_pathB\b\n" +
	"\x06_xattr\"\xf0\x01\n" +
	"\tOperation\x12\x14\n" +
	"\x10OPERATION_INSERT\x10\x00\x12\x14\n" +
	"\x10OPERATION_UPSERT\x10\x01\x12\x15\n" +
	"\x11OPERATION_REPLACE\x10\x02\x12\x14\n" +
	"\x10OPERATION_REMOVE\x10\x03\x12\x1a\n" +
	"\x16OPERATION_ARRAY_APPEND\x10\x04\x12\x1b\n" +
	"\x17OPERATION_ARRAY_PREPEND\x10\x05\x12\x1a\n" +
	"\x16OPERATION_ARRAY_INSERT\x10\x06\x12\x1e\n" +
	"\x1aOPERATION_ARRAY_ADD_UNIQUE\x10\a\x12\x15\n" +
	"\x11OPERATION_COUNTER\x10\bB\b\n" +
	"\x06_flags\x1aF\n" +
	"\x05Flags\x12*\n" +
	"\x0eaccess_deleted\x18\x01 \x01(\bH\x00R\raccessDeleted\x88\x01\x01B\x11\n" +
	"\x0f_access_deleted\"a\n" +
	"\rStoreSemantic\x12\x1a\n" +
	"\x16STORE_SEMANTIC_REPLACE\x10\x00\x12\x19\n" +
	"\x15STORE_SEMANTIC_UPSERT\x10\x01\x12\x19\n" +
	"\x15STORE_SEMANTIC_INSERT\x10\x02B\b\n" +
	"\x06expiryB\x11\n" +
	"\x0f_store_semanticB\x13\n" +
	"\x11_durability_levelB\x06\n" +
	"\x04_casB\b\n" +
	"\x06_flags\"\xdc\x01\n" +
	"\x10MutateInResponse\x12<\n" +
	"\x05specs\x18\x01 \x03(\v2&.couchbase.kv.v1.MutateInResponse.SpecR\x05specs\x12\x10\n" +
	"\x03cas\x18\x02 \x01(\x04R\x03cas\x12E\n" +
	"\x0emutation_token\x18\x03 \x01(\v2\x1e.couchbase.kv.v1.MutationTokenR\rmutationToken\x1a1\n" +
	"\x04Spec\x12\x1d\n" +
	"\acontent\x18\x01 \x01(\fH\x00R\acontent\x88\x01\x01B\n" +
	"\n" +
	"\b_content\"\x92\x01\n" +
	"\x15GetAllReplicasRequest\x12\x1f\n" +
	"\vbucket_name\x18\x01 \x01(\tR\n" +
	"bucketName\x12\x1d\n" +
	"\n" +
	"scope_name\x18\x02 \x01(\tR\tscopeName\x12'\n" +
	"\x0fcollection_name\x18\x03 \x01(\tR\x0ecollectionName\x12\x10\n" +
	"\x03key\x18\x04 \x01(\tR\x03key\"\x88\x01\n" +
	"\x16GetAllReplicasResponse\x12\x1d\n" +
	"\n" +
	"is_replica\x18\x01 \x01(\bR\tisReplica\x12\x18\n" +
	"\acontent\x18\x02 \x01(\fR\acontent\x12#\n" +
	"\rcontent_flags\x18\x03 \x01(\rR\fcontentFlags\x12\x10\n" +
	"\x03cas\x18\x04 \x01(\x04R\x03cas*\x8f\x01\n" +
	"\x0fDurabilityLevel\x12\x1d\n" +
	"\x19DURABILITY_LEVEL_MAJORITY\x10\x00\x123\n" +
	"/DURABILITY_LEVEL_MAJORITY_AND_PERSIST_TO_ACTIVE\x10\x01\x12(\n" +
	"$DURABILITY_LEVEL_PERSIST_TO_MAJORITY\x10\x02*V\n" +
	"\x12CompressionEnabled\x12 \n" +
	"\x1cCOMPRESSION_ENABLED_OPTIONAL\x10\x00\x12\x1e\n" +
	"\x1aCOMPRESSION_ENABLED_ALWAYS\x10\x012\xf5\n" +
	"\n" +
	"\tKvService\x12B\n" +
	"\x03Get\x12\x1b.couchbase.kv.v1.GetRequest\x1a\x1c.couchbase.kv.v1.GetResponse\"\x00\x12Z\n" +
	"\vGetAndTouch\x12#.couchbase.kv.v1.GetAndTouchRequest\x1a$.couchbase.kv.v1.GetAndTouchResponse\"\x00\x12W\n" +
	"\n" +
	"GetAndLock\x12\".couchbase.kv.v1.GetAndLockRequest\x1a#.couchbase.kv.v1.GetAndLockResponse\"\x00\x12K\n" +
	"\x06Unlock\x12\x1e.couchbase.kv.v1.UnlockRequest\x1a\x1f.couchbase.kv.v1.UnlockResponse\"\x00\x12H\n" +
	"\x05Touch\x12\x1d.couchbase.kv.v1.TouchRequest\x1a\x1e.couchbase.kv.v1.TouchResponse\"\x00\x12K\n" +
	"\x06Exists\x12\x1e.couchbase.kv.v1.ExistsRequest\x1a\x1f.couchbase.kv.v1.ExistsResponse\"\x00\x12K\n" +
	"\x06Insert\x12\x1e.couchbase.kv.v1.InsertRequest\x1a\x1f.couchbase.kv.v1.InsertResponse\"\x00\x12K\n" +
	"\x06Upsert\x12\x1e.couchbase.kv.v1.UpsertRequest\x1a\x1f.couchbase.kv.v1.UpsertResponse\"\x00\x12N\n" +
	"\aReplace\x12\x1f.couchbase.kv.v1.ReplaceRequest\x1a .couchbase.kv.v1.ReplaceResponse\"\x00\x12K\n" +
	"\x06Remove\x12\x1e.couchbase.kv.v1.RemoveRequest\x1a\x1f.couchbase.kv.v1.RemoveResponse\"\x00\x12T\n" +
	"\tIncrement\x12!.couchbase.kv.v1.IncrementRequest\x1a\".couchbase.kv.v1.IncrementResponse\"\x00\x12T\n" +
	"\tDecrement\x12!.couchbase.kv.v1.DecrementRequest\x1a\".couchbase.kv.v1.DecrementResponse\"\x00\x12K\n" +
	"\x06Append\x12\x1e.couchbase.kv.v1.AppendRequest\x1a\x1f.couchbase.kv.v1.AppendResponse\"\x00\x12N\n" +
	"\aPrepend\x12\x1f.couchbase.kv.v1.PrependRequest\x1a .couchbase.kv.v1.PrependResponse\"\x00\x12Q\n" +
	"\bLookupIn\x12 .couchbase.kv.v1.LookupInRequest\x1a!.couchbase.kv.v1.LookupInResponse\"\x00\x12Q\n" +
	"\bMutateIn\x12 .couchbase.kv.v1.MutateInRequest\x1a!.couchbase.kv.v1.MutateInResponse\"\x00\x12e\n" +
	"\x0eGetAllReplicas\x12&.couchbase.kv.v1.GetAllReplicasRequest\x1a'.couchbase.kv.v1.GetAllReplicasResponse\"\x000\x01B\xda\x01\n" +
	"'com.couchbase.client.protostellar.kv.v1P\x01Z8github.com/couchbase/goprotostellar/genproto/kv_v1;kv_v1\xaa\x02\x1cCouchbase.Protostellar.KV.V1\xca\x02&Couchbase\\Protostellar\\Generated\\KV\\V1\xea\x02*Couchbase::Protostellar::Generated::KV::V1b\x06proto3"

var (
	file_couchbase_kv_v1_kv_proto_rawDescOnce sync.Once
	file_couchbase_kv_v1_kv_proto_rawDescData []byte
)

func file_couchbase_kv_v1_kv_proto_rawDescGZIP() []byte {
	file_couchbase_kv_v1_kv_proto_rawDescOnce.Do(func() {
		file_couchbase_kv_v1_kv_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_couchbase_kv_v1_kv_proto_rawDesc), len(file_couchbase_kv_v1_kv_proto_rawDesc)))
	})
	return file_couchbase_kv_v1_kv_proto_rawDescData
}

var file_couchbase_kv_v1_kv_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_couchbase_kv_v1_kv_proto_msgTypes = make([]protoimpl.MessageInfo, 44)
var file_couchbase_kv_v1_kv_proto_goTypes = []any{
	(DurabilityLevel)(0),                // 0: couchbase.kv.v1.DurabilityLevel
	(CompressionEnabled)(0),             // 1: couchbase.kv.v1.CompressionEnabled
	(LookupInRequest_Spec_Operation)(0), // 2: couchbase.kv.v1.LookupInRequest.Spec.Operation
	(MutateInRequest_StoreSemantic)(0),  // 3: couchbase.kv.v1.MutateInRequest.StoreSemantic
	(MutateInRequest_Spec_Operation)(0), // 4: couchbase.kv.v1.MutateInRequest.Spec.Operation
	(*LegacyDurabilitySpec)(nil),        // 5: couchbase.kv.v1.LegacyDurabilitySpec
	(*MutationToken)(nil),               // 6: couchbase.kv.v1.MutationToken
	(*GetRequest)(nil),                  // 7: couchbase.kv.v1.GetRequest
	(*GetResponse)(nil),                 // 8: couchbase.kv.v1.GetResponse
	(*GetAndTouchRequest)(nil),          // 9: couchbase.kv.v1.GetAndTouchRequest
	(*GetAndTouchResponse)(nil),         // 10: couchbase.kv.v1.GetAndTouchResponse
	(*GetAndLockRequest)(nil),           // 11: couchbase.kv.v1.GetAndLockRequest
	(*GetAndLockResponse)(nil),          // 12: couchbase.kv.v1.GetAndLockResponse
	(*UnlockRequest)(nil),               // 13: couchbase.kv.v1.UnlockRequest
	(*UnlockResponse)(nil),              // 14: couchbase.kv.v1.UnlockResponse
	(*TouchRequest)(nil),                // 15: couchbase.kv.v1.TouchRequest
	(*TouchResponse)(nil),               // 16: couchbase.kv.v1.TouchResponse
	(*ExistsRequest)(nil),               // 17: couchbase.kv.v1.ExistsRequest
	(*ExistsResponse)(nil),              // 18: couchbase.kv.v1.ExistsResponse
	(*InsertRequest)(nil),               // 19: couchbase.kv.v1.InsertRequest
	(*InsertResponse)(nil),              // 20: couchbase.kv.v1.InsertResponse
	(*UpsertRequest)(nil),               // 21: couchbase.kv.v1.UpsertRequest
	(*UpsertResponse)(nil),              // 22: couchbase.kv.v1.UpsertResponse
	(*ReplaceRequest)(nil),              // 23: couchbase.kv.v1.ReplaceRequest
	(*ReplaceResponse)(nil),             // 24: couchbase.kv.v1.ReplaceResponse
	(*RemoveRequest)(nil),               // 25: couchbase.kv.v1.RemoveRequest
	(*RemoveResponse)(nil),              // 26: couchbase.kv.v1.RemoveResponse
	(*IncrementRequest)(nil),            // 27: couchbase.kv.v1.IncrementRequest
	(*IncrementResponse)(nil),           // 28: couchbase.kv.v1.IncrementResponse
	(*DecrementRequest)(nil),            // 29: couchbase.kv.v1.DecrementRequest
	(*DecrementResponse)(nil),           // 30: couchbase.kv.v1.DecrementResponse
	(*AppendRequest)(nil),               // 31: couchbase.kv.v1.AppendRequest
	(*AppendResponse)(nil),              // 32: couchbase.kv.v1.AppendResponse
	(*PrependRequest)(nil),              // 33: couchbase.kv.v1.PrependRequest
	(*PrependResponse)(nil),             // 34: couchbase.kv.v1.PrependResponse
	(*LookupInRequest)(nil),             // 35: couchbase.kv.v1.LookupInRequest
	(*LookupInResponse)(nil),            // 36: couchbase.kv.v1.LookupInResponse
	(*MutateInRequest)(nil),             // 37: couchbase.kv.v1.MutateInRequest
	(*MutateInResponse)(nil),            // 38: couchbase.kv.v1.MutateInResponse
	(*GetAllReplicasRequest)(nil),       // 39: couchbase.kv.v1.GetAllReplicasRequest
	(*GetAllReplicasResponse)(nil),      // 40: couchbase.kv.v1.GetAllReplicasResponse
	(*LookupInRequest_Spec)(nil),        // 41: couchbase.kv.v1.LookupInRequest.Spec
	(*LookupInRequest_Flags)(nil),       // 42: couchbase.kv.v1.LookupInRequest.Flags
	(*LookupInRequest_Spec_Flags)(nil),  // 43: couchbase.kv.v1.LookupInRequest.Spec.Flags
	(*LookupInResponse_Spec)(nil),       // 44: couchbase.kv.v1.LookupInResponse.Spec
	(*MutateInRequest_Spec)(nil),        // 45: couchbase.kv.v1.MutateInRequest.Spec
	(*MutateInRequest_Flags)(nil),       // 46: couchbase.kv.v1.MutateInRequest.Flags
	(*MutateInRequest_Spec_Flags)(nil),  // 47: couchbase.kv.v1.MutateInRequest.Spec.Flags
	(*MutateInResponse_Spec)(nil),       // 48: couchbase.kv.v1.MutateInResponse.Spec
	(*timestamppb.Timestamp)(nil),       // 49: google.protobuf.Timestamp
	(*status.Status)(nil),               // 50: google.rpc.Status
}
var file_couchbase_kv_v1_kv_proto_depIdxs = []int32{
	1,  // 0: couchbase.kv.v1.GetRequest.compression:type_name -> couchbase.kv.v1.CompressionEnabled
	49, // 1: couchbase.kv.v1.GetResponse.expiry:type_name -> google.protobuf.Timestamp
	49, // 2: couchbase.kv.v1.GetAndTouchRequest.expiry_time:type_name -> google.protobuf.Timestamp
	1,  // 3: couchbase.kv.v1.GetAndTouchRequest.compression:type_name -> couchbase.kv.v1.CompressionEnabled
	49, // 4: couchbase.kv.v1.GetAndTouchResponse.expiry:type_name -> google.protobuf.Timestamp
	1,  // 5: couchbase.kv.v1.GetAndLockRequest.compression:type_name -> couchbase.kv.v1.CompressionEnabled
	49, // 6: couchbase.kv.v1.GetAndLockResponse.expiry:type_name -> google.protobuf.Timestamp
	49, // 7: couchbase.kv.v1.TouchRequest.expiry_time:type_name -> google.protobuf.Timestamp
	6,  // 8: couchbase.kv.v1.TouchResponse.mutation_token:type_name -> couchbase.kv.v1.MutationToken
	49, // 9: couchbase.kv.v1.InsertRequest.expiry_time:type_name -> google.protobuf.Timestamp
	0,  // 10: couchbase.kv.v1.InsertRequest.durability_level:type_name -> couchbase.kv.v1.DurabilityLevel
	6,  // 11: couchbase.kv.v1.InsertResponse.mutation_token:type_name -> couchbase.kv.v1.MutationToken
	49, // 12: couchbase.kv.v1.UpsertRequest.expiry_time:type_name -> google.protobuf.Timestamp
	0,  // 13: couchbase.kv.v1.UpsertRequest.durability_level:type_name -> couchbase.kv.v1.DurabilityLevel
	6,  // 14: couchbase.kv.v1.UpsertResponse.mutation_token:type_name -> couchbase.kv.v1.MutationToken
	49, // 15: couchbase.kv.v1.ReplaceRequest.expiry_time:type_name -> google.protobuf.Timestamp
	0,  // 16: couchbase.kv.v1.ReplaceRequest.durability_level:type_name -> couchbase.kv.v1.DurabilityLevel
	6,  // 17: couchbase.kv.v1.ReplaceResponse.mutation_token:type_name -> couchbase.kv.v1.MutationToken
	0,  // 18: couchbase.kv.v1.RemoveRequest.durability_level:type_name -> couchbase.kv.v1.DurabilityLevel
	6,  // 19: couchbase.kv.v1.RemoveResponse.mutation_token:type_name -> couchbase.kv.v1.MutationToken
	49, // 20: couchbase.kv.v1.IncrementRequest.expiry_time:type_name -> google.protobuf.Timestamp
	0,  // 21: couchbase.kv.v1.IncrementRequest.durability_level:type_name -> couchbase.kv.v1.DurabilityLevel
	6,  // 22: couchbase.kv.v1.IncrementResponse.mutation_token:type_name -> couchbase.kv.v1.MutationToken
	49, // 23: couchbase.kv.v1.DecrementRequest.expiry_time:type_name -> google.protobuf.Timestamp
	0,  // 24: couchbase.kv.v1.DecrementRequest.durability_level:type_name -> couchbase.kv.v1.DurabilityLevel
	6,  // 25: couchbase.kv.v1.DecrementResponse.mutation_token:type_name -> couchbase.kv.v1.MutationToken
	0,  // 26: couchbase.kv.v1.AppendRequest.durability_level:type_name -> couchbase.kv.v1.DurabilityLevel
	6,  // 27: couchbase.kv.v1.AppendResponse.mutation_token:type_name -> couchbase.kv.v1.MutationToken
	0,  // 28: couchbase.kv.v1.PrependRequest.durability_level:type_name -> couchbase.kv.v1.DurabilityLevel
	6,  // 29: couchbase.kv.v1.PrependResponse.mutation_token:type_name -> couchbase.kv.v1.MutationToken
	41, // 30: couchbase.kv.v1.LookupInRequest.specs:type_name -> couchbase.kv.v1.LookupInRequest.Spec
	42, // 31: couchbase.kv.v1.LookupInRequest.flags:type_name -> couchbase.kv.v1.LookupInRequest.Flags
	44, // 32: couchbase.kv.v1.LookupInResponse.specs:type_name -> couchbase.kv.v1.LookupInResponse.Spec
	45, // 33: couchbase.kv.v1.MutateInRequest.specs:type_name -> couchbase.kv.v1.MutateInRequest.Spec
	3,  // 34: couchbase.kv.v1.MutateInRequest.store_semantic:type_name -> couchbase.kv.v1.MutateInRequest.StoreSemantic
	0,  // 35: couchbase.kv.v1.MutateInRequest.durability_level:type_name -> couchbase.kv.v1.DurabilityLevel
	46, // 36: couchbase.kv.v1.MutateInRequest.flags:type_name -> couchbase.kv.v1.MutateInRequest.Flags
	49, // 37: couchbase.kv.v1.MutateInRequest.expiry_time:type_name -> google.protobuf.Timestamp
	48, // 38: couchbase.kv.v1.MutateInResponse.specs:type_name -> couchbase.kv.v1.MutateInResponse.Spec
	6,  // 39: couchbase.kv.v1.MutateInResponse.mutation_token:type_name -> couchbase.kv.v1.MutationToken
	2,  // 40: couchbase.kv.v1.LookupInRequest.Spec.operation:type_name -> couchbase.kv.v1.LookupInRequest.Spec.Operation
	43, // 41: couchbase.kv.v1.LookupInRequest.Spec.flags:type_name -> couchbase.kv.v1.LookupInRequest.Spec.Flags
	50, // 42: couchbase.kv.v1.LookupInResponse.Spec.status:type_name -> google.rpc.Status
	4,  // 43: couchbase.kv.v1.MutateInRequest.Spec.operation:type_name -> couchbase.kv.v1.MutateInRequest.Spec.Operation
	47, // 44: couchbase.kv.v1.MutateInRequest.Spec.flags:type_name -> couchbase.kv.v1.MutateInRequest.Spec.Flags
	7,  // 45: couchbase.kv.v1.KvService.Get:input_type -> couchbase.kv.v1.GetRequest
	9,  // 46: couchbase.kv.v1.KvService.GetAndTouch:input_type -> couchbase.kv.v1.GetAndTouchRequest
	11, // 47: couchbase.kv.v1.KvService.GetAndLock:input_type -> couchbase.kv.v1.GetAndLockRequest
	13, // 48: couchbase.kv.v1.KvService.Unlock:input_type -> couchbase.kv.v1.UnlockRequest
	15, // 49: couchbase.kv.v1.KvService.Touch:input_type -> couchbase.kv.v1.TouchRequest
	17, // 50: couchbase.kv.v1.KvService.Exists:input_type -> couchbase.kv.v1.ExistsRequest
	19, // 51: couchbase.kv.v1.KvService.Insert:input_type -> couchbase.kv.v1.InsertRequest
	21, // 52: couchbase.kv.v1.KvService.Upsert:input_type -> couchbase.kv.v1.UpsertRequest
	23, // 53: couchbase.kv.v1.KvService.Replace:input_type -> couchbase.kv.v1.ReplaceRequest
	25, // 54: couchbase.kv.v1.KvService.Remove:input_type -> couchbase.kv.v1.RemoveRequest
	27, // 55: couchbase.kv.v1.KvService.Increment:input_type -> couchbase.kv.v1.IncrementRequest
	29, // 56: couchbase.kv.v1.KvService.Decrement:input_type -> couchbase.kv.v1.DecrementRequest
	31, // 57: couchbase.kv.v1.KvService.Append:input_type -> couchbase.kv.v1.AppendRequest
	33, // 58: couchbase.kv.v1.KvService.Prepend:input_type -> couchbase.kv.v1.PrependRequest
	35, // 59: couchbase.kv.v1.KvService.LookupIn:input_type -> couchbase.kv.v1.LookupInRequest
	37, // 60: couchbase.kv.v1.KvService.MutateIn:input_type -> couchbase.kv.v1.MutateInRequest
	39, // 61: couchbase.kv.v1.KvService.GetAllReplicas:input_type -> couchbase.kv.v1.GetAllReplicasRequest
	8,  // 62: couchbase.kv.v1.KvService.Get:output_type -> couchbase.kv.v1.GetResponse
	10, // 63: couchbase.kv.v1.KvService.GetAndTouch:output_type -> couchbase.kv.v1.GetAndTouchResponse
	12, // 64: couchbase.kv.v1.KvService.GetAndLock:output_type -> couchbase.kv.v1.GetAndLockResponse
	14, // 65: couchbase.kv.v1.KvService.Unlock:output_type -> couchbase.kv.v1.UnlockResponse
	16, // 66: couchbase.kv.v1.KvService.Touch:output_type -> couchbase.kv.v1.TouchResponse
	18, // 67: couchbase.kv.v1.KvService.Exists:output_type -> couchbase.kv.v1.ExistsResponse
	20, // 68: couchbase.kv.v1.KvService.Insert:output_type -> couchbase.kv.v1.InsertResponse
	22, // 69: couchbase.kv.v1.KvService.Upsert:output_type -> couchbase.kv.v1.UpsertResponse
	24, // 70: couchbase.kv.v1.KvService.Replace:output_type -> couchbase.kv.v1.ReplaceResponse
	26, // 71: couchbase.kv.v1.KvService.Remove:output_type -> couchbase.kv.v1.RemoveResponse
	28, // 72: couchbase.kv.v1.KvService.Increment:output_type -> couchbase.kv.v1.IncrementResponse
	30, // 73: couchbase.kv.v1.KvService.Decrement:output_type -> couchbase.kv.v1.DecrementResponse
	32, // 74: couchbase.kv.v1.KvService.Append:output_type -> couchbase.kv.v1.AppendResponse
	34, // 75: couchbase.kv.v1.KvService.Prepend:output_type -> couchbase.kv.v1.PrependResponse
	36, // 76: couchbase.kv.v1.KvService.LookupIn:output_type -> couchbase.kv.v1.LookupInResponse
	38, // 77: couchbase.kv.v1.KvService.MutateIn:output_type -> couchbase.kv.v1.MutateInResponse
	40, // 78: couchbase.kv.v1.KvService.GetAllReplicas:output_type -> couchbase.kv.v1.GetAllReplicasResponse
	62, // [62:79] is the sub-list for method output_type
	45, // [45:62] is the sub-list for method input_type
	45, // [45:45] is the sub-list for extension type_name
	45, // [45:45] is the sub-list for extension extendee
	0,  // [0:45] is the sub-list for field type_name
}

func init() { file_couchbase_kv_v1_kv_proto_init() }
func file_couchbase_kv_v1_kv_proto_init() {
	if File_couchbase_kv_v1_kv_proto != nil {
		return
	}
	file_couchbase_kv_v1_kv_proto_msgTypes[2].OneofWrappers = []any{}
	file_couchbase_kv_v1_kv_proto_msgTypes[3].OneofWrappers = []any{
		(*GetResponse_ContentUncompressed)(nil),
		(*GetResponse_ContentCompressed)(nil),
	}
	file_couchbase_kv_v1_kv_proto_msgTypes[4].OneofWrappers = []any{
		(*GetAndTouchRequest_ExpiryTime)(nil),
		(*GetAndTouchRequest_ExpirySecs)(nil),
	}
	file_couchbase_kv_v1_kv_proto_msgTypes[5].OneofWrappers = []any{
		(*GetAndTouchResponse_ContentUncompressed)(nil),
		(*GetAndTouchResponse_ContentCompressed)(nil),
	}
	file_couchbase_kv_v1_kv_proto_msgTypes[6].OneofWrappers = []any{}
	file_couchbase_kv_v1_kv_proto_msgTypes[7].OneofWrappers = []any{
		(*GetAndLockResponse_ContentUncompressed)(nil),
		(*GetAndLockResponse_ContentCompressed)(nil),
	}
	file_couchbase_kv_v1_kv_proto_msgTypes[10].OneofWrappers = []any{
		(*TouchRequest_ExpiryTime)(nil),
		(*TouchRequest_ExpirySecs)(nil),
	}
	file_couchbase_kv_v1_kv_proto_msgTypes[14].OneofWrappers = []any{
		(*InsertRequest_ContentUncompressed)(nil),
		(*InsertRequest_ContentCompressed)(nil),
		(*InsertRequest_ExpiryTime)(nil),
		(*InsertRequest_ExpirySecs)(nil),
	}
	file_couchbase_kv_v1_kv_proto_msgTypes[16].OneofWrappers = []any{
		(*UpsertRequest_ContentUncompressed)(nil),
		(*UpsertRequest_ContentCompressed)(nil),
		(*UpsertRequest_ExpiryTime)(nil),
		(*UpsertRequest_ExpirySecs)(nil),
	}
	file_couchbase_kv_v1_kv_proto_msgTypes[18].OneofWrappers = []any{
		(*ReplaceRequest_ContentUncompressed)(nil),
		(*ReplaceRequest_ContentCompressed)(nil),
		(*ReplaceRequest_ExpiryTime)(nil),
		(*ReplaceRequest_ExpirySecs)(nil),
	}
	file_couchbase_kv_v1_kv_proto_msgTypes[20].OneofWrappers = []any{}
	file_couchbase_kv_v1_kv_proto_msgTypes[22].OneofWrappers = []any{
		(*IncrementRequest_ExpiryTime)(nil),
		(*IncrementRequest_ExpirySecs)(nil),
	}
	file_couchbase_kv_v1_kv_proto_msgTypes[24].OneofWrappers = []any{
		(*DecrementRequest_ExpiryTime)(nil),
		(*DecrementRequest_ExpirySecs)(nil),
	}
	file_couchbase_kv_v1_kv_proto_msgTypes[26].OneofWrappers = []any{}
	file_couchbase_kv_v1_kv_proto_msgTypes[28].OneofWrappers = []any{}
	file_couchbase_kv_v1_kv_proto_msgTypes[30].OneofWrappers = []any{}
	file_couchbase_kv_v1_kv_proto_msgTypes[32].OneofWrappers = []any{
		(*MutateInRequest_ExpiryTime)(nil),
		(*MutateInRequest_ExpirySecs)(nil),
	}
	file_couchbase_kv_v1_kv_proto_msgTypes[36].OneofWrappers = []any{}
	file_couchbase_kv_v1_kv_proto_msgTypes[37].OneofWrappers = []any{}
	file_couchbase_kv_v1_kv_proto_msgTypes[38].OneofWrappers = []any{}
	file_couchbase_kv_v1_kv_proto_msgTypes[40].OneofWrappers = []any{}
	file_couchbase_kv_v1_kv_proto_msgTypes[41].OneofWrappers = []any{}
	file_couchbase_kv_v1_kv_proto_msgTypes[42].OneofWrappers = []any{}
	file_couchbase_kv_v1_kv_proto_msgTypes[43].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_couchbase_kv_v1_kv_proto_rawDesc), len(file_couchbase_kv_v1_kv_proto_rawDesc)),
			NumEnums:      5,
			NumMessages:   44,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_couchbase_kv_v1_kv_proto_goTypes,
		DependencyIndexes: file_couchbase_kv_v1_kv_proto_depIdxs,
		EnumInfos:         file_couchbase_kv_v1_kv_proto_enumTypes,
		MessageInfos:      file_couchbase_kv_v1_kv_proto_msgTypes,
	}.Build()
	File_couchbase_kv_v1_kv_proto = out.File
	file_couchbase_kv_v1_kv_proto_goTypes = nil
	file_couchbase_kv_v1_kv_proto_depIdxs = nil
}
