// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: couchbase/admin/query/v1/query.proto

package admin_query_v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IndexType int32

const (
	IndexType_INDEX_TYPE_VIEW IndexType = 0
	IndexType_INDEX_TYPE_GSI  IndexType = 1
)

// Enum value maps for IndexType.
var (
	IndexType_name = map[int32]string{
		0: "INDEX_TYPE_VIEW",
		1: "INDEX_TYPE_GSI",
	}
	IndexType_value = map[string]int32{
		"INDEX_TYPE_VIEW": 0,
		"INDEX_TYPE_GSI":  1,
	}
)

func (x IndexType) Enum() *IndexType {
	p := new(IndexType)
	*p = x
	return p
}

func (x IndexType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IndexType) Descriptor() protoreflect.EnumDescriptor {
	return file_couchbase_admin_query_v1_query_proto_enumTypes[0].Descriptor()
}

func (IndexType) Type() protoreflect.EnumType {
	return &file_couchbase_admin_query_v1_query_proto_enumTypes[0]
}

func (x IndexType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IndexType.Descriptor instead.
func (IndexType) EnumDescriptor() ([]byte, []int) {
	return file_couchbase_admin_query_v1_query_proto_rawDescGZIP(), []int{0}
}

type IndexState int32

const (
	IndexState_INDEX_STATE_DEFERRED  IndexState = 0
	IndexState_INDEX_STATE_BUILDING  IndexState = 1
	IndexState_INDEX_STATE_PENDING   IndexState = 2
	IndexState_INDEX_STATE_ONLINE    IndexState = 3
	IndexState_INDEX_STATE_OFFLINE   IndexState = 4
	IndexState_INDEX_STATE_ABRIDGED  IndexState = 5
	IndexState_INDEX_STATE_SCHEDULED IndexState = 6
)

// Enum value maps for IndexState.
var (
	IndexState_name = map[int32]string{
		0: "INDEX_STATE_DEFERRED",
		1: "INDEX_STATE_BUILDING",
		2: "INDEX_STATE_PENDING",
		3: "INDEX_STATE_ONLINE",
		4: "INDEX_STATE_OFFLINE",
		5: "INDEX_STATE_ABRIDGED",
		6: "INDEX_STATE_SCHEDULED",
	}
	IndexState_value = map[string]int32{
		"INDEX_STATE_DEFERRED":  0,
		"INDEX_STATE_BUILDING":  1,
		"INDEX_STATE_PENDING":   2,
		"INDEX_STATE_ONLINE":    3,
		"INDEX_STATE_OFFLINE":   4,
		"INDEX_STATE_ABRIDGED":  5,
		"INDEX_STATE_SCHEDULED": 6,
	}
)

func (x IndexState) Enum() *IndexState {
	p := new(IndexState)
	*p = x
	return p
}

func (x IndexState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IndexState) Descriptor() protoreflect.EnumDescriptor {
	return file_couchbase_admin_query_v1_query_proto_enumTypes[1].Descriptor()
}

func (IndexState) Type() protoreflect.EnumType {
	return &file_couchbase_admin_query_v1_query_proto_enumTypes[1]
}

func (x IndexState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IndexState.Descriptor instead.
func (IndexState) EnumDescriptor() ([]byte, []int) {
	return file_couchbase_admin_query_v1_query_proto_rawDescGZIP(), []int{1}
}

type GetAllIndexesRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	BucketName     *string                `protobuf:"bytes,1,opt,name=bucket_name,json=bucketName,proto3,oneof" json:"bucket_name,omitempty"`
	ScopeName      *string                `protobuf:"bytes,2,opt,name=scope_name,json=scopeName,proto3,oneof" json:"scope_name,omitempty"`
	CollectionName *string                `protobuf:"bytes,3,opt,name=collection_name,json=collectionName,proto3,oneof" json:"collection_name,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetAllIndexesRequest) Reset() {
	*x = GetAllIndexesRequest{}
	mi := &file_couchbase_admin_query_v1_query_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllIndexesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllIndexesRequest) ProtoMessage() {}

func (x *GetAllIndexesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_query_v1_query_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllIndexesRequest.ProtoReflect.Descriptor instead.
func (*GetAllIndexesRequest) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_query_v1_query_proto_rawDescGZIP(), []int{0}
}

func (x *GetAllIndexesRequest) GetBucketName() string {
	if x != nil && x.BucketName != nil {
		return *x.BucketName
	}
	return ""
}

func (x *GetAllIndexesRequest) GetScopeName() string {
	if x != nil && x.ScopeName != nil {
		return *x.ScopeName
	}
	return ""
}

func (x *GetAllIndexesRequest) GetCollectionName() string {
	if x != nil && x.CollectionName != nil {
		return *x.CollectionName
	}
	return ""
}

type GetAllIndexesResponse struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Indexes       []*GetAllIndexesResponse_Index `protobuf:"bytes,1,rep,name=indexes,proto3" json:"indexes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAllIndexesResponse) Reset() {
	*x = GetAllIndexesResponse{}
	mi := &file_couchbase_admin_query_v1_query_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllIndexesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllIndexesResponse) ProtoMessage() {}

func (x *GetAllIndexesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_query_v1_query_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllIndexesResponse.ProtoReflect.Descriptor instead.
func (*GetAllIndexesResponse) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_query_v1_query_proto_rawDescGZIP(), []int{1}
}

func (x *GetAllIndexesResponse) GetIndexes() []*GetAllIndexesResponse_Index {
	if x != nil {
		return x.Indexes
	}
	return nil
}

type CreatePrimaryIndexRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	BucketName     string                 `protobuf:"bytes,1,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	ScopeName      *string                `protobuf:"bytes,2,opt,name=scope_name,json=scopeName,proto3,oneof" json:"scope_name,omitempty"`
	CollectionName *string                `protobuf:"bytes,3,opt,name=collection_name,json=collectionName,proto3,oneof" json:"collection_name,omitempty"`
	Name           *string                `protobuf:"bytes,4,opt,name=name,proto3,oneof" json:"name,omitempty"`
	NumReplicas    *int32                 `protobuf:"varint,5,opt,name=num_replicas,json=numReplicas,proto3,oneof" json:"num_replicas,omitempty"`
	Deferred       *bool                  `protobuf:"varint,6,opt,name=deferred,proto3,oneof" json:"deferred,omitempty"`
	IgnoreIfExists *bool                  `protobuf:"varint,7,opt,name=ignore_if_exists,json=ignoreIfExists,proto3,oneof" json:"ignore_if_exists,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreatePrimaryIndexRequest) Reset() {
	*x = CreatePrimaryIndexRequest{}
	mi := &file_couchbase_admin_query_v1_query_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePrimaryIndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePrimaryIndexRequest) ProtoMessage() {}

func (x *CreatePrimaryIndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_query_v1_query_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePrimaryIndexRequest.ProtoReflect.Descriptor instead.
func (*CreatePrimaryIndexRequest) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_query_v1_query_proto_rawDescGZIP(), []int{2}
}

func (x *CreatePrimaryIndexRequest) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *CreatePrimaryIndexRequest) GetScopeName() string {
	if x != nil && x.ScopeName != nil {
		return *x.ScopeName
	}
	return ""
}

func (x *CreatePrimaryIndexRequest) GetCollectionName() string {
	if x != nil && x.CollectionName != nil {
		return *x.CollectionName
	}
	return ""
}

func (x *CreatePrimaryIndexRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CreatePrimaryIndexRequest) GetNumReplicas() int32 {
	if x != nil && x.NumReplicas != nil {
		return *x.NumReplicas
	}
	return 0
}

func (x *CreatePrimaryIndexRequest) GetDeferred() bool {
	if x != nil && x.Deferred != nil {
		return *x.Deferred
	}
	return false
}

func (x *CreatePrimaryIndexRequest) GetIgnoreIfExists() bool {
	if x != nil && x.IgnoreIfExists != nil {
		return *x.IgnoreIfExists
	}
	return false
}

type CreatePrimaryIndexResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePrimaryIndexResponse) Reset() {
	*x = CreatePrimaryIndexResponse{}
	mi := &file_couchbase_admin_query_v1_query_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePrimaryIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePrimaryIndexResponse) ProtoMessage() {}

func (x *CreatePrimaryIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_query_v1_query_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePrimaryIndexResponse.ProtoReflect.Descriptor instead.
func (*CreatePrimaryIndexResponse) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_query_v1_query_proto_rawDescGZIP(), []int{3}
}

type CreateIndexRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	BucketName     string                 `protobuf:"bytes,1,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	ScopeName      *string                `protobuf:"bytes,2,opt,name=scope_name,json=scopeName,proto3,oneof" json:"scope_name,omitempty"`
	CollectionName *string                `protobuf:"bytes,3,opt,name=collection_name,json=collectionName,proto3,oneof" json:"collection_name,omitempty"`
	Name           string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	NumReplicas    *int32                 `protobuf:"varint,5,opt,name=num_replicas,json=numReplicas,proto3,oneof" json:"num_replicas,omitempty"`
	Fields         []string               `protobuf:"bytes,6,rep,name=fields,proto3" json:"fields,omitempty"`
	Deferred       *bool                  `protobuf:"varint,7,opt,name=deferred,proto3,oneof" json:"deferred,omitempty"`
	IgnoreIfExists *bool                  `protobuf:"varint,8,opt,name=ignore_if_exists,json=ignoreIfExists,proto3,oneof" json:"ignore_if_exists,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateIndexRequest) Reset() {
	*x = CreateIndexRequest{}
	mi := &file_couchbase_admin_query_v1_query_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateIndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIndexRequest) ProtoMessage() {}

func (x *CreateIndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_query_v1_query_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIndexRequest.ProtoReflect.Descriptor instead.
func (*CreateIndexRequest) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_query_v1_query_proto_rawDescGZIP(), []int{4}
}

func (x *CreateIndexRequest) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *CreateIndexRequest) GetScopeName() string {
	if x != nil && x.ScopeName != nil {
		return *x.ScopeName
	}
	return ""
}

func (x *CreateIndexRequest) GetCollectionName() string {
	if x != nil && x.CollectionName != nil {
		return *x.CollectionName
	}
	return ""
}

func (x *CreateIndexRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateIndexRequest) GetNumReplicas() int32 {
	if x != nil && x.NumReplicas != nil {
		return *x.NumReplicas
	}
	return 0
}

func (x *CreateIndexRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *CreateIndexRequest) GetDeferred() bool {
	if x != nil && x.Deferred != nil {
		return *x.Deferred
	}
	return false
}

func (x *CreateIndexRequest) GetIgnoreIfExists() bool {
	if x != nil && x.IgnoreIfExists != nil {
		return *x.IgnoreIfExists
	}
	return false
}

type CreateIndexResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateIndexResponse) Reset() {
	*x = CreateIndexResponse{}
	mi := &file_couchbase_admin_query_v1_query_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIndexResponse) ProtoMessage() {}

func (x *CreateIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_query_v1_query_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIndexResponse.ProtoReflect.Descriptor instead.
func (*CreateIndexResponse) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_query_v1_query_proto_rawDescGZIP(), []int{5}
}

type DropPrimaryIndexRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	BucketName      string                 `protobuf:"bytes,1,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	ScopeName       *string                `protobuf:"bytes,2,opt,name=scope_name,json=scopeName,proto3,oneof" json:"scope_name,omitempty"`
	CollectionName  *string                `protobuf:"bytes,3,opt,name=collection_name,json=collectionName,proto3,oneof" json:"collection_name,omitempty"`
	Name            *string                `protobuf:"bytes,4,opt,name=name,proto3,oneof" json:"name,omitempty"`
	IgnoreIfMissing *bool                  `protobuf:"varint,5,opt,name=ignore_if_missing,json=ignoreIfMissing,proto3,oneof" json:"ignore_if_missing,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DropPrimaryIndexRequest) Reset() {
	*x = DropPrimaryIndexRequest{}
	mi := &file_couchbase_admin_query_v1_query_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DropPrimaryIndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropPrimaryIndexRequest) ProtoMessage() {}

func (x *DropPrimaryIndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_query_v1_query_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropPrimaryIndexRequest.ProtoReflect.Descriptor instead.
func (*DropPrimaryIndexRequest) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_query_v1_query_proto_rawDescGZIP(), []int{6}
}

func (x *DropPrimaryIndexRequest) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *DropPrimaryIndexRequest) GetScopeName() string {
	if x != nil && x.ScopeName != nil {
		return *x.ScopeName
	}
	return ""
}

func (x *DropPrimaryIndexRequest) GetCollectionName() string {
	if x != nil && x.CollectionName != nil {
		return *x.CollectionName
	}
	return ""
}

func (x *DropPrimaryIndexRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *DropPrimaryIndexRequest) GetIgnoreIfMissing() bool {
	if x != nil && x.IgnoreIfMissing != nil {
		return *x.IgnoreIfMissing
	}
	return false
}

type DropPrimaryIndexResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DropPrimaryIndexResponse) Reset() {
	*x = DropPrimaryIndexResponse{}
	mi := &file_couchbase_admin_query_v1_query_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DropPrimaryIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropPrimaryIndexResponse) ProtoMessage() {}

func (x *DropPrimaryIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_query_v1_query_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropPrimaryIndexResponse.ProtoReflect.Descriptor instead.
func (*DropPrimaryIndexResponse) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_query_v1_query_proto_rawDescGZIP(), []int{7}
}

type DropIndexRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	BucketName      string                 `protobuf:"bytes,1,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	ScopeName       *string                `protobuf:"bytes,2,opt,name=scope_name,json=scopeName,proto3,oneof" json:"scope_name,omitempty"`
	CollectionName  *string                `protobuf:"bytes,3,opt,name=collection_name,json=collectionName,proto3,oneof" json:"collection_name,omitempty"`
	Name            string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	IgnoreIfMissing *bool                  `protobuf:"varint,5,opt,name=ignore_if_missing,json=ignoreIfMissing,proto3,oneof" json:"ignore_if_missing,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DropIndexRequest) Reset() {
	*x = DropIndexRequest{}
	mi := &file_couchbase_admin_query_v1_query_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DropIndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropIndexRequest) ProtoMessage() {}

func (x *DropIndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_query_v1_query_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropIndexRequest.ProtoReflect.Descriptor instead.
func (*DropIndexRequest) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_query_v1_query_proto_rawDescGZIP(), []int{8}
}

func (x *DropIndexRequest) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *DropIndexRequest) GetScopeName() string {
	if x != nil && x.ScopeName != nil {
		return *x.ScopeName
	}
	return ""
}

func (x *DropIndexRequest) GetCollectionName() string {
	if x != nil && x.CollectionName != nil {
		return *x.CollectionName
	}
	return ""
}

func (x *DropIndexRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DropIndexRequest) GetIgnoreIfMissing() bool {
	if x != nil && x.IgnoreIfMissing != nil {
		return *x.IgnoreIfMissing
	}
	return false
}

type DropIndexResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DropIndexResponse) Reset() {
	*x = DropIndexResponse{}
	mi := &file_couchbase_admin_query_v1_query_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DropIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropIndexResponse) ProtoMessage() {}

func (x *DropIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_query_v1_query_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropIndexResponse.ProtoReflect.Descriptor instead.
func (*DropIndexResponse) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_query_v1_query_proto_rawDescGZIP(), []int{9}
}

type BuildDeferredIndexesRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	BucketName     string                 `protobuf:"bytes,1,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	ScopeName      *string                `protobuf:"bytes,2,opt,name=scope_name,json=scopeName,proto3,oneof" json:"scope_name,omitempty"`
	CollectionName *string                `protobuf:"bytes,3,opt,name=collection_name,json=collectionName,proto3,oneof" json:"collection_name,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *BuildDeferredIndexesRequest) Reset() {
	*x = BuildDeferredIndexesRequest{}
	mi := &file_couchbase_admin_query_v1_query_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuildDeferredIndexesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildDeferredIndexesRequest) ProtoMessage() {}

func (x *BuildDeferredIndexesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_query_v1_query_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildDeferredIndexesRequest.ProtoReflect.Descriptor instead.
func (*BuildDeferredIndexesRequest) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_query_v1_query_proto_rawDescGZIP(), []int{10}
}

func (x *BuildDeferredIndexesRequest) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *BuildDeferredIndexesRequest) GetScopeName() string {
	if x != nil && x.ScopeName != nil {
		return *x.ScopeName
	}
	return ""
}

func (x *BuildDeferredIndexesRequest) GetCollectionName() string {
	if x != nil && x.CollectionName != nil {
		return *x.CollectionName
	}
	return ""
}

type BuildDeferredIndexesResponse struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Indexes       []*BuildDeferredIndexesResponse_Index `protobuf:"bytes,1,rep,name=indexes,proto3" json:"indexes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BuildDeferredIndexesResponse) Reset() {
	*x = BuildDeferredIndexesResponse{}
	mi := &file_couchbase_admin_query_v1_query_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuildDeferredIndexesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildDeferredIndexesResponse) ProtoMessage() {}

func (x *BuildDeferredIndexesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_query_v1_query_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildDeferredIndexesResponse.ProtoReflect.Descriptor instead.
func (*BuildDeferredIndexesResponse) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_query_v1_query_proto_rawDescGZIP(), []int{11}
}

func (x *BuildDeferredIndexesResponse) GetIndexes() []*BuildDeferredIndexesResponse_Index {
	if x != nil {
		return x.Indexes
	}
	return nil
}

type WaitForIndexOnlineRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	BucketName     string                 `protobuf:"bytes,1,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	ScopeName      string                 `protobuf:"bytes,2,opt,name=scope_name,json=scopeName,proto3" json:"scope_name,omitempty"`
	CollectionName string                 `protobuf:"bytes,3,opt,name=collection_name,json=collectionName,proto3" json:"collection_name,omitempty"`
	Name           string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *WaitForIndexOnlineRequest) Reset() {
	*x = WaitForIndexOnlineRequest{}
	mi := &file_couchbase_admin_query_v1_query_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WaitForIndexOnlineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitForIndexOnlineRequest) ProtoMessage() {}

func (x *WaitForIndexOnlineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_query_v1_query_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitForIndexOnlineRequest.ProtoReflect.Descriptor instead.
func (*WaitForIndexOnlineRequest) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_query_v1_query_proto_rawDescGZIP(), []int{12}
}

func (x *WaitForIndexOnlineRequest) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *WaitForIndexOnlineRequest) GetScopeName() string {
	if x != nil {
		return x.ScopeName
	}
	return ""
}

func (x *WaitForIndexOnlineRequest) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *WaitForIndexOnlineRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type WaitForIndexOnlineResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WaitForIndexOnlineResponse) Reset() {
	*x = WaitForIndexOnlineResponse{}
	mi := &file_couchbase_admin_query_v1_query_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WaitForIndexOnlineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitForIndexOnlineResponse) ProtoMessage() {}

func (x *WaitForIndexOnlineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_query_v1_query_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitForIndexOnlineResponse.ProtoReflect.Descriptor instead.
func (*WaitForIndexOnlineResponse) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_query_v1_query_proto_rawDescGZIP(), []int{13}
}

type GetAllIndexesResponse_Index struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	BucketName     string                 `protobuf:"bytes,1,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	ScopeName      string                 `protobuf:"bytes,2,opt,name=scope_name,json=scopeName,proto3" json:"scope_name,omitempty"`
	CollectionName string                 `protobuf:"bytes,3,opt,name=collection_name,json=collectionName,proto3" json:"collection_name,omitempty"`
	Name           string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	IsPrimary      bool                   `protobuf:"varint,5,opt,name=is_primary,json=isPrimary,proto3" json:"is_primary,omitempty"`
	Type           IndexType              `protobuf:"varint,6,opt,name=type,proto3,enum=couchbase.admin.query.v1.IndexType" json:"type,omitempty"`
	State          IndexState             `protobuf:"varint,7,opt,name=state,proto3,enum=couchbase.admin.query.v1.IndexState" json:"state,omitempty"`
	Fields         []string               `protobuf:"bytes,8,rep,name=fields,proto3" json:"fields,omitempty"`
	Condition      *string                `protobuf:"bytes,9,opt,name=condition,proto3,oneof" json:"condition,omitempty"`
	Partition      *string                `protobuf:"bytes,10,opt,name=partition,proto3,oneof" json:"partition,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetAllIndexesResponse_Index) Reset() {
	*x = GetAllIndexesResponse_Index{}
	mi := &file_couchbase_admin_query_v1_query_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllIndexesResponse_Index) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllIndexesResponse_Index) ProtoMessage() {}

func (x *GetAllIndexesResponse_Index) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_query_v1_query_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllIndexesResponse_Index.ProtoReflect.Descriptor instead.
func (*GetAllIndexesResponse_Index) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_query_v1_query_proto_rawDescGZIP(), []int{1, 0}
}

func (x *GetAllIndexesResponse_Index) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *GetAllIndexesResponse_Index) GetScopeName() string {
	if x != nil {
		return x.ScopeName
	}
	return ""
}

func (x *GetAllIndexesResponse_Index) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *GetAllIndexesResponse_Index) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetAllIndexesResponse_Index) GetIsPrimary() bool {
	if x != nil {
		return x.IsPrimary
	}
	return false
}

func (x *GetAllIndexesResponse_Index) GetType() IndexType {
	if x != nil {
		return x.Type
	}
	return IndexType_INDEX_TYPE_VIEW
}

func (x *GetAllIndexesResponse_Index) GetState() IndexState {
	if x != nil {
		return x.State
	}
	return IndexState_INDEX_STATE_DEFERRED
}

func (x *GetAllIndexesResponse_Index) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *GetAllIndexesResponse_Index) GetCondition() string {
	if x != nil && x.Condition != nil {
		return *x.Condition
	}
	return ""
}

func (x *GetAllIndexesResponse_Index) GetPartition() string {
	if x != nil && x.Partition != nil {
		return *x.Partition
	}
	return ""
}

type BuildDeferredIndexesResponse_Index struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	BucketName     string                 `protobuf:"bytes,1,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	ScopeName      *string                `protobuf:"bytes,2,opt,name=scope_name,json=scopeName,proto3,oneof" json:"scope_name,omitempty"`
	CollectionName *string                `protobuf:"bytes,3,opt,name=collection_name,json=collectionName,proto3,oneof" json:"collection_name,omitempty"`
	Name           string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *BuildDeferredIndexesResponse_Index) Reset() {
	*x = BuildDeferredIndexesResponse_Index{}
	mi := &file_couchbase_admin_query_v1_query_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuildDeferredIndexesResponse_Index) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildDeferredIndexesResponse_Index) ProtoMessage() {}

func (x *BuildDeferredIndexesResponse_Index) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_query_v1_query_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildDeferredIndexesResponse_Index.ProtoReflect.Descriptor instead.
func (*BuildDeferredIndexesResponse_Index) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_query_v1_query_proto_rawDescGZIP(), []int{11, 0}
}

func (x *BuildDeferredIndexesResponse_Index) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *BuildDeferredIndexesResponse_Index) GetScopeName() string {
	if x != nil && x.ScopeName != nil {
		return *x.ScopeName
	}
	return ""
}

func (x *BuildDeferredIndexesResponse_Index) GetCollectionName() string {
	if x != nil && x.CollectionName != nil {
		return *x.CollectionName
	}
	return ""
}

func (x *BuildDeferredIndexesResponse_Index) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_couchbase_admin_query_v1_query_proto protoreflect.FileDescriptor

const file_couchbase_admin_query_v1_query_proto_rawDesc = "" +
	"\n" +
	"$couchbase/admin/query/v1/query.proto\x12\x18couchbase.admin.query.v1\"\xc1\x01\n" +
	"\x14GetAllIndexesRequest\x12$\n" +
	"\vbucket_name\x18\x01 \x01(\tH\x00R\n" +
	"bucketName\x88\x01\x01\x12\"\n" +
	"\n" +
	"scope_name\x18\x02 \x01(\tH\x01R\tscopeName\x88\x01\x01\x12,\n" +
	"\x0fcollection_name\x18\x03 \x01(\tH\x02R\x0ecollectionName\x88\x01\x01B\x0e\n" +
	"\f_bucket_nameB\r\n" +
	"\v_scope_nameB\x12\n" +
	"\x10_collection_name\"\xfd\x03\n" +
	"\x15GetAllIndexesResponse\x12O\n" +
	"\aindexes\x18\x01 \x03(\v25.couchbase.admin.query.v1.GetAllIndexesResponse.IndexR\aindexes\x1a\x92\x03\n" +
	"\x05Index\x12\x1f\n" +
	"\vbucket_name\x18\x01 \x01(\tR\n" +
	"bucketName\x12\x1d\n" +
	"\n" +
	"scope_name\x18\x02 \x01(\tR\tscopeName\x12'\n" +
	"\x0fcollection_name\x18\x03 \x01(\tR\x0ecollectionName\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"is_primary\x18\x05 \x01(\bR\tisPrimary\x127\n" +
	"\x04type\x18\x06 \x01(\x0e2#.couchbase.admin.query.v1.IndexTypeR\x04type\x12:\n" +
	"\x05state\x18\a \x01(\x0e2$.couchbase.admin.query.v1.IndexStateR\x05state\x12\x16\n" +
	"\x06fields\x18\b \x03(\tR\x06fields\x12!\n" +
	"\tcondition\x18\t \x01(\tH\x00R\tcondition\x88\x01\x01\x12!\n" +
	"\tpartition\x18\n" +
	" \x01(\tH\x01R\tpartition\x88\x01\x01B\f\n" +
	"\n" +
	"_conditionB\f\n" +
	"\n" +
	"_partition\"\xfe\x02\n" +
	"\x19CreatePrimaryIndexRequest\x12\x1f\n" +
	"\vbucket_name\x18\x01 \x01(\tR\n" +
	"bucketName\x12\"\n" +
	"\n" +
	"scope_name\x18\x02 \x01(\tH\x00R\tscopeName\x88\x01\x01\x12,\n" +
	"\x0fcollection_name\x18\x03 \x01(\tH\x01R\x0ecollectionName\x88\x01\x01\x12\x17\n" +
	"\x04name\x18\x04 \x01(\tH\x02R\x04name\x88\x01\x01\x12&\n" +
	"\fnum_replicas\x18\x05 \x01(\x05H\x03R\vnumReplicas\x88\x01\x01\x12\x1f\n" +
	"\bdeferred\x18\x06 \x01(\bH\x04R\bdeferred\x88\x01\x01\x12-\n" +
	"\x10ignore_if_exists\x18\a \x01(\bH\x05R\x0eignoreIfExists\x88\x01\x01B\r\n" +
	"\v_scope_nameB\x12\n" +
	"\x10_collection_nameB\a\n" +
	"\x05_nameB\x0f\n" +
	"\r_num_replicasB\v\n" +
	"\t_deferredB\x13\n" +
	"\x11_ignore_if_exists\"\x1c\n" +
	"\x1aCreatePrimaryIndexResponse\"\x81\x03\n" +
	"\x12CreateIndexRequest\x12\x1f\n" +
	"\vbucket_name\x18\x01 \x01(\tR\n" +
	"bucketName\x12\"\n" +
	"\n" +
	"scope_name\x18\x02 \x01(\tH\x00R\tscopeName\x88\x01\x01\x12,\n" +
	"\x0fcollection_name\x18\x03 \x01(\tH\x01R\x0ecollectionName\x88\x01\x01\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12&\n" +
	"\fnum_replicas\x18\x05 \x01(\x05H\x02R\vnumReplicas\x88\x01\x01\x12\x16\n" +
	"\x06fields\x18\x06 \x03(\tR\x06fields\x12\x1f\n" +
	"\bdeferred\x18\a \x01(\bH\x03R\bdeferred\x88\x01\x01\x12-\n" +
	"\x10ignore_if_exists\x18\b \x01(\bH\x04R\x0eignoreIfExists\x88\x01\x01B\r\n" +
	"\v_scope_nameB\x12\n" +
	"\x10_collection_nameB\x0f\n" +
	"\r_num_replicasB\v\n" +
	"\t_deferredB\x13\n" +
	"\x11_ignore_if_exists\"\x15\n" +
	"\x13CreateIndexResponse\"\x98\x02\n" +
	"\x17DropPrimaryIndexRequest\x12\x1f\n" +
	"\vbucket_name\x18\x01 \x01(\tR\n" +
	"bucketName\x12\"\n" +
	"\n" +
	"scope_name\x18\x02 \x01(\tH\x00R\tscopeName\x88\x01\x01\x12,\n" +
	"\x0fcollection_name\x18\x03 \x01(\tH\x01R\x0ecollectionName\x88\x01\x01\x12\x17\n" +
	"\x04name\x18\x04 \x01(\tH\x02R\x04name\x88\x01\x01\x12/\n" +
	"\x11ignore_if_missing\x18\x05 \x01(\bH\x03R\x0fignoreIfMissing\x88\x01\x01B\r\n" +
	"\v_scope_nameB\x12\n" +
	"\x10_collection_nameB\a\n" +
	"\x05_nameB\x14\n" +
	"\x12_ignore_if_missing\"\x1a\n" +
	"\x18DropPrimaryIndexResponse\"\x83\x02\n" +
	"\x10DropIndexRequest\x12\x1f\n" +
	"\vbucket_name\x18\x01 \x01(\tR\n" +
	"bucketName\x12\"\n" +
	"\n" +
	"scope_name\x18\x02 \x01(\tH\x00R\tscopeName\x88\x01\x01\x12,\n" +
	"\x0fcollection_name\x18\x03 \x01(\tH\x01R\x0ecollectionName\x88\x01\x01\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12/\n" +
	"\x11ignore_if_missing\x18\x05 \x01(\bH\x02R\x0fignoreIfMissing\x88\x01\x01B\r\n" +
	"\v_scope_nameB\x12\n" +
	"\x10_collection_nameB\x14\n" +
	"\x12_ignore_if_missing\"\x13\n" +
	"\x11DropIndexResponse\"\xb3\x01\n" +
	"\x1bBuildDeferredIndexesRequest\x12\x1f\n" +
	"\vbucket_name\x18\x01 \x01(\tR\n" +
	"bucketName\x12\"\n" +
	"\n" +
	"scope_name\x18\x02 \x01(\tH\x00R\tscopeName\x88\x01\x01\x12,\n" +
	"\x0fcollection_name\x18\x03 \x01(\tH\x01R\x0ecollectionName\x88\x01\x01B\r\n" +
	"\v_scope_nameB\x12\n" +
	"\x10_collection_name\"\xaa\x02\n" +
	"\x1cBuildDeferredIndexesResponse\x12V\n" +
	"\aindexes\x18\x01 \x03(\v2<.couchbase.admin.query.v1.BuildDeferredIndexesResponse.IndexR\aindexes\x1a\xb1\x01\n" +
	"\x05Index\x12\x1f\n" +
	"\vbucket_name\x18\x01 \x01(\tR\n" +
	"bucketName\x12\"\n" +
	"\n" +
	"scope_name\x18\x02 \x01(\tH\x00R\tscopeName\x88\x01\x01\x12,\n" +
	"\x0fcollection_name\x18\x03 \x01(\tH\x01R\x0ecollectionName\x88\x01\x01\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04nameB\r\n" +
	"\v_scope_nameB\x12\n" +
	"\x10_collection_name\"\x98\x01\n" +
	"\x19WaitForIndexOnlineRequest\x12\x1f\n" +
	"\vbucket_name\x18\x01 \x01(\tR\n" +
	"bucketName\x12\x1d\n" +
	"\n" +
	"scope_name\x18\x02 \x01(\tR\tscopeName\x12'\n" +
	"\x0fcollection_name\x18\x03 \x01(\tR\x0ecollectionName\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\"\x1c\n" +
	"\x1aWaitForIndexOnlineResponse*4\n" +
	"\tIndexType\x12\x13\n" +
	"\x0fINDEX_TYPE_VIEW\x10\x00\x12\x12\n" +
	"\x0eINDEX_TYPE_GSI\x10\x01*\xbf\x01\n" +
	"\n" +
	"IndexState\x12\x18\n" +
	"\x14INDEX_STATE_DEFERRED\x10\x00\x12\x18\n" +
	"\x14INDEX_STATE_BUILDING\x10\x01\x12\x17\n" +
	"\x13INDEX_STATE_PENDING\x10\x02\x12\x16\n" +
	"\x12INDEX_STATE_ONLINE\x10\x03\x12\x17\n" +
	"\x13INDEX_STATE_OFFLINE\x10\x04\x12\x18\n" +
	"\x14INDEX_STATE_ABRIDGED\x10\x05\x12\x19\n" +
	"\x15INDEX_STATE_SCHEDULED\x10\x062\xec\x06\n" +
	"\x11QueryAdminService\x12r\n" +
	"\rGetAllIndexes\x12..couchbase.admin.query.v1.GetAllIndexesRequest\x1a/.couchbase.admin.query.v1.GetAllIndexesResponse\"\x00\x12\x81\x01\n" +
	"\x12CreatePrimaryIndex\x123.couchbase.admin.query.v1.CreatePrimaryIndexRequest\x1a4.couchbase.admin.query.v1.CreatePrimaryIndexResponse\"\x00\x12l\n" +
	"\vCreateIndex\x12,.couchbase.admin.query.v1.CreateIndexRequest\x1a-.couchbase.admin.query.v1.CreateIndexResponse\"\x00\x12{\n" +
	"\x10DropPrimaryIndex\x121.couchbase.admin.query.v1.DropPrimaryIndexRequest\x1a2.couchbase.admin.query.v1.DropPrimaryIndexResponse\"\x00\x12f\n" +
	"\tDropIndex\x12*.couchbase.admin.query.v1.DropIndexRequest\x1a+.couchbase.admin.query.v1.DropIndexResponse\"\x00\x12\x87\x01\n" +
	"\x14BuildDeferredIndexes\x125.couchbase.admin.query.v1.BuildDeferredIndexesRequest\x1a6.couchbase.admin.query.v1.BuildDeferredIndexesResponse\"\x00\x12\x81\x01\n" +
	"\x12WaitForIndexOnline\x123.couchbase.admin.query.v1.WaitForIndexOnlineRequest\x1a4.couchbase.admin.query.v1.WaitForIndexOnlineResponse\"\x00B\x91\x02\n" +
	"0com.couchbase.client.protostellar.admin.query.v1P\x01ZJgithub.com/couchbase/goprotostellar/genproto/admin_query_v1;admin_query_v1\xaa\x02%Couchbase.Protostellar.Admin.Query.V1\xca\x02/Couchbase\\Protostellar\\Generated\\Admin\\Query\\V1\xea\x024Couchbase::Protostellar::Generated::Admin::Query::V1b\x06proto3"

var (
	file_couchbase_admin_query_v1_query_proto_rawDescOnce sync.Once
	file_couchbase_admin_query_v1_query_proto_rawDescData []byte
)

func file_couchbase_admin_query_v1_query_proto_rawDescGZIP() []byte {
	file_couchbase_admin_query_v1_query_proto_rawDescOnce.Do(func() {
		file_couchbase_admin_query_v1_query_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_couchbase_admin_query_v1_query_proto_rawDesc), len(file_couchbase_admin_query_v1_query_proto_rawDesc)))
	})
	return file_couchbase_admin_query_v1_query_proto_rawDescData
}

var file_couchbase_admin_query_v1_query_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_couchbase_admin_query_v1_query_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_couchbase_admin_query_v1_query_proto_goTypes = []any{
	(IndexType)(0),                             // 0: couchbase.admin.query.v1.IndexType
	(IndexState)(0),                            // 1: couchbase.admin.query.v1.IndexState
	(*GetAllIndexesRequest)(nil),               // 2: couchbase.admin.query.v1.GetAllIndexesRequest
	(*GetAllIndexesResponse)(nil),              // 3: couchbase.admin.query.v1.GetAllIndexesResponse
	(*CreatePrimaryIndexRequest)(nil),          // 4: couchbase.admin.query.v1.CreatePrimaryIndexRequest
	(*CreatePrimaryIndexResponse)(nil),         // 5: couchbase.admin.query.v1.CreatePrimaryIndexResponse
	(*CreateIndexRequest)(nil),                 // 6: couchbase.admin.query.v1.CreateIndexRequest
	(*CreateIndexResponse)(nil),                // 7: couchbase.admin.query.v1.CreateIndexResponse
	(*DropPrimaryIndexRequest)(nil),            // 8: couchbase.admin.query.v1.DropPrimaryIndexRequest
	(*DropPrimaryIndexResponse)(nil),           // 9: couchbase.admin.query.v1.DropPrimaryIndexResponse
	(*DropIndexRequest)(nil),                   // 10: couchbase.admin.query.v1.DropIndexRequest
	(*DropIndexResponse)(nil),                  // 11: couchbase.admin.query.v1.DropIndexResponse
	(*BuildDeferredIndexesRequest)(nil),        // 12: couchbase.admin.query.v1.BuildDeferredIndexesRequest
	(*BuildDeferredIndexesResponse)(nil),       // 13: couchbase.admin.query.v1.BuildDeferredIndexesResponse
	(*WaitForIndexOnlineRequest)(nil),          // 14: couchbase.admin.query.v1.WaitForIndexOnlineRequest
	(*WaitForIndexOnlineResponse)(nil),         // 15: couchbase.admin.query.v1.WaitForIndexOnlineResponse
	(*GetAllIndexesResponse_Index)(nil),        // 16: couchbase.admin.query.v1.GetAllIndexesResponse.Index
	(*BuildDeferredIndexesResponse_Index)(nil), // 17: couchbase.admin.query.v1.BuildDeferredIndexesResponse.Index
}
var file_couchbase_admin_query_v1_query_proto_depIdxs = []int32{
	16, // 0: couchbase.admin.query.v1.GetAllIndexesResponse.indexes:type_name -> couchbase.admin.query.v1.GetAllIndexesResponse.Index
	17, // 1: couchbase.admin.query.v1.BuildDeferredIndexesResponse.indexes:type_name -> couchbase.admin.query.v1.BuildDeferredIndexesResponse.Index
	0,  // 2: couchbase.admin.query.v1.GetAllIndexesResponse.Index.type:type_name -> couchbase.admin.query.v1.IndexType
	1,  // 3: couchbase.admin.query.v1.GetAllIndexesResponse.Index.state:type_name -> couchbase.admin.query.v1.IndexState
	2,  // 4: couchbase.admin.query.v1.QueryAdminService.GetAllIndexes:input_type -> couchbase.admin.query.v1.GetAllIndexesRequest
	4,  // 5: couchbase.admin.query.v1.QueryAdminService.CreatePrimaryIndex:input_type -> couchbase.admin.query.v1.CreatePrimaryIndexRequest
	6,  // 6: couchbase.admin.query.v1.QueryAdminService.CreateIndex:input_type -> couchbase.admin.query.v1.CreateIndexRequest
	8,  // 7: couchbase.admin.query.v1.QueryAdminService.DropPrimaryIndex:input_type -> couchbase.admin.query.v1.DropPrimaryIndexRequest
	10, // 8: couchbase.admin.query.v1.QueryAdminService.DropIndex:input_type -> couchbase.admin.query.v1.DropIndexRequest
	12, // 9: couchbase.admin.query.v1.QueryAdminService.BuildDeferredIndexes:input_type -> couchbase.admin.query.v1.BuildDeferredIndexesRequest
	14, // 10: couchbase.admin.query.v1.QueryAdminService.WaitForIndexOnline:input_type -> couchbase.admin.query.v1.WaitForIndexOnlineRequest
	3,  // 11: couchbase.admin.query.v1.QueryAdminService.GetAllIndexes:output_type -> couchbase.admin.query.v1.GetAllIndexesResponse
	5,  // 12: couchbase.admin.query.v1.QueryAdminService.CreatePrimaryIndex:output_type -> couchbase.admin.query.v1.CreatePrimaryIndexResponse
	7,  // 13: couchbase.admin.query.v1.QueryAdminService.CreateIndex:output_type -> couchbase.admin.query.v1.CreateIndexResponse
	9,  // 14: couchbase.admin.query.v1.QueryAdminService.DropPrimaryIndex:output_type -> couchbase.admin.query.v1.DropPrimaryIndexResponse
	11, // 15: couchbase.admin.query.v1.QueryAdminService.DropIndex:output_type -> couchbase.admin.query.v1.DropIndexResponse
	13, // 16: couchbase.admin.query.v1.QueryAdminService.BuildDeferredIndexes:output_type -> couchbase.admin.query.v1.BuildDeferredIndexesResponse
	15, // 17: couchbase.admin.query.v1.QueryAdminService.WaitForIndexOnline:output_type -> couchbase.admin.query.v1.WaitForIndexOnlineResponse
	11, // [11:18] is the sub-list for method output_type
	4,  // [4:11] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_couchbase_admin_query_v1_query_proto_init() }
func file_couchbase_admin_query_v1_query_proto_init() {
	if File_couchbase_admin_query_v1_query_proto != nil {
		return
	}
	file_couchbase_admin_query_v1_query_proto_msgTypes[0].OneofWrappers = []any{}
	file_couchbase_admin_query_v1_query_proto_msgTypes[2].OneofWrappers = []any{}
	file_couchbase_admin_query_v1_query_proto_msgTypes[4].OneofWrappers = []any{}
	file_couchbase_admin_query_v1_query_proto_msgTypes[6].OneofWrappers = []any{}
	file_couchbase_admin_query_v1_query_proto_msgTypes[8].OneofWrappers = []any{}
	file_couchbase_admin_query_v1_query_proto_msgTypes[10].OneofWrappers = []any{}
	file_couchbase_admin_query_v1_query_proto_msgTypes[14].OneofWrappers = []any{}
	file_couchbase_admin_query_v1_query_proto_msgTypes[15].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_couchbase_admin_query_v1_query_proto_rawDesc), len(file_couchbase_admin_query_v1_query_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_couchbase_admin_query_v1_query_proto_goTypes,
		DependencyIndexes: file_couchbase_admin_query_v1_query_proto_depIdxs,
		EnumInfos:         file_couchbase_admin_query_v1_query_proto_enumTypes,
		MessageInfos:      file_couchbase_admin_query_v1_query_proto_msgTypes,
	}.Build()
	File_couchbase_admin_query_v1_query_proto = out.File
	file_couchbase_admin_query_v1_query_proto_goTypes = nil
	file_couchbase_admin_query_v1_query_proto_depIdxs = nil
}
