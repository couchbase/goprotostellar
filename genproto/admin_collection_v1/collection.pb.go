// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: couchbase/admin/collection/v1/collection.proto

package admin_collection_v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListCollectionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BucketName    string                 `protobuf:"bytes,1,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCollectionsRequest) Reset() {
	*x = ListCollectionsRequest{}
	mi := &file_couchbase_admin_collection_v1_collection_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCollectionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCollectionsRequest) ProtoMessage() {}

func (x *ListCollectionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_collection_v1_collection_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCollectionsRequest.ProtoReflect.Descriptor instead.
func (*ListCollectionsRequest) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_collection_v1_collection_proto_rawDescGZIP(), []int{0}
}

func (x *ListCollectionsRequest) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

type ListCollectionsResponse struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	Scopes        []*ListCollectionsResponse_Scope `protobuf:"bytes,1,rep,name=scopes,proto3" json:"scopes,omitempty"`
	ManifestUid   uint64                           `protobuf:"varint,2,opt,name=manifest_uid,json=manifestUid,proto3" json:"manifest_uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCollectionsResponse) Reset() {
	*x = ListCollectionsResponse{}
	mi := &file_couchbase_admin_collection_v1_collection_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCollectionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCollectionsResponse) ProtoMessage() {}

func (x *ListCollectionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_collection_v1_collection_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCollectionsResponse.ProtoReflect.Descriptor instead.
func (*ListCollectionsResponse) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_collection_v1_collection_proto_rawDescGZIP(), []int{1}
}

func (x *ListCollectionsResponse) GetScopes() []*ListCollectionsResponse_Scope {
	if x != nil {
		return x.Scopes
	}
	return nil
}

func (x *ListCollectionsResponse) GetManifestUid() uint64 {
	if x != nil {
		return x.ManifestUid
	}
	return 0
}

type CreateScopeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BucketName    string                 `protobuf:"bytes,1,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	ScopeName     string                 `protobuf:"bytes,2,opt,name=scope_name,json=scopeName,proto3" json:"scope_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateScopeRequest) Reset() {
	*x = CreateScopeRequest{}
	mi := &file_couchbase_admin_collection_v1_collection_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateScopeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateScopeRequest) ProtoMessage() {}

func (x *CreateScopeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_collection_v1_collection_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateScopeRequest.ProtoReflect.Descriptor instead.
func (*CreateScopeRequest) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_collection_v1_collection_proto_rawDescGZIP(), []int{2}
}

func (x *CreateScopeRequest) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *CreateScopeRequest) GetScopeName() string {
	if x != nil {
		return x.ScopeName
	}
	return ""
}

type CreateScopeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ManifestUid   uint64                 `protobuf:"varint,1,opt,name=manifest_uid,json=manifestUid,proto3" json:"manifest_uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateScopeResponse) Reset() {
	*x = CreateScopeResponse{}
	mi := &file_couchbase_admin_collection_v1_collection_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateScopeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateScopeResponse) ProtoMessage() {}

func (x *CreateScopeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_collection_v1_collection_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateScopeResponse.ProtoReflect.Descriptor instead.
func (*CreateScopeResponse) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_collection_v1_collection_proto_rawDescGZIP(), []int{3}
}

func (x *CreateScopeResponse) GetManifestUid() uint64 {
	if x != nil {
		return x.ManifestUid
	}
	return 0
}

type DeleteScopeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BucketName    string                 `protobuf:"bytes,1,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	ScopeName     string                 `protobuf:"bytes,2,opt,name=scope_name,json=scopeName,proto3" json:"scope_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteScopeRequest) Reset() {
	*x = DeleteScopeRequest{}
	mi := &file_couchbase_admin_collection_v1_collection_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteScopeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteScopeRequest) ProtoMessage() {}

func (x *DeleteScopeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_collection_v1_collection_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteScopeRequest.ProtoReflect.Descriptor instead.
func (*DeleteScopeRequest) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_collection_v1_collection_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteScopeRequest) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *DeleteScopeRequest) GetScopeName() string {
	if x != nil {
		return x.ScopeName
	}
	return ""
}

type DeleteScopeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ManifestUid   uint64                 `protobuf:"varint,1,opt,name=manifest_uid,json=manifestUid,proto3" json:"manifest_uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteScopeResponse) Reset() {
	*x = DeleteScopeResponse{}
	mi := &file_couchbase_admin_collection_v1_collection_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteScopeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteScopeResponse) ProtoMessage() {}

func (x *DeleteScopeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_collection_v1_collection_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteScopeResponse.ProtoReflect.Descriptor instead.
func (*DeleteScopeResponse) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_collection_v1_collection_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteScopeResponse) GetManifestUid() uint64 {
	if x != nil {
		return x.ManifestUid
	}
	return 0
}

type CreateCollectionRequest struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	BucketName              string                 `protobuf:"bytes,1,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	ScopeName               string                 `protobuf:"bytes,2,opt,name=scope_name,json=scopeName,proto3" json:"scope_name,omitempty"`
	CollectionName          string                 `protobuf:"bytes,3,opt,name=collection_name,json=collectionName,proto3" json:"collection_name,omitempty"`
	MaxExpirySecs           *uint32                `protobuf:"varint,4,opt,name=max_expiry_secs,json=maxExpirySecs,proto3,oneof" json:"max_expiry_secs,omitempty"`
	HistoryRetentionEnabled *bool                  `protobuf:"varint,5,opt,name=history_retention_enabled,json=historyRetentionEnabled,proto3,oneof" json:"history_retention_enabled,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *CreateCollectionRequest) Reset() {
	*x = CreateCollectionRequest{}
	mi := &file_couchbase_admin_collection_v1_collection_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCollectionRequest) ProtoMessage() {}

func (x *CreateCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_collection_v1_collection_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCollectionRequest.ProtoReflect.Descriptor instead.
func (*CreateCollectionRequest) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_collection_v1_collection_proto_rawDescGZIP(), []int{6}
}

func (x *CreateCollectionRequest) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *CreateCollectionRequest) GetScopeName() string {
	if x != nil {
		return x.ScopeName
	}
	return ""
}

func (x *CreateCollectionRequest) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *CreateCollectionRequest) GetMaxExpirySecs() uint32 {
	if x != nil && x.MaxExpirySecs != nil {
		return *x.MaxExpirySecs
	}
	return 0
}

func (x *CreateCollectionRequest) GetHistoryRetentionEnabled() bool {
	if x != nil && x.HistoryRetentionEnabled != nil {
		return *x.HistoryRetentionEnabled
	}
	return false
}

type CreateCollectionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ManifestUid   uint64                 `protobuf:"varint,1,opt,name=manifest_uid,json=manifestUid,proto3" json:"manifest_uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCollectionResponse) Reset() {
	*x = CreateCollectionResponse{}
	mi := &file_couchbase_admin_collection_v1_collection_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCollectionResponse) ProtoMessage() {}

func (x *CreateCollectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_collection_v1_collection_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCollectionResponse.ProtoReflect.Descriptor instead.
func (*CreateCollectionResponse) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_collection_v1_collection_proto_rawDescGZIP(), []int{7}
}

func (x *CreateCollectionResponse) GetManifestUid() uint64 {
	if x != nil {
		return x.ManifestUid
	}
	return 0
}

type UpdateCollectionRequest struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	BucketName              string                 `protobuf:"bytes,1,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	ScopeName               string                 `protobuf:"bytes,2,opt,name=scope_name,json=scopeName,proto3" json:"scope_name,omitempty"`
	CollectionName          string                 `protobuf:"bytes,3,opt,name=collection_name,json=collectionName,proto3" json:"collection_name,omitempty"`
	MaxExpirySecs           *uint32                `protobuf:"varint,4,opt,name=max_expiry_secs,json=maxExpirySecs,proto3,oneof" json:"max_expiry_secs,omitempty"`
	HistoryRetentionEnabled *bool                  `protobuf:"varint,5,opt,name=history_retention_enabled,json=historyRetentionEnabled,proto3,oneof" json:"history_retention_enabled,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *UpdateCollectionRequest) Reset() {
	*x = UpdateCollectionRequest{}
	mi := &file_couchbase_admin_collection_v1_collection_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCollectionRequest) ProtoMessage() {}

func (x *UpdateCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_collection_v1_collection_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCollectionRequest.ProtoReflect.Descriptor instead.
func (*UpdateCollectionRequest) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_collection_v1_collection_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateCollectionRequest) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *UpdateCollectionRequest) GetScopeName() string {
	if x != nil {
		return x.ScopeName
	}
	return ""
}

func (x *UpdateCollectionRequest) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *UpdateCollectionRequest) GetMaxExpirySecs() uint32 {
	if x != nil && x.MaxExpirySecs != nil {
		return *x.MaxExpirySecs
	}
	return 0
}

func (x *UpdateCollectionRequest) GetHistoryRetentionEnabled() bool {
	if x != nil && x.HistoryRetentionEnabled != nil {
		return *x.HistoryRetentionEnabled
	}
	return false
}

type UpdateCollectionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ManifestUid   uint64                 `protobuf:"varint,1,opt,name=manifest_uid,json=manifestUid,proto3" json:"manifest_uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateCollectionResponse) Reset() {
	*x = UpdateCollectionResponse{}
	mi := &file_couchbase_admin_collection_v1_collection_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCollectionResponse) ProtoMessage() {}

func (x *UpdateCollectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_collection_v1_collection_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCollectionResponse.ProtoReflect.Descriptor instead.
func (*UpdateCollectionResponse) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_collection_v1_collection_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateCollectionResponse) GetManifestUid() uint64 {
	if x != nil {
		return x.ManifestUid
	}
	return 0
}

type DeleteCollectionRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	BucketName     string                 `protobuf:"bytes,1,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	ScopeName      string                 `protobuf:"bytes,2,opt,name=scope_name,json=scopeName,proto3" json:"scope_name,omitempty"`
	CollectionName string                 `protobuf:"bytes,3,opt,name=collection_name,json=collectionName,proto3" json:"collection_name,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DeleteCollectionRequest) Reset() {
	*x = DeleteCollectionRequest{}
	mi := &file_couchbase_admin_collection_v1_collection_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCollectionRequest) ProtoMessage() {}

func (x *DeleteCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_collection_v1_collection_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCollectionRequest.ProtoReflect.Descriptor instead.
func (*DeleteCollectionRequest) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_collection_v1_collection_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteCollectionRequest) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *DeleteCollectionRequest) GetScopeName() string {
	if x != nil {
		return x.ScopeName
	}
	return ""
}

func (x *DeleteCollectionRequest) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

type DeleteCollectionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ManifestUid   uint64                 `protobuf:"varint,1,opt,name=manifest_uid,json=manifestUid,proto3" json:"manifest_uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCollectionResponse) Reset() {
	*x = DeleteCollectionResponse{}
	mi := &file_couchbase_admin_collection_v1_collection_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCollectionResponse) ProtoMessage() {}

func (x *DeleteCollectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_collection_v1_collection_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCollectionResponse.ProtoReflect.Descriptor instead.
func (*DeleteCollectionResponse) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_collection_v1_collection_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteCollectionResponse) GetManifestUid() uint64 {
	if x != nil {
		return x.ManifestUid
	}
	return 0
}

type ListCollectionsResponse_Collection struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	Name                    string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	MaxExpirySecs           *uint32                `protobuf:"varint,2,opt,name=max_expiry_secs,json=maxExpirySecs,proto3,oneof" json:"max_expiry_secs,omitempty"`
	HistoryRetentionEnabled *bool                  `protobuf:"varint,3,opt,name=history_retention_enabled,json=historyRetentionEnabled,proto3,oneof" json:"history_retention_enabled,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ListCollectionsResponse_Collection) Reset() {
	*x = ListCollectionsResponse_Collection{}
	mi := &file_couchbase_admin_collection_v1_collection_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCollectionsResponse_Collection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCollectionsResponse_Collection) ProtoMessage() {}

func (x *ListCollectionsResponse_Collection) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_collection_v1_collection_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCollectionsResponse_Collection.ProtoReflect.Descriptor instead.
func (*ListCollectionsResponse_Collection) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_collection_v1_collection_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ListCollectionsResponse_Collection) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListCollectionsResponse_Collection) GetMaxExpirySecs() uint32 {
	if x != nil && x.MaxExpirySecs != nil {
		return *x.MaxExpirySecs
	}
	return 0
}

func (x *ListCollectionsResponse_Collection) GetHistoryRetentionEnabled() bool {
	if x != nil && x.HistoryRetentionEnabled != nil {
		return *x.HistoryRetentionEnabled
	}
	return false
}

type ListCollectionsResponse_Scope struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Name          string                                `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Collections   []*ListCollectionsResponse_Collection `protobuf:"bytes,2,rep,name=collections,proto3" json:"collections,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCollectionsResponse_Scope) Reset() {
	*x = ListCollectionsResponse_Scope{}
	mi := &file_couchbase_admin_collection_v1_collection_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCollectionsResponse_Scope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCollectionsResponse_Scope) ProtoMessage() {}

func (x *ListCollectionsResponse_Scope) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_admin_collection_v1_collection_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCollectionsResponse_Scope.ProtoReflect.Descriptor instead.
func (*ListCollectionsResponse_Scope) Descriptor() ([]byte, []int) {
	return file_couchbase_admin_collection_v1_collection_proto_rawDescGZIP(), []int{1, 1}
}

func (x *ListCollectionsResponse_Scope) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListCollectionsResponse_Scope) GetCollections() []*ListCollectionsResponse_Collection {
	if x != nil {
		return x.Collections
	}
	return nil
}

var File_couchbase_admin_collection_v1_collection_proto protoreflect.FileDescriptor

const file_couchbase_admin_collection_v1_collection_proto_rawDesc = "" +
	"\n" +
	".couchbase/admin/collection/v1/collection.proto\x12\x1dcouchbase.admin.collection.v1\"9\n" +
	"\x16ListCollectionsRequest\x12\x1f\n" +
	"\vbucket_name\x18\x01 \x01(\tR\n" +
	"bucketName\"\xd8\x03\n" +
	"\x17ListCollectionsResponse\x12T\n" +
	"\x06scopes\x18\x01 \x03(\v2<.couchbase.admin.collection.v1.ListCollectionsResponse.ScopeR\x06scopes\x12!\n" +
	"\fmanifest_uid\x18\x02 \x01(\x04R\vmanifestUid\x1a\xc0\x01\n" +
	"\n" +
	"Collection\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12+\n" +
	"\x0fmax_expiry_secs\x18\x02 \x01(\rH\x00R\rmaxExpirySecs\x88\x01\x01\x12?\n" +
	"\x19history_retention_enabled\x18\x03 \x01(\bH\x01R\x17historyRetentionEnabled\x88\x01\x01B\x12\n" +
	"\x10_max_expiry_secsB\x1c\n" +
	"\x1a_history_retention_enabled\x1a\x80\x01\n" +
	"\x05Scope\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12c\n" +
	"\vcollections\x18\x02 \x03(\v2A.couchbase.admin.collection.v1.ListCollectionsResponse.CollectionR\vcollections\"T\n" +
	"\x12CreateScopeRequest\x12\x1f\n" +
	"\vbucket_name\x18\x01 \x01(\tR\n" +
	"bucketName\x12\x1d\n" +
	"\n" +
	"scope_name\x18\x02 \x01(\tR\tscopeName\"8\n" +
	"\x13CreateScopeResponse\x12!\n" +
	"\fmanifest_uid\x18\x01 \x01(\x04R\vmanifestUid\"T\n" +
	"\x12DeleteScopeRequest\x12\x1f\n" +
	"\vbucket_name\x18\x01 \x01(\tR\n" +
	"bucketName\x12\x1d\n" +
	"\n" +
	"scope_name\x18\x02 \x01(\tR\tscopeName\"8\n" +
	"\x13DeleteScopeResponse\x12!\n" +
	"\fmanifest_uid\x18\x01 \x01(\x04R\vmanifestUid\"\xa2\x02\n" +
	"\x17CreateCollectionRequest\x12\x1f\n" +
	"\vbucket_name\x18\x01 \x01(\tR\n" +
	"bucketName\x12\x1d\n" +
	"\n" +
	"scope_name\x18\x02 \x01(\tR\tscopeName\x12'\n" +
	"\x0fcollection_name\x18\x03 \x01(\tR\x0ecollectionName\x12+\n" +
	"\x0fmax_expiry_secs\x18\x04 \x01(\rH\x00R\rmaxExpirySecs\x88\x01\x01\x12?\n" +
	"\x19history_retention_enabled\x18\x05 \x01(\bH\x01R\x17historyRetentionEnabled\x88\x01\x01B\x12\n" +
	"\x10_max_expiry_secsB\x1c\n" +
	"\x1a_history_retention_enabled\"=\n" +
	"\x18CreateCollectionResponse\x12!\n" +
	"\fmanifest_uid\x18\x01 \x01(\x04R\vmanifestUid\"\xa2\x02\n" +
	"\x17UpdateCollectionRequest\x12\x1f\n" +
	"\vbucket_name\x18\x01 \x01(\tR\n" +
	"bucketName\x12\x1d\n" +
	"\n" +
	"scope_name\x18\x02 \x01(\tR\tscopeName\x12'\n" +
	"\x0fcollection_name\x18\x03 \x01(\tR\x0ecollectionName\x12+\n" +
	"\x0fmax_expiry_secs\x18\x04 \x01(\rH\x00R\rmaxExpirySecs\x88\x01\x01\x12?\n" +
	"\x19history_retention_enabled\x18\x05 \x01(\bH\x01R\x17historyRetentionEnabled\x88\x01\x01B\x12\n" +
	"\x10_max_expiry_secsB\x1c\n" +
	"\x1a_history_retention_enabled\"=\n" +
	"\x18UpdateCollectionResponse\x12!\n" +
	"\fmanifest_uid\x18\x01 \x01(\x04R\vmanifestUid\"\x82\x01\n" +
	"\x17DeleteCollectionRequest\x12\x1f\n" +
	"\vbucket_name\x18\x01 \x01(\tR\n" +
	"bucketName\x12\x1d\n" +
	"\n" +
	"scope_name\x18\x02 \x01(\tR\tscopeName\x12'\n" +
	"\x0fcollection_name\x18\x03 \x01(\tR\x0ecollectionName\"=\n" +
	"\x18DeleteCollectionResponse\x12!\n" +
	"\fmanifest_uid\x18\x01 \x01(\x04R\vmanifestUid2\xa5\x06\n" +
	"\x16CollectionAdminService\x12\x82\x01\n" +
	"\x0fListCollections\x125.couchbase.admin.collection.v1.ListCollectionsRequest\x1a6.couchbase.admin.collection.v1.ListCollectionsResponse\"\x00\x12v\n" +
	"\vCreateScope\x121.couchbase.admin.collection.v1.CreateScopeRequest\x1a2.couchbase.admin.collection.v1.CreateScopeResponse\"\x00\x12v\n" +
	"\vDeleteScope\x121.couchbase.admin.collection.v1.DeleteScopeRequest\x1a2.couchbase.admin.collection.v1.DeleteScopeResponse\"\x00\x12\x85\x01\n" +
	"\x10CreateCollection\x126.couchbase.admin.collection.v1.CreateCollectionRequest\x1a7.couchbase.admin.collection.v1.CreateCollectionResponse\"\x00\x12\x85\x01\n" +
	"\x10UpdateCollection\x126.couchbase.admin.collection.v1.UpdateCollectionRequest\x1a7.couchbase.admin.collection.v1.UpdateCollectionResponse\"\x00\x12\x85\x01\n" +
	"\x10DeleteCollection\x126.couchbase.admin.collection.v1.DeleteCollectionRequest\x1a7.couchbase.admin.collection.v1.DeleteCollectionResponse\"\x00B\xaf\x02\n" +
	"5com.couchbase.client.protostellar.admin.collection.v1P\x01ZTgithub.com/couchbase/goprotostellar/genproto/admin_collection_v1;admin_collection_v1\xaa\x02*Couchbase.Protostellar.Admin.Collection.V1\xca\x024Couchbase\\Protostellar\\Generated\\Admin\\Collection\\V1\xea\x029Couchbase::Protostellar::Generated::Admin::Collection::V1b\x06proto3"

var (
	file_couchbase_admin_collection_v1_collection_proto_rawDescOnce sync.Once
	file_couchbase_admin_collection_v1_collection_proto_rawDescData []byte
)

func file_couchbase_admin_collection_v1_collection_proto_rawDescGZIP() []byte {
	file_couchbase_admin_collection_v1_collection_proto_rawDescOnce.Do(func() {
		file_couchbase_admin_collection_v1_collection_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_couchbase_admin_collection_v1_collection_proto_rawDesc), len(file_couchbase_admin_collection_v1_collection_proto_rawDesc)))
	})
	return file_couchbase_admin_collection_v1_collection_proto_rawDescData
}

var file_couchbase_admin_collection_v1_collection_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_couchbase_admin_collection_v1_collection_proto_goTypes = []any{
	(*ListCollectionsRequest)(nil),             // 0: couchbase.admin.collection.v1.ListCollectionsRequest
	(*ListCollectionsResponse)(nil),            // 1: couchbase.admin.collection.v1.ListCollectionsResponse
	(*CreateScopeRequest)(nil),                 // 2: couchbase.admin.collection.v1.CreateScopeRequest
	(*CreateScopeResponse)(nil),                // 3: couchbase.admin.collection.v1.CreateScopeResponse
	(*DeleteScopeRequest)(nil),                 // 4: couchbase.admin.collection.v1.DeleteScopeRequest
	(*DeleteScopeResponse)(nil),                // 5: couchbase.admin.collection.v1.DeleteScopeResponse
	(*CreateCollectionRequest)(nil),            // 6: couchbase.admin.collection.v1.CreateCollectionRequest
	(*CreateCollectionResponse)(nil),           // 7: couchbase.admin.collection.v1.CreateCollectionResponse
	(*UpdateCollectionRequest)(nil),            // 8: couchbase.admin.collection.v1.UpdateCollectionRequest
	(*UpdateCollectionResponse)(nil),           // 9: couchbase.admin.collection.v1.UpdateCollectionResponse
	(*DeleteCollectionRequest)(nil),            // 10: couchbase.admin.collection.v1.DeleteCollectionRequest
	(*DeleteCollectionResponse)(nil),           // 11: couchbase.admin.collection.v1.DeleteCollectionResponse
	(*ListCollectionsResponse_Collection)(nil), // 12: couchbase.admin.collection.v1.ListCollectionsResponse.Collection
	(*ListCollectionsResponse_Scope)(nil),      // 13: couchbase.admin.collection.v1.ListCollectionsResponse.Scope
}
var file_couchbase_admin_collection_v1_collection_proto_depIdxs = []int32{
	13, // 0: couchbase.admin.collection.v1.ListCollectionsResponse.scopes:type_name -> couchbase.admin.collection.v1.ListCollectionsResponse.Scope
	12, // 1: couchbase.admin.collection.v1.ListCollectionsResponse.Scope.collections:type_name -> couchbase.admin.collection.v1.ListCollectionsResponse.Collection
	0,  // 2: couchbase.admin.collection.v1.CollectionAdminService.ListCollections:input_type -> couchbase.admin.collection.v1.ListCollectionsRequest
	2,  // 3: couchbase.admin.collection.v1.CollectionAdminService.CreateScope:input_type -> couchbase.admin.collection.v1.CreateScopeRequest
	4,  // 4: couchbase.admin.collection.v1.CollectionAdminService.DeleteScope:input_type -> couchbase.admin.collection.v1.DeleteScopeRequest
	6,  // 5: couchbase.admin.collection.v1.CollectionAdminService.CreateCollection:input_type -> couchbase.admin.collection.v1.CreateCollectionRequest
	8,  // 6: couchbase.admin.collection.v1.CollectionAdminService.UpdateCollection:input_type -> couchbase.admin.collection.v1.UpdateCollectionRequest
	10, // 7: couchbase.admin.collection.v1.CollectionAdminService.DeleteCollection:input_type -> couchbase.admin.collection.v1.DeleteCollectionRequest
	1,  // 8: couchbase.admin.collection.v1.CollectionAdminService.ListCollections:output_type -> couchbase.admin.collection.v1.ListCollectionsResponse
	3,  // 9: couchbase.admin.collection.v1.CollectionAdminService.CreateScope:output_type -> couchbase.admin.collection.v1.CreateScopeResponse
	5,  // 10: couchbase.admin.collection.v1.CollectionAdminService.DeleteScope:output_type -> couchbase.admin.collection.v1.DeleteScopeResponse
	7,  // 11: couchbase.admin.collection.v1.CollectionAdminService.CreateCollection:output_type -> couchbase.admin.collection.v1.CreateCollectionResponse
	9,  // 12: couchbase.admin.collection.v1.CollectionAdminService.UpdateCollection:output_type -> couchbase.admin.collection.v1.UpdateCollectionResponse
	11, // 13: couchbase.admin.collection.v1.CollectionAdminService.DeleteCollection:output_type -> couchbase.admin.collection.v1.DeleteCollectionResponse
	8,  // [8:14] is the sub-list for method output_type
	2,  // [2:8] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_couchbase_admin_collection_v1_collection_proto_init() }
func file_couchbase_admin_collection_v1_collection_proto_init() {
	if File_couchbase_admin_collection_v1_collection_proto != nil {
		return
	}
	file_couchbase_admin_collection_v1_collection_proto_msgTypes[6].OneofWrappers = []any{}
	file_couchbase_admin_collection_v1_collection_proto_msgTypes[8].OneofWrappers = []any{}
	file_couchbase_admin_collection_v1_collection_proto_msgTypes[12].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_couchbase_admin_collection_v1_collection_proto_rawDesc), len(file_couchbase_admin_collection_v1_collection_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_couchbase_admin_collection_v1_collection_proto_goTypes,
		DependencyIndexes: file_couchbase_admin_collection_v1_collection_proto_depIdxs,
		MessageInfos:      file_couchbase_admin_collection_v1_collection_proto_msgTypes,
	}.Build()
	File_couchbase_admin_collection_v1_collection_proto = out.File
	file_couchbase_admin_collection_v1_collection_proto_goTypes = nil
	file_couchbase_admin_collection_v1_collection_proto_depIdxs = nil
}
