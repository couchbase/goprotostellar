// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: couchbase/search/v1/search.proto

package search_v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type KnnOperator int32

const (
	KnnOperator_KNN_OPERATOR_OR  KnnOperator = 0
	KnnOperator_KNN_OPERATOR_AND KnnOperator = 1
)

// Enum value maps for KnnOperator.
var (
	KnnOperator_name = map[int32]string{
		0: "KNN_OPERATOR_OR",
		1: "KNN_OPERATOR_AND",
	}
	KnnOperator_value = map[string]int32{
		"KNN_OPERATOR_OR":  0,
		"KNN_OPERATOR_AND": 1,
	}
)

func (x KnnOperator) Enum() *KnnOperator {
	p := new(KnnOperator)
	*p = x
	return p
}

func (x KnnOperator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KnnOperator) Descriptor() protoreflect.EnumDescriptor {
	return file_couchbase_search_v1_search_proto_enumTypes[0].Descriptor()
}

func (KnnOperator) Type() protoreflect.EnumType {
	return &file_couchbase_search_v1_search_proto_enumTypes[0]
}

func (x KnnOperator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KnnOperator.Descriptor instead.
func (KnnOperator) EnumDescriptor() ([]byte, []int) {
	return file_couchbase_search_v1_search_proto_rawDescGZIP(), []int{0}
}

type MatchQuery_Operator int32

const (
	MatchQuery_OPERATOR_OR  MatchQuery_Operator = 0
	MatchQuery_OPERATOR_AND MatchQuery_Operator = 1
)

// Enum value maps for MatchQuery_Operator.
var (
	MatchQuery_Operator_name = map[int32]string{
		0: "OPERATOR_OR",
		1: "OPERATOR_AND",
	}
	MatchQuery_Operator_value = map[string]int32{
		"OPERATOR_OR":  0,
		"OPERATOR_AND": 1,
	}
)

func (x MatchQuery_Operator) Enum() *MatchQuery_Operator {
	p := new(MatchQuery_Operator)
	*p = x
	return p
}

func (x MatchQuery_Operator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MatchQuery_Operator) Descriptor() protoreflect.EnumDescriptor {
	return file_couchbase_search_v1_search_proto_enumTypes[1].Descriptor()
}

func (MatchQuery_Operator) Type() protoreflect.EnumType {
	return &file_couchbase_search_v1_search_proto_enumTypes[1]
}

func (x MatchQuery_Operator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MatchQuery_Operator.Descriptor instead.
func (MatchQuery_Operator) EnumDescriptor() ([]byte, []int) {
	return file_couchbase_search_v1_search_proto_rawDescGZIP(), []int{13, 0}
}

type SearchQueryRequest_ScanConsistency int32

const (
	SearchQueryRequest_SCAN_CONSISTENCY_NOT_BOUNDED SearchQueryRequest_ScanConsistency = 0
)

// Enum value maps for SearchQueryRequest_ScanConsistency.
var (
	SearchQueryRequest_ScanConsistency_name = map[int32]string{
		0: "SCAN_CONSISTENCY_NOT_BOUNDED",
	}
	SearchQueryRequest_ScanConsistency_value = map[string]int32{
		"SCAN_CONSISTENCY_NOT_BOUNDED": 0,
	}
)

func (x SearchQueryRequest_ScanConsistency) Enum() *SearchQueryRequest_ScanConsistency {
	p := new(SearchQueryRequest_ScanConsistency)
	*p = x
	return p
}

func (x SearchQueryRequest_ScanConsistency) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SearchQueryRequest_ScanConsistency) Descriptor() protoreflect.EnumDescriptor {
	return file_couchbase_search_v1_search_proto_enumTypes[2].Descriptor()
}

func (SearchQueryRequest_ScanConsistency) Type() protoreflect.EnumType {
	return &file_couchbase_search_v1_search_proto_enumTypes[2]
}

func (x SearchQueryRequest_ScanConsistency) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SearchQueryRequest_ScanConsistency.Descriptor instead.
func (SearchQueryRequest_ScanConsistency) EnumDescriptor() ([]byte, []int) {
	return file_couchbase_search_v1_search_proto_rawDescGZIP(), []int{35, 0}
}

type SearchQueryRequest_HighlightStyle int32

const (
	SearchQueryRequest_HIGHLIGHT_STYLE_DEFAULT SearchQueryRequest_HighlightStyle = 0
	SearchQueryRequest_HIGHLIGHT_STYLE_HTML    SearchQueryRequest_HighlightStyle = 1
	SearchQueryRequest_HIGHLIGHT_STYLE_ANSI    SearchQueryRequest_HighlightStyle = 2
)

// Enum value maps for SearchQueryRequest_HighlightStyle.
var (
	SearchQueryRequest_HighlightStyle_name = map[int32]string{
		0: "HIGHLIGHT_STYLE_DEFAULT",
		1: "HIGHLIGHT_STYLE_HTML",
		2: "HIGHLIGHT_STYLE_ANSI",
	}
	SearchQueryRequest_HighlightStyle_value = map[string]int32{
		"HIGHLIGHT_STYLE_DEFAULT": 0,
		"HIGHLIGHT_STYLE_HTML":    1,
		"HIGHLIGHT_STYLE_ANSI":    2,
	}
)

func (x SearchQueryRequest_HighlightStyle) Enum() *SearchQueryRequest_HighlightStyle {
	p := new(SearchQueryRequest_HighlightStyle)
	*p = x
	return p
}

func (x SearchQueryRequest_HighlightStyle) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SearchQueryRequest_HighlightStyle) Descriptor() protoreflect.EnumDescriptor {
	return file_couchbase_search_v1_search_proto_enumTypes[3].Descriptor()
}

func (SearchQueryRequest_HighlightStyle) Type() protoreflect.EnumType {
	return &file_couchbase_search_v1_search_proto_enumTypes[3]
}

func (x SearchQueryRequest_HighlightStyle) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SearchQueryRequest_HighlightStyle.Descriptor instead.
func (SearchQueryRequest_HighlightStyle) EnumDescriptor() ([]byte, []int) {
	return file_couchbase_search_v1_search_proto_rawDescGZIP(), []int{35, 1}
}

type BooleanFieldQuery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Boost         *float32               `protobuf:"fixed32,1,opt,name=boost,proto3,oneof" json:"boost,omitempty"`
	Field         *string                `protobuf:"bytes,2,opt,name=field,proto3,oneof" json:"field,omitempty"`
	Value         bool                   `protobuf:"varint,6,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BooleanFieldQuery) Reset() {
	*x = BooleanFieldQuery{}
	mi := &file_couchbase_search_v1_search_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BooleanFieldQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BooleanFieldQuery) ProtoMessage() {}

func (x *BooleanFieldQuery) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_search_v1_search_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BooleanFieldQuery.ProtoReflect.Descriptor instead.
func (*BooleanFieldQuery) Descriptor() ([]byte, []int) {
	return file_couchbase_search_v1_search_proto_rawDescGZIP(), []int{0}
}

func (x *BooleanFieldQuery) GetBoost() float32 {
	if x != nil && x.Boost != nil {
		return *x.Boost
	}
	return 0
}

func (x *BooleanFieldQuery) GetField() string {
	if x != nil && x.Field != nil {
		return *x.Field
	}
	return ""
}

func (x *BooleanFieldQuery) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

type BooleanQuery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Boost         *float32               `protobuf:"fixed32,1,opt,name=boost,proto3,oneof" json:"boost,omitempty"`
	Must          *ConjunctionQuery      `protobuf:"bytes,2,opt,name=must,proto3,oneof" json:"must,omitempty"`
	MustNot       *DisjunctionQuery      `protobuf:"bytes,3,opt,name=must_not,json=mustNot,proto3,oneof" json:"must_not,omitempty"`
	Should        *DisjunctionQuery      `protobuf:"bytes,4,opt,name=should,proto3,oneof" json:"should,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BooleanQuery) Reset() {
	*x = BooleanQuery{}
	mi := &file_couchbase_search_v1_search_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BooleanQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BooleanQuery) ProtoMessage() {}

func (x *BooleanQuery) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_search_v1_search_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BooleanQuery.ProtoReflect.Descriptor instead.
func (*BooleanQuery) Descriptor() ([]byte, []int) {
	return file_couchbase_search_v1_search_proto_rawDescGZIP(), []int{1}
}

func (x *BooleanQuery) GetBoost() float32 {
	if x != nil && x.Boost != nil {
		return *x.Boost
	}
	return 0
}

func (x *BooleanQuery) GetMust() *ConjunctionQuery {
	if x != nil {
		return x.Must
	}
	return nil
}

func (x *BooleanQuery) GetMustNot() *DisjunctionQuery {
	if x != nil {
		return x.MustNot
	}
	return nil
}

func (x *BooleanQuery) GetShould() *DisjunctionQuery {
	if x != nil {
		return x.Should
	}
	return nil
}

type ConjunctionQuery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Boost         *float32               `protobuf:"fixed32,1,opt,name=boost,proto3,oneof" json:"boost,omitempty"`
	Queries       []*Query               `protobuf:"bytes,2,rep,name=queries,proto3" json:"queries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConjunctionQuery) Reset() {
	*x = ConjunctionQuery{}
	mi := &file_couchbase_search_v1_search_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConjunctionQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConjunctionQuery) ProtoMessage() {}

func (x *ConjunctionQuery) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_search_v1_search_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConjunctionQuery.ProtoReflect.Descriptor instead.
func (*ConjunctionQuery) Descriptor() ([]byte, []int) {
	return file_couchbase_search_v1_search_proto_rawDescGZIP(), []int{2}
}

func (x *ConjunctionQuery) GetBoost() float32 {
	if x != nil && x.Boost != nil {
		return *x.Boost
	}
	return 0
}

func (x *ConjunctionQuery) GetQueries() []*Query {
	if x != nil {
		return x.Queries
	}
	return nil
}

type DateRangeQuery struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Boost          *float32               `protobuf:"fixed32,1,opt,name=boost,proto3,oneof" json:"boost,omitempty"`
	Field          *string                `protobuf:"bytes,2,opt,name=field,proto3,oneof" json:"field,omitempty"`
	DateTimeParser *string                `protobuf:"bytes,3,opt,name=date_time_parser,json=dateTimeParser,proto3,oneof" json:"date_time_parser,omitempty"`
	StartDate      *string                `protobuf:"bytes,4,opt,name=start_date,json=startDate,proto3,oneof" json:"start_date,omitempty"`
	EndDate        *string                `protobuf:"bytes,5,opt,name=end_date,json=endDate,proto3,oneof" json:"end_date,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DateRangeQuery) Reset() {
	*x = DateRangeQuery{}
	mi := &file_couchbase_search_v1_search_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DateRangeQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DateRangeQuery) ProtoMessage() {}

func (x *DateRangeQuery) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_search_v1_search_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DateRangeQuery.ProtoReflect.Descriptor instead.
func (*DateRangeQuery) Descriptor() ([]byte, []int) {
	return file_couchbase_search_v1_search_proto_rawDescGZIP(), []int{3}
}

func (x *DateRangeQuery) GetBoost() float32 {
	if x != nil && x.Boost != nil {
		return *x.Boost
	}
	return 0
}

func (x *DateRangeQuery) GetField() string {
	if x != nil && x.Field != nil {
		return *x.Field
	}
	return ""
}

func (x *DateRangeQuery) GetDateTimeParser() string {
	if x != nil && x.DateTimeParser != nil {
		return *x.DateTimeParser
	}
	return ""
}

func (x *DateRangeQuery) GetStartDate() string {
	if x != nil && x.StartDate != nil {
		return *x.StartDate
	}
	return ""
}

func (x *DateRangeQuery) GetEndDate() string {
	if x != nil && x.EndDate != nil {
		return *x.EndDate
	}
	return ""
}

type DisjunctionQuery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Boost         *float32               `protobuf:"fixed32,1,opt,name=boost,proto3,oneof" json:"boost,omitempty"`
	Queries       []*Query               `protobuf:"bytes,2,rep,name=queries,proto3" json:"queries,omitempty"`
	Minimum       *uint32                `protobuf:"varint,3,opt,name=minimum,proto3,oneof" json:"minimum,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisjunctionQuery) Reset() {
	*x = DisjunctionQuery{}
	mi := &file_couchbase_search_v1_search_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisjunctionQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisjunctionQuery) ProtoMessage() {}

func (x *DisjunctionQuery) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_search_v1_search_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisjunctionQuery.ProtoReflect.Descriptor instead.
func (*DisjunctionQuery) Descriptor() ([]byte, []int) {
	return file_couchbase_search_v1_search_proto_rawDescGZIP(), []int{4}
}

func (x *DisjunctionQuery) GetBoost() float32 {
	if x != nil && x.Boost != nil {
		return *x.Boost
	}
	return 0
}

func (x *DisjunctionQuery) GetQueries() []*Query {
	if x != nil {
		return x.Queries
	}
	return nil
}

func (x *DisjunctionQuery) GetMinimum() uint32 {
	if x != nil && x.Minimum != nil {
		return *x.Minimum
	}
	return 0
}

type DocIdQuery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Boost         *float32               `protobuf:"fixed32,1,opt,name=boost,proto3,oneof" json:"boost,omitempty"`
	Ids           []string               `protobuf:"bytes,3,rep,name=ids,proto3" json:"ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DocIdQuery) Reset() {
	*x = DocIdQuery{}
	mi := &file_couchbase_search_v1_search_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DocIdQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocIdQuery) ProtoMessage() {}

func (x *DocIdQuery) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_search_v1_search_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocIdQuery.ProtoReflect.Descriptor instead.
func (*DocIdQuery) Descriptor() ([]byte, []int) {
	return file_couchbase_search_v1_search_proto_rawDescGZIP(), []int{5}
}

func (x *DocIdQuery) GetBoost() float32 {
	if x != nil && x.Boost != nil {
		return *x.Boost
	}
	return 0
}

func (x *DocIdQuery) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type LatLng struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Latitude      float64                `protobuf:"fixed64,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude     float64                `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LatLng) Reset() {
	*x = LatLng{}
	mi := &file_couchbase_search_v1_search_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LatLng) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LatLng) ProtoMessage() {}

func (x *LatLng) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_search_v1_search_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LatLng.ProtoReflect.Descriptor instead.
func (*LatLng) Descriptor() ([]byte, []int) {
	return file_couchbase_search_v1_search_proto_rawDescGZIP(), []int{6}
}

func (x *LatLng) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *LatLng) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

type GeoBoundingBoxQuery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Boost         *float32               `protobuf:"fixed32,1,opt,name=boost,proto3,oneof" json:"boost,omitempty"`
	Field         *string                `protobuf:"bytes,2,opt,name=field,proto3,oneof" json:"field,omitempty"`
	TopLeft       *LatLng                `protobuf:"bytes,3,opt,name=top_left,json=topLeft,proto3" json:"top_left,omitempty"`
	BottomRight   *LatLng                `protobuf:"bytes,4,opt,name=bottom_right,json=bottomRight,proto3" json:"bottom_right,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GeoBoundingBoxQuery) Reset() {
	*x = GeoBoundingBoxQuery{}
	mi := &file_couchbase_search_v1_search_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GeoBoundingBoxQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeoBoundingBoxQuery) ProtoMessage() {}

func (x *GeoBoundingBoxQuery) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_search_v1_search_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeoBoundingBoxQuery.ProtoReflect.Descriptor instead.
func (*GeoBoundingBoxQuery) Descriptor() ([]byte, []int) {
	return file_couchbase_search_v1_search_proto_rawDescGZIP(), []int{7}
}

func (x *GeoBoundingBoxQuery) GetBoost() float32 {
	if x != nil && x.Boost != nil {
		return *x.Boost
	}
	return 0
}

func (x *GeoBoundingBoxQuery) GetField() string {
	if x != nil && x.Field != nil {
		return *x.Field
	}
	return ""
}

func (x *GeoBoundingBoxQuery) GetTopLeft() *LatLng {
	if x != nil {
		return x.TopLeft
	}
	return nil
}

func (x *GeoBoundingBoxQuery) GetBottomRight() *LatLng {
	if x != nil {
		return x.BottomRight
	}
	return nil
}

type GeoDistanceQuery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Boost         *float32               `protobuf:"fixed32,1,opt,name=boost,proto3,oneof" json:"boost,omitempty"`
	Field         *string                `protobuf:"bytes,2,opt,name=field,proto3,oneof" json:"field,omitempty"`
	Center        *LatLng                `protobuf:"bytes,3,opt,name=center,proto3" json:"center,omitempty"`
	Distance      string                 `protobuf:"bytes,4,opt,name=distance,proto3" json:"distance,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GeoDistanceQuery) Reset() {
	*x = GeoDistanceQuery{}
	mi := &file_couchbase_search_v1_search_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GeoDistanceQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeoDistanceQuery) ProtoMessage() {}

func (x *GeoDistanceQuery) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_search_v1_search_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeoDistanceQuery.ProtoReflect.Descriptor instead.
func (*GeoDistanceQuery) Descriptor() ([]byte, []int) {
	return file_couchbase_search_v1_search_proto_rawDescGZIP(), []int{8}
}

func (x *GeoDistanceQuery) GetBoost() float32 {
	if x != nil && x.Boost != nil {
		return *x.Boost
	}
	return 0
}

func (x *GeoDistanceQuery) GetField() string {
	if x != nil && x.Field != nil {
		return *x.Field
	}
	return ""
}

func (x *GeoDistanceQuery) GetCenter() *LatLng {
	if x != nil {
		return x.Center
	}
	return nil
}

func (x *GeoDistanceQuery) GetDistance() string {
	if x != nil {
		return x.Distance
	}
	return ""
}

type GeoPolygonQuery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Boost         *float32               `protobuf:"fixed32,1,opt,name=boost,proto3,oneof" json:"boost,omitempty"`
	Field         *string                `protobuf:"bytes,2,opt,name=field,proto3,oneof" json:"field,omitempty"`
	Vertices      []*LatLng              `protobuf:"bytes,3,rep,name=vertices,proto3" json:"vertices,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GeoPolygonQuery) Reset() {
	*x = GeoPolygonQuery{}
	mi := &file_couchbase_search_v1_search_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GeoPolygonQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeoPolygonQuery) ProtoMessage() {}

func (x *GeoPolygonQuery) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_search_v1_search_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeoPolygonQuery.ProtoReflect.Descriptor instead.
func (*GeoPolygonQuery) Descriptor() ([]byte, []int) {
	return file_couchbase_search_v1_search_proto_rawDescGZIP(), []int{9}
}

func (x *GeoPolygonQuery) GetBoost() float32 {
	if x != nil && x.Boost != nil {
		return *x.Boost
	}
	return 0
}

func (x *GeoPolygonQuery) GetField() string {
	if x != nil && x.Field != nil {
		return *x.Field
	}
	return ""
}

func (x *GeoPolygonQuery) GetVertices() []*LatLng {
	if x != nil {
		return x.Vertices
	}
	return nil
}

type MatchAllQuery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchAllQuery) Reset() {
	*x = MatchAllQuery{}
	mi := &file_couchbase_search_v1_search_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchAllQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchAllQuery) ProtoMessage() {}

func (x *MatchAllQuery) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_search_v1_search_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchAllQuery.ProtoReflect.Descriptor instead.
func (*MatchAllQuery) Descriptor() ([]byte, []int) {
	return file_couchbase_search_v1_search_proto_rawDescGZIP(), []int{10}
}

type MatchNoneQuery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchNoneQuery) Reset() {
	*x = MatchNoneQuery{}
	mi := &file_couchbase_search_v1_search_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchNoneQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchNoneQuery) ProtoMessage() {}

func (x *MatchNoneQuery) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_search_v1_search_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchNoneQuery.ProtoReflect.Descriptor instead.
func (*MatchNoneQuery) Descriptor() ([]byte, []int) {
	return file_couchbase_search_v1_search_proto_rawDescGZIP(), []int{11}
}

type MatchPhraseQuery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Boost         *float32               `protobuf:"fixed32,1,opt,name=boost,proto3,oneof" json:"boost,omitempty"`
	Field         *string                `protobuf:"bytes,2,opt,name=field,proto3,oneof" json:"field,omitempty"`
	Phrase        string                 `protobuf:"bytes,3,opt,name=phrase,proto3" json:"phrase,omitempty"`
	Analyzer      *string                `protobuf:"bytes,4,opt,name=analyzer,proto3,oneof" json:"analyzer,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchPhraseQuery) Reset() {
	*x = MatchPhraseQuery{}
	mi := &file_couchbase_search_v1_search_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchPhraseQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchPhraseQuery) ProtoMessage() {}

func (x *MatchPhraseQuery) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_search_v1_search_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchPhraseQuery.ProtoReflect.Descriptor instead.
func (*MatchPhraseQuery) Descriptor() ([]byte, []int) {
	return file_couchbase_search_v1_search_proto_rawDescGZIP(), []int{12}
}

func (x *MatchPhraseQuery) GetBoost() float32 {
	if x != nil && x.Boost != nil {
		return *x.Boost
	}
	return 0
}

func (x *MatchPhraseQuery) GetField() string {
	if x != nil && x.Field != nil {
		return *x.Field
	}
	return ""
}

func (x *MatchPhraseQuery) GetPhrase() string {
	if x != nil {
		return x.Phrase
	}
	return ""
}

func (x *MatchPhraseQuery) GetAnalyzer() string {
	if x != nil && x.Analyzer != nil {
		return *x.Analyzer
	}
	return ""
}

type MatchQuery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Boost         *float32               `protobuf:"fixed32,1,opt,name=boost,proto3,oneof" json:"boost,omitempty"`
	Field         *string                `protobuf:"bytes,2,opt,name=field,proto3,oneof" json:"field,omitempty"`
	Value         string                 `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	Analyzer      *string                `protobuf:"bytes,4,opt,name=analyzer,proto3,oneof" json:"analyzer,omitempty"`
	Fuzziness     *uint64                `protobuf:"varint,5,opt,name=fuzziness,proto3,oneof" json:"fuzziness,omitempty"`
	Operator      *MatchQuery_Operator   `protobuf:"varint,6,opt,name=operator,proto3,enum=couchbase.search.v1.MatchQuery_Operator,oneof" json:"operator,omitempty"`
	PrefixLength  *uint64                `protobuf:"varint,7,opt,name=prefix_length,json=prefixLength,proto3,oneof" json:"prefix_length,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchQuery) Reset() {
	*x = MatchQuery{}
	mi := &file_couchbase_search_v1_search_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchQuery) ProtoMessage() {}

func (x *MatchQuery) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_search_v1_search_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchQuery.ProtoReflect.Descriptor instead.
func (*MatchQuery) Descriptor() ([]byte, []int) {
	return file_couchbase_search_v1_search_proto_rawDescGZIP(), []int{13}
}

func (x *MatchQuery) GetBoost() float32 {
	if x != nil && x.Boost != nil {
		return *x.Boost
	}
	return 0
}

func (x *MatchQuery) GetField() string {
	if x != nil && x.Field != nil {
		return *x.Field
	}
	return ""
}

func (x *MatchQuery) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *MatchQuery) GetAnalyzer() string {
	if x != nil && x.Analyzer != nil {
		return *x.Analyzer
	}
	return ""
}

func (x *MatchQuery) GetFuzziness() uint64 {
	if x != nil && x.Fuzziness != nil {
		return *x.Fuzziness
	}
	return 0
}

func (x *MatchQuery) GetOperator() MatchQuery_Operator {
	if x != nil && x.Operator != nil {
		return *x.Operator
	}
	return MatchQuery_OPERATOR_OR
}

func (x *MatchQuery) GetPrefixLength() uint64 {
	if x != nil && x.PrefixLength != nil {
		return *x.PrefixLength
	}
	return 0
}

type NumericRangeQuery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Boost         *float32               `protobuf:"fixed32,1,opt,name=boost,proto3,oneof" json:"boost,omitempty"`
	Field         *string                `protobuf:"bytes,2,opt,name=field,proto3,oneof" json:"field,omitempty"`
	Min           *float32               `protobuf:"fixed32,3,opt,name=min,proto3,oneof" json:"min,omitempty"`
	Max           *float32               `protobuf:"fixed32,4,opt,name=max,proto3,oneof" json:"max,omitempty"`
	InclusiveMin  *bool                  `protobuf:"varint,5,opt,name=inclusive_min,json=inclusiveMin,proto3,oneof" json:"inclusive_min,omitempty"`
	InclusiveMax  *bool                  `protobuf:"varint,6,opt,name=inclusive_max,json=inclusiveMax,proto3,oneof" json:"inclusive_max,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NumericRangeQuery) Reset() {
	*x = NumericRangeQuery{}
	mi := &file_couchbase_search_v1_search_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NumericRangeQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NumericRangeQuery) ProtoMessage() {}

func (x *NumericRangeQuery) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_search_v1_search_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NumericRangeQuery.ProtoReflect.Descriptor instead.
func (*NumericRangeQuery) Descriptor() ([]byte, []int) {
	return file_couchbase_search_v1_search_proto_rawDescGZIP(), []int{14}
}

func (x *NumericRangeQuery) GetBoost() float32 {
	if x != nil && x.Boost != nil {
		return *x.Boost
	}
	return 0
}

func (x *NumericRangeQuery) GetField() string {
	if x != nil && x.Field != nil {
		return *x.Field
	}
	return ""
}

func (x *NumericRangeQuery) GetMin() float32 {
	if x != nil && x.Min != nil {
		return *x.Min
	}
	return 0
}

func (x *NumericRangeQuery) GetMax() float32 {
	if x != nil && x.Max != nil {
		return *x.Max
	}
	return 0
}

func (x *NumericRangeQuery) GetInclusiveMin() bool {
	if x != nil && x.InclusiveMin != nil {
		return *x.InclusiveMin
	}
	return false
}

func (x *NumericRangeQuery) GetInclusiveMax() bool {
	if x != nil && x.InclusiveMax != nil {
		return *x.InclusiveMax
	}
	return false
}

type PhraseQuery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Boost         *float32               `protobuf:"fixed32,1,opt,name=boost,proto3,oneof" json:"boost,omitempty"`
	Field         *string                `protobuf:"bytes,2,opt,name=field,proto3,oneof" json:"field,omitempty"`
	Terms         []string               `protobuf:"bytes,3,rep,name=terms,proto3" json:"terms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PhraseQuery) Reset() {
	*x = PhraseQuery{}
	mi := &file_couchbase_search_v1_search_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PhraseQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhraseQuery) ProtoMessage() {}

func (x *PhraseQuery) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_search_v1_search_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhraseQuery.ProtoReflect.Descriptor instead.
func (*PhraseQuery) Descriptor() ([]byte, []int) {
	return file_couchbase_search_v1_search_proto_rawDescGZIP(), []int{15}
}

func (x *PhraseQuery) GetBoost() float32 {
	if x != nil && x.Boost != nil {
		return *x.Boost
	}
	return 0
}

func (x *PhraseQuery) GetField() string {
	if x != nil && x.Field != nil {
		return *x.Field
	}
	return ""
}

func (x *PhraseQuery) GetTerms() []string {
	if x != nil {
		return x.Terms
	}
	return nil
}

type PrefixQuery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Boost         *float32               `protobuf:"fixed32,1,opt,name=boost,proto3,oneof" json:"boost,omitempty"`
	Field         *string                `protobuf:"bytes,2,opt,name=field,proto3,oneof" json:"field,omitempty"`
	Prefix        string                 `protobuf:"bytes,3,opt,name=prefix,proto3" json:"prefix,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PrefixQuery) Reset() {
	*x = PrefixQuery{}
	mi := &file_couchbase_search_v1_search_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrefixQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrefixQuery) ProtoMessage() {}

func (x *PrefixQuery) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_search_v1_search_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrefixQuery.ProtoReflect.Descriptor instead.
func (*PrefixQuery) Descriptor() ([]byte, []int) {
	return file_couchbase_search_v1_search_proto_rawDescGZIP(), []int{16}
}

func (x *PrefixQuery) GetBoost() float32 {
	if x != nil && x.Boost != nil {
		return *x.Boost
	}
	return 0
}

func (x *PrefixQuery) GetField() string {
	if x != nil && x.Field != nil {
		return *x.Field
	}
	return ""
}

func (x *PrefixQuery) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

type QueryStringQuery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Boost         *float32               `protobuf:"fixed32,1,opt,name=boost,proto3,oneof" json:"boost,omitempty"`
	QueryString   string                 `protobuf:"bytes,3,opt,name=query_string,json=queryString,proto3" json:"query_string,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryStringQuery) Reset() {
	*x = QueryStringQuery{}
	mi := &file_couchbase_search_v1_search_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryStringQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryStringQuery) ProtoMessage() {}

func (x *QueryStringQuery) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_search_v1_search_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryStringQuery.ProtoReflect.Descriptor instead.
func (*QueryStringQuery) Descriptor() ([]byte, []int) {
	return file_couchbase_search_v1_search_proto_rawDescGZIP(), []int{17}
}

func (x *QueryStringQuery) GetBoost() float32 {
	if x != nil && x.Boost != nil {
		return *x.Boost
	}
	return 0
}

func (x *QueryStringQuery) GetQueryString() string {
	if x != nil {
		return x.QueryString
	}
	return ""
}

type RegexpQuery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Boost         *float32               `protobuf:"fixed32,1,opt,name=boost,proto3,oneof" json:"boost,omitempty"`
	Field         *string                `protobuf:"bytes,2,opt,name=field,proto3,oneof" json:"field,omitempty"`
	Regexp        string                 `protobuf:"bytes,3,opt,name=regexp,proto3" json:"regexp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegexpQuery) Reset() {
	*x = RegexpQuery{}
	mi := &file_couchbase_search_v1_search_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegexpQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegexpQuery) ProtoMessage() {}

func (x *RegexpQuery) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_search_v1_search_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegexpQuery.ProtoReflect.Descriptor instead.
func (*RegexpQuery) Descriptor() ([]byte, []int) {
	return file_couchbase_search_v1_search_proto_rawDescGZIP(), []int{18}
}

func (x *RegexpQuery) GetBoost() float32 {
	if x != nil && x.Boost != nil {
		return *x.Boost
	}
	return 0
}

func (x *RegexpQuery) GetField() string {
	if x != nil && x.Field != nil {
		return *x.Field
	}
	return ""
}

func (x *RegexpQuery) GetRegexp() string {
	if x != nil {
		return x.Regexp
	}
	return ""
}

type TermQuery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Boost         *float32               `protobuf:"fixed32,1,opt,name=boost,proto3,oneof" json:"boost,omitempty"`
	Field         *string                `protobuf:"bytes,2,opt,name=field,proto3,oneof" json:"field,omitempty"`
	Term          string                 `protobuf:"bytes,3,opt,name=term,proto3" json:"term,omitempty"`
	Fuzziness     *uint64                `protobuf:"varint,4,opt,name=fuzziness,proto3,oneof" json:"fuzziness,omitempty"`
	PrefixLength  *uint64                `protobuf:"varint,5,opt,name=prefix_length,json=prefixLength,proto3,oneof" json:"prefix_length,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TermQuery) Reset() {
	*x = TermQuery{}
	mi := &file_couchbase_search_v1_search_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TermQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TermQuery) ProtoMessage() {}

func (x *TermQuery) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_search_v1_search_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TermQuery.ProtoReflect.Descriptor instead.
func (*TermQuery) Descriptor() ([]byte, []int) {
	return file_couchbase_search_v1_search_proto_rawDescGZIP(), []int{19}
}

func (x *TermQuery) GetBoost() float32 {
	if x != nil && x.Boost != nil {
		return *x.Boost
	}
	return 0
}

func (x *TermQuery) GetField() string {
	if x != nil && x.Field != nil {
		return *x.Field
	}
	return ""
}

func (x *TermQuery) GetTerm() string {
	if x != nil {
		return x.Term
	}
	return ""
}

func (x *TermQuery) GetFuzziness() uint64 {
	if x != nil && x.Fuzziness != nil {
		return *x.Fuzziness
	}
	return 0
}

func (x *TermQuery) GetPrefixLength() uint64 {
	if x != nil && x.PrefixLength != nil {
		return *x.PrefixLength
	}
	return 0
}

type TermRangeQuery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Boost         *float32               `protobuf:"fixed32,1,opt,name=boost,proto3,oneof" json:"boost,omitempty"`
	Field         *string                `protobuf:"bytes,2,opt,name=field,proto3,oneof" json:"field,omitempty"`
	Min           *string                `protobuf:"bytes,5,opt,name=min,proto3,oneof" json:"min,omitempty"`
	Max           *string                `protobuf:"bytes,6,opt,name=max,proto3,oneof" json:"max,omitempty"`
	InclusiveMin  *bool                  `protobuf:"varint,7,opt,name=inclusive_min,json=inclusiveMin,proto3,oneof" json:"inclusive_min,omitempty"`
	InclusiveMax  *bool                  `protobuf:"varint,8,opt,name=inclusive_max,json=inclusiveMax,proto3,oneof" json:"inclusive_max,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TermRangeQuery) Reset() {
	*x = TermRangeQuery{}
	mi := &file_couchbase_search_v1_search_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TermRangeQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TermRangeQuery) ProtoMessage() {}

func (x *TermRangeQuery) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_search_v1_search_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TermRangeQuery.ProtoReflect.Descriptor instead.
func (*TermRangeQuery) Descriptor() ([]byte, []int) {
	return file_couchbase_search_v1_search_proto_rawDescGZIP(), []int{20}
}

func (x *TermRangeQuery) GetBoost() float32 {
	if x != nil && x.Boost != nil {
		return *x.Boost
	}
	return 0
}

func (x *TermRangeQuery) GetField() string {
	if x != nil && x.Field != nil {
		return *x.Field
	}
	return ""
}

func (x *TermRangeQuery) GetMin() string {
	if x != nil && x.Min != nil {
		return *x.Min
	}
	return ""
}

func (x *TermRangeQuery) GetMax() string {
	if x != nil && x.Max != nil {
		return *x.Max
	}
	return ""
}

func (x *TermRangeQuery) GetInclusiveMin() bool {
	if x != nil && x.InclusiveMin != nil {
		return *x.InclusiveMin
	}
	return false
}

func (x *TermRangeQuery) GetInclusiveMax() bool {
	if x != nil && x.InclusiveMax != nil {
		return *x.InclusiveMax
	}
	return false
}

type WildcardQuery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Boost         *float32               `protobuf:"fixed32,1,opt,name=boost,proto3,oneof" json:"boost,omitempty"`
	Field         *string                `protobuf:"bytes,2,opt,name=field,proto3,oneof" json:"field,omitempty"`
	Wildcard      string                 `protobuf:"bytes,3,opt,name=wildcard,proto3" json:"wildcard,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WildcardQuery) Reset() {
	*x = WildcardQuery{}
	mi := &file_couchbase_search_v1_search_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WildcardQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WildcardQuery) ProtoMessage() {}

func (x *WildcardQuery) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_search_v1_search_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WildcardQuery.ProtoReflect.Descriptor instead.
func (*WildcardQuery) Descriptor() ([]byte, []int) {
	return file_couchbase_search_v1_search_proto_rawDescGZIP(), []int{21}
}

func (x *WildcardQuery) GetBoost() float32 {
	if x != nil && x.Boost != nil {
		return *x.Boost
	}
	return 0
}

func (x *WildcardQuery) GetField() string {
	if x != nil && x.Field != nil {
		return *x.Field
	}
	return ""
}

func (x *WildcardQuery) GetWildcard() string {
	if x != nil {
		return x.Wildcard
	}
	return ""
}

type Query struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Query:
	//
	//	*Query_BooleanFieldQuery
	//	*Query_BooleanQuery
	//	*Query_ConjunctionQuery
	//	*Query_DateRangeQuery
	//	*Query_DisjunctionQuery
	//	*Query_DocIdQuery
	//	*Query_GeoBoundingBoxQuery
	//	*Query_GeoDistanceQuery
	//	*Query_GeoPolygonQuery
	//	*Query_MatchAllQuery
	//	*Query_MatchNoneQuery
	//	*Query_MatchPhraseQuery
	//	*Query_MatchQuery
	//	*Query_NumericRangeQuery
	//	*Query_PhraseQuery
	//	*Query_PrefixQuery
	//	*Query_QueryStringQuery
	//	*Query_RegexpQuery
	//	*Query_TermQuery
	//	*Query_TermRangeQuery
	//	*Query_WildcardQuery
	Query         isQuery_Query `protobuf_oneof:"query"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Query) Reset() {
	*x = Query{}
	mi := &file_couchbase_search_v1_search_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Query) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Query) ProtoMessage() {}

func (x *Query) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_search_v1_search_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Query.ProtoReflect.Descriptor instead.
func (*Query) Descriptor() ([]byte, []int) {
	return file_couchbase_search_v1_search_proto_rawDescGZIP(), []int{22}
}

func (x *Query) GetQuery() isQuery_Query {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *Query) GetBooleanFieldQuery() *BooleanFieldQuery {
	if x != nil {
		if x, ok := x.Query.(*Query_BooleanFieldQuery); ok {
			return x.BooleanFieldQuery
		}
	}
	return nil
}

func (x *Query) GetBooleanQuery() *BooleanQuery {
	if x != nil {
		if x, ok := x.Query.(*Query_BooleanQuery); ok {
			return x.BooleanQuery
		}
	}
	return nil
}

func (x *Query) GetConjunctionQuery() *ConjunctionQuery {
	if x != nil {
		if x, ok := x.Query.(*Query_ConjunctionQuery); ok {
			return x.ConjunctionQuery
		}
	}
	return nil
}

func (x *Query) GetDateRangeQuery() *DateRangeQuery {
	if x != nil {
		if x, ok := x.Query.(*Query_DateRangeQuery); ok {
			return x.DateRangeQuery
		}
	}
	return nil
}

func (x *Query) GetDisjunctionQuery() *DisjunctionQuery {
	if x != nil {
		if x, ok := x.Query.(*Query_DisjunctionQuery); ok {
			return x.DisjunctionQuery
		}
	}
	return nil
}

func (x *Query) GetDocIdQuery() *DocIdQuery {
	if x != nil {
		if x, ok := x.Query.(*Query_DocIdQuery); ok {
			return x.DocIdQuery
		}
	}
	return nil
}

func (x *Query) GetGeoBoundingBoxQuery() *GeoBoundingBoxQuery {
	if x != nil {
		if x, ok := x.Query.(*Query_GeoBoundingBoxQuery); ok {
			return x.GeoBoundingBoxQuery
		}
	}
	return nil
}

func (x *Query) GetGeoDistanceQuery() *GeoDistanceQuery {
	if x != nil {
		if x, ok := x.Query.(*Query_GeoDistanceQuery); ok {
			return x.GeoDistanceQuery
		}
	}
	return nil
}

func (x *Query) GetGeoPolygonQuery() *GeoPolygonQuery {
	if x != nil {
		if x, ok := x.Query.(*Query_GeoPolygonQuery); ok {
			return x.GeoPolygonQuery
		}
	}
	return nil
}

func (x *Query) GetMatchAllQuery() *MatchAllQuery {
	if x != nil {
		if x, ok := x.Query.(*Query_MatchAllQuery); ok {
			return x.MatchAllQuery
		}
	}
	return nil
}

func (x *Query) GetMatchNoneQuery() *MatchNoneQuery {
	if x != nil {
		if x, ok := x.Query.(*Query_MatchNoneQuery); ok {
			return x.MatchNoneQuery
		}
	}
	return nil
}

func (x *Query) GetMatchPhraseQuery() *MatchPhraseQuery {
	if x != nil {
		if x, ok := x.Query.(*Query_MatchPhraseQuery); ok {
			return x.MatchPhraseQuery
		}
	}
	return nil
}

func (x *Query) GetMatchQuery() *MatchQuery {
	if x != nil {
		if x, ok := x.Query.(*Query_MatchQuery); ok {
			return x.MatchQuery
		}
	}
	return nil
}

func (x *Query) GetNumericRangeQuery() *NumericRangeQuery {
	if x != nil {
		if x, ok := x.Query.(*Query_NumericRangeQuery); ok {
			return x.NumericRangeQuery
		}
	}
	return nil
}

func (x *Query) GetPhraseQuery() *PhraseQuery {
	if x != nil {
		if x, ok := x.Query.(*Query_PhraseQuery); ok {
			return x.PhraseQuery
		}
	}
	return nil
}

func (x *Query) GetPrefixQuery() *PrefixQuery {
	if x != nil {
		if x, ok := x.Query.(*Query_PrefixQuery); ok {
			return x.PrefixQuery
		}
	}
	return nil
}

func (x *Query) GetQueryStringQuery() *QueryStringQuery {
	if x != nil {
		if x, ok := x.Query.(*Query_QueryStringQuery); ok {
			return x.QueryStringQuery
		}
	}
	return nil
}

func (x *Query) GetRegexpQuery() *RegexpQuery {
	if x != nil {
		if x, ok := x.Query.(*Query_RegexpQuery); ok {
			return x.RegexpQuery
		}
	}
	return nil
}

func (x *Query) GetTermQuery() *TermQuery {
	if x != nil {
		if x, ok := x.Query.(*Query_TermQuery); ok {
			return x.TermQuery
		}
	}
	return nil
}

func (x *Query) GetTermRangeQuery() *TermRangeQuery {
	if x != nil {
		if x, ok := x.Query.(*Query_TermRangeQuery); ok {
			return x.TermRangeQuery
		}
	}
	return nil
}

func (x *Query) GetWildcardQuery() *WildcardQuery {
	if x != nil {
		if x, ok := x.Query.(*Query_WildcardQuery); ok {
			return x.WildcardQuery
		}
	}
	return nil
}

type isQuery_Query interface {
	isQuery_Query()
}

type Query_BooleanFieldQuery struct {
	BooleanFieldQuery *BooleanFieldQuery `protobuf:"bytes,1,opt,name=boolean_field_query,json=booleanFieldQuery,proto3,oneof"`
}

type Query_BooleanQuery struct {
	BooleanQuery *BooleanQuery `protobuf:"bytes,2,opt,name=boolean_query,json=booleanQuery,proto3,oneof"`
}

type Query_ConjunctionQuery struct {
	ConjunctionQuery *ConjunctionQuery `protobuf:"bytes,3,opt,name=conjunction_query,json=conjunctionQuery,proto3,oneof"`
}

type Query_DateRangeQuery struct {
	DateRangeQuery *DateRangeQuery `protobuf:"bytes,4,opt,name=date_range_query,json=dateRangeQuery,proto3,oneof"`
}

type Query_DisjunctionQuery struct {
	DisjunctionQuery *DisjunctionQuery `protobuf:"bytes,5,opt,name=disjunction_query,json=disjunctionQuery,proto3,oneof"`
}

type Query_DocIdQuery struct {
	DocIdQuery *DocIdQuery `protobuf:"bytes,6,opt,name=doc_id_query,json=docIdQuery,proto3,oneof"`
}

type Query_GeoBoundingBoxQuery struct {
	GeoBoundingBoxQuery *GeoBoundingBoxQuery `protobuf:"bytes,7,opt,name=geo_bounding_box_query,json=geoBoundingBoxQuery,proto3,oneof"`
}

type Query_GeoDistanceQuery struct {
	GeoDistanceQuery *GeoDistanceQuery `protobuf:"bytes,8,opt,name=geo_distance_query,json=geoDistanceQuery,proto3,oneof"`
}

type Query_GeoPolygonQuery struct {
	GeoPolygonQuery *GeoPolygonQuery `protobuf:"bytes,9,opt,name=geo_polygon_query,json=geoPolygonQuery,proto3,oneof"`
}

type Query_MatchAllQuery struct {
	MatchAllQuery *MatchAllQuery `protobuf:"bytes,10,opt,name=match_all_query,json=matchAllQuery,proto3,oneof"`
}

type Query_MatchNoneQuery struct {
	MatchNoneQuery *MatchNoneQuery `protobuf:"bytes,11,opt,name=match_none_query,json=matchNoneQuery,proto3,oneof"`
}

type Query_MatchPhraseQuery struct {
	MatchPhraseQuery *MatchPhraseQuery `protobuf:"bytes,12,opt,name=match_phrase_query,json=matchPhraseQuery,proto3,oneof"`
}

type Query_MatchQuery struct {
	MatchQuery *MatchQuery `protobuf:"bytes,13,opt,name=match_query,json=matchQuery,proto3,oneof"`
}

type Query_NumericRangeQuery struct {
	NumericRangeQuery *NumericRangeQuery `protobuf:"bytes,14,opt,name=numeric_range_query,json=numericRangeQuery,proto3,oneof"`
}

type Query_PhraseQuery struct {
	PhraseQuery *PhraseQuery `protobuf:"bytes,15,opt,name=phrase_query,json=phraseQuery,proto3,oneof"`
}

type Query_PrefixQuery struct {
	PrefixQuery *PrefixQuery `protobuf:"bytes,16,opt,name=prefix_query,json=prefixQuery,proto3,oneof"`
}

type Query_QueryStringQuery struct {
	QueryStringQuery *QueryStringQuery `protobuf:"bytes,17,opt,name=query_string_query,json=queryStringQuery,proto3,oneof"`
}

type Query_RegexpQuery struct {
	RegexpQuery *RegexpQuery `protobuf:"bytes,18,opt,name=regexp_query,json=regexpQuery,proto3,oneof"`
}

type Query_TermQuery struct {
	TermQuery *TermQuery `protobuf:"bytes,19,opt,name=term_query,json=termQuery,proto3,oneof"`
}

type Query_TermRangeQuery struct {
	TermRangeQuery *TermRangeQuery `protobuf:"bytes,20,opt,name=term_range_query,json=termRangeQuery,proto3,oneof"`
}

type Query_WildcardQuery struct {
	WildcardQuery *WildcardQuery `protobuf:"bytes,21,opt,name=wildcard_query,json=wildcardQuery,proto3,oneof"`
}

func (*Query_BooleanFieldQuery) isQuery_Query() {}

func (*Query_BooleanQuery) isQuery_Query() {}

func (*Query_ConjunctionQuery) isQuery_Query() {}

func (*Query_DateRangeQuery) isQuery_Query() {}

func (*Query_DisjunctionQuery) isQuery_Query() {}

func (*Query_DocIdQuery) isQuery_Query() {}

func (*Query_GeoBoundingBoxQuery) isQuery_Query() {}

func (*Query_GeoDistanceQuery) isQuery_Query() {}

func (*Query_GeoPolygonQuery) isQuery_Query() {}

func (*Query_MatchAllQuery) isQuery_Query() {}

func (*Query_MatchNoneQuery) isQuery_Query() {}

func (*Query_MatchPhraseQuery) isQuery_Query() {}

func (*Query_MatchQuery) isQuery_Query() {}

func (*Query_NumericRangeQuery) isQuery_Query() {}

func (*Query_PhraseQuery) isQuery_Query() {}

func (*Query_PrefixQuery) isQuery_Query() {}

func (*Query_QueryStringQuery) isQuery_Query() {}

func (*Query_RegexpQuery) isQuery_Query() {}

func (*Query_TermQuery) isQuery_Query() {}

func (*Query_TermRangeQuery) isQuery_Query() {}

func (*Query_WildcardQuery) isQuery_Query() {}

type FieldSorting struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Field         string                 `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Descending    bool                   `protobuf:"varint,2,opt,name=descending,proto3" json:"descending,omitempty"`
	Missing       string                 `protobuf:"bytes,3,opt,name=missing,proto3" json:"missing,omitempty"`
	Mode          string                 `protobuf:"bytes,4,opt,name=mode,proto3" json:"mode,omitempty"`
	Type          string                 `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FieldSorting) Reset() {
	*x = FieldSorting{}
	mi := &file_couchbase_search_v1_search_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FieldSorting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldSorting) ProtoMessage() {}

func (x *FieldSorting) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_search_v1_search_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldSorting.ProtoReflect.Descriptor instead.
func (*FieldSorting) Descriptor() ([]byte, []int) {
	return file_couchbase_search_v1_search_proto_rawDescGZIP(), []int{23}
}

func (x *FieldSorting) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *FieldSorting) GetDescending() bool {
	if x != nil {
		return x.Descending
	}
	return false
}

func (x *FieldSorting) GetMissing() string {
	if x != nil {
		return x.Missing
	}
	return ""
}

func (x *FieldSorting) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *FieldSorting) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type GeoDistanceSorting struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Field         string                 `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Descending    bool                   `protobuf:"varint,2,opt,name=descending,proto3" json:"descending,omitempty"`
	Center        *LatLng                `protobuf:"bytes,3,opt,name=center,proto3" json:"center,omitempty"`
	Unit          string                 `protobuf:"bytes,4,opt,name=unit,proto3" json:"unit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GeoDistanceSorting) Reset() {
	*x = GeoDistanceSorting{}
	mi := &file_couchbase_search_v1_search_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GeoDistanceSorting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeoDistanceSorting) ProtoMessage() {}

func (x *GeoDistanceSorting) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_search_v1_search_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeoDistanceSorting.ProtoReflect.Descriptor instead.
func (*GeoDistanceSorting) Descriptor() ([]byte, []int) {
	return file_couchbase_search_v1_search_proto_rawDescGZIP(), []int{24}
}

func (x *GeoDistanceSorting) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *GeoDistanceSorting) GetDescending() bool {
	if x != nil {
		return x.Descending
	}
	return false
}

func (x *GeoDistanceSorting) GetCenter() *LatLng {
	if x != nil {
		return x.Center
	}
	return nil
}

func (x *GeoDistanceSorting) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

type IdSorting struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Descending    bool                   `protobuf:"varint,1,opt,name=descending,proto3" json:"descending,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IdSorting) Reset() {
	*x = IdSorting{}
	mi := &file_couchbase_search_v1_search_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IdSorting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdSorting) ProtoMessage() {}

func (x *IdSorting) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_search_v1_search_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdSorting.ProtoReflect.Descriptor instead.
func (*IdSorting) Descriptor() ([]byte, []int) {
	return file_couchbase_search_v1_search_proto_rawDescGZIP(), []int{25}
}

func (x *IdSorting) GetDescending() bool {
	if x != nil {
		return x.Descending
	}
	return false
}

type ScoreSorting struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Descending    bool                   `protobuf:"varint,1,opt,name=descending,proto3" json:"descending,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScoreSorting) Reset() {
	*x = ScoreSorting{}
	mi := &file_couchbase_search_v1_search_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScoreSorting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScoreSorting) ProtoMessage() {}

func (x *ScoreSorting) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_search_v1_search_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScoreSorting.ProtoReflect.Descriptor instead.
func (*ScoreSorting) Descriptor() ([]byte, []int) {
	return file_couchbase_search_v1_search_proto_rawDescGZIP(), []int{26}
}

func (x *ScoreSorting) GetDescending() bool {
	if x != nil {
		return x.Descending
	}
	return false
}

type Sorting struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Sorting:
	//
	//	*Sorting_FieldSorting
	//	*Sorting_GeoDistanceSorting
	//	*Sorting_IdSorting
	//	*Sorting_ScoreSorting
	Sorting       isSorting_Sorting `protobuf_oneof:"sorting"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Sorting) Reset() {
	*x = Sorting{}
	mi := &file_couchbase_search_v1_search_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Sorting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sorting) ProtoMessage() {}

func (x *Sorting) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_search_v1_search_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sorting.ProtoReflect.Descriptor instead.
func (*Sorting) Descriptor() ([]byte, []int) {
	return file_couchbase_search_v1_search_proto_rawDescGZIP(), []int{27}
}

func (x *Sorting) GetSorting() isSorting_Sorting {
	if x != nil {
		return x.Sorting
	}
	return nil
}

func (x *Sorting) GetFieldSorting() *FieldSorting {
	if x != nil {
		if x, ok := x.Sorting.(*Sorting_FieldSorting); ok {
			return x.FieldSorting
		}
	}
	return nil
}

func (x *Sorting) GetGeoDistanceSorting() *GeoDistanceSorting {
	if x != nil {
		if x, ok := x.Sorting.(*Sorting_GeoDistanceSorting); ok {
			return x.GeoDistanceSorting
		}
	}
	return nil
}

func (x *Sorting) GetIdSorting() *IdSorting {
	if x != nil {
		if x, ok := x.Sorting.(*Sorting_IdSorting); ok {
			return x.IdSorting
		}
	}
	return nil
}

func (x *Sorting) GetScoreSorting() *ScoreSorting {
	if x != nil {
		if x, ok := x.Sorting.(*Sorting_ScoreSorting); ok {
			return x.ScoreSorting
		}
	}
	return nil
}

type isSorting_Sorting interface {
	isSorting_Sorting()
}

type Sorting_FieldSorting struct {
	FieldSorting *FieldSorting `protobuf:"bytes,1,opt,name=field_sorting,json=fieldSorting,proto3,oneof"`
}

type Sorting_GeoDistanceSorting struct {
	GeoDistanceSorting *GeoDistanceSorting `protobuf:"bytes,2,opt,name=geo_distance_sorting,json=geoDistanceSorting,proto3,oneof"`
}

type Sorting_IdSorting struct {
	IdSorting *IdSorting `protobuf:"bytes,3,opt,name=id_sorting,json=idSorting,proto3,oneof"`
}

type Sorting_ScoreSorting struct {
	ScoreSorting *ScoreSorting `protobuf:"bytes,4,opt,name=score_sorting,json=scoreSorting,proto3,oneof"`
}

func (*Sorting_FieldSorting) isSorting_Sorting() {}

func (*Sorting_GeoDistanceSorting) isSorting_Sorting() {}

func (*Sorting_IdSorting) isSorting_Sorting() {}

func (*Sorting_ScoreSorting) isSorting_Sorting() {}

type DateRange struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Start         *string                `protobuf:"bytes,2,opt,name=start,proto3,oneof" json:"start,omitempty"`
	End           *string                `protobuf:"bytes,3,opt,name=end,proto3,oneof" json:"end,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DateRange) Reset() {
	*x = DateRange{}
	mi := &file_couchbase_search_v1_search_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DateRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DateRange) ProtoMessage() {}

func (x *DateRange) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_search_v1_search_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DateRange.ProtoReflect.Descriptor instead.
func (*DateRange) Descriptor() ([]byte, []int) {
	return file_couchbase_search_v1_search_proto_rawDescGZIP(), []int{28}
}

func (x *DateRange) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DateRange) GetStart() string {
	if x != nil && x.Start != nil {
		return *x.Start
	}
	return ""
}

func (x *DateRange) GetEnd() string {
	if x != nil && x.End != nil {
		return *x.End
	}
	return ""
}

type DateRangeFacet struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Field         string                 `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Size          uint32                 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	DateRanges    []*DateRange           `protobuf:"bytes,3,rep,name=date_ranges,json=dateRanges,proto3" json:"date_ranges,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DateRangeFacet) Reset() {
	*x = DateRangeFacet{}
	mi := &file_couchbase_search_v1_search_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DateRangeFacet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DateRangeFacet) ProtoMessage() {}

func (x *DateRangeFacet) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_search_v1_search_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DateRangeFacet.ProtoReflect.Descriptor instead.
func (*DateRangeFacet) Descriptor() ([]byte, []int) {
	return file_couchbase_search_v1_search_proto_rawDescGZIP(), []int{29}
}

func (x *DateRangeFacet) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *DateRangeFacet) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *DateRangeFacet) GetDateRanges() []*DateRange {
	if x != nil {
		return x.DateRanges
	}
	return nil
}

type NumericRange struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Min           *float32               `protobuf:"fixed32,2,opt,name=min,proto3,oneof" json:"min,omitempty"`
	Max           *float32               `protobuf:"fixed32,3,opt,name=max,proto3,oneof" json:"max,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NumericRange) Reset() {
	*x = NumericRange{}
	mi := &file_couchbase_search_v1_search_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NumericRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NumericRange) ProtoMessage() {}

func (x *NumericRange) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_search_v1_search_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NumericRange.ProtoReflect.Descriptor instead.
func (*NumericRange) Descriptor() ([]byte, []int) {
	return file_couchbase_search_v1_search_proto_rawDescGZIP(), []int{30}
}

func (x *NumericRange) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NumericRange) GetMin() float32 {
	if x != nil && x.Min != nil {
		return *x.Min
	}
	return 0
}

func (x *NumericRange) GetMax() float32 {
	if x != nil && x.Max != nil {
		return *x.Max
	}
	return 0
}

type NumericRangeFacet struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Field         string                 `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Size          uint32                 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	NumericRanges []*NumericRange        `protobuf:"bytes,3,rep,name=numeric_ranges,json=numericRanges,proto3" json:"numeric_ranges,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NumericRangeFacet) Reset() {
	*x = NumericRangeFacet{}
	mi := &file_couchbase_search_v1_search_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NumericRangeFacet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NumericRangeFacet) ProtoMessage() {}

func (x *NumericRangeFacet) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_search_v1_search_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NumericRangeFacet.ProtoReflect.Descriptor instead.
func (*NumericRangeFacet) Descriptor() ([]byte, []int) {
	return file_couchbase_search_v1_search_proto_rawDescGZIP(), []int{31}
}

func (x *NumericRangeFacet) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *NumericRangeFacet) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *NumericRangeFacet) GetNumericRanges() []*NumericRange {
	if x != nil {
		return x.NumericRanges
	}
	return nil
}

type TermFacet struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Field         string                 `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Size          uint32                 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TermFacet) Reset() {
	*x = TermFacet{}
	mi := &file_couchbase_search_v1_search_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TermFacet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TermFacet) ProtoMessage() {}

func (x *TermFacet) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_search_v1_search_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TermFacet.ProtoReflect.Descriptor instead.
func (*TermFacet) Descriptor() ([]byte, []int) {
	return file_couchbase_search_v1_search_proto_rawDescGZIP(), []int{32}
}

func (x *TermFacet) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *TermFacet) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type Facet struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Facet:
	//
	//	*Facet_DateRangeFacet
	//	*Facet_NumericRangeFacet
	//	*Facet_TermFacet
	Facet         isFacet_Facet `protobuf_oneof:"facet"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Facet) Reset() {
	*x = Facet{}
	mi := &file_couchbase_search_v1_search_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Facet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Facet) ProtoMessage() {}

func (x *Facet) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_search_v1_search_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Facet.ProtoReflect.Descriptor instead.
func (*Facet) Descriptor() ([]byte, []int) {
	return file_couchbase_search_v1_search_proto_rawDescGZIP(), []int{33}
}

func (x *Facet) GetFacet() isFacet_Facet {
	if x != nil {
		return x.Facet
	}
	return nil
}

func (x *Facet) GetDateRangeFacet() *DateRangeFacet {
	if x != nil {
		if x, ok := x.Facet.(*Facet_DateRangeFacet); ok {
			return x.DateRangeFacet
		}
	}
	return nil
}

func (x *Facet) GetNumericRangeFacet() *NumericRangeFacet {
	if x != nil {
		if x, ok := x.Facet.(*Facet_NumericRangeFacet); ok {
			return x.NumericRangeFacet
		}
	}
	return nil
}

func (x *Facet) GetTermFacet() *TermFacet {
	if x != nil {
		if x, ok := x.Facet.(*Facet_TermFacet); ok {
			return x.TermFacet
		}
	}
	return nil
}

type isFacet_Facet interface {
	isFacet_Facet()
}

type Facet_DateRangeFacet struct {
	DateRangeFacet *DateRangeFacet `protobuf:"bytes,1,opt,name=date_range_facet,json=dateRangeFacet,proto3,oneof"`
}

type Facet_NumericRangeFacet struct {
	NumericRangeFacet *NumericRangeFacet `protobuf:"bytes,2,opt,name=numeric_range_facet,json=numericRangeFacet,proto3,oneof"`
}

type Facet_TermFacet struct {
	TermFacet *TermFacet `protobuf:"bytes,3,opt,name=term_facet,json=termFacet,proto3,oneof"`
}

func (*Facet_DateRangeFacet) isFacet_Facet() {}

func (*Facet_NumericRangeFacet) isFacet_Facet() {}

func (*Facet_TermFacet) isFacet_Facet() {}

type KnnQuery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Field         string                 `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	K             int64                  `protobuf:"varint,2,opt,name=k,proto3" json:"k,omitempty"`
	Vector        []float32              `protobuf:"fixed32,3,rep,packed,name=vector,proto3" json:"vector,omitempty"`
	Boost         *float32               `protobuf:"fixed32,4,opt,name=boost,proto3,oneof" json:"boost,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KnnQuery) Reset() {
	*x = KnnQuery{}
	mi := &file_couchbase_search_v1_search_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KnnQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KnnQuery) ProtoMessage() {}

func (x *KnnQuery) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_search_v1_search_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KnnQuery.ProtoReflect.Descriptor instead.
func (*KnnQuery) Descriptor() ([]byte, []int) {
	return file_couchbase_search_v1_search_proto_rawDescGZIP(), []int{34}
}

func (x *KnnQuery) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *KnnQuery) GetK() int64 {
	if x != nil {
		return x.K
	}
	return 0
}

func (x *KnnQuery) GetVector() []float32 {
	if x != nil {
		return x.Vector
	}
	return nil
}

func (x *KnnQuery) GetBoost() float32 {
	if x != nil && x.Boost != nil {
		return *x.Boost
	}
	return 0
}

type SearchQueryRequest struct {
	state              protoimpl.MessageState             `protogen:"open.v1"`
	IndexName          string                             `protobuf:"bytes,1,opt,name=index_name,json=indexName,proto3" json:"index_name,omitempty"`
	Query              *Query                             `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	ScanConsistency    SearchQueryRequest_ScanConsistency `protobuf:"varint,3,opt,name=scan_consistency,json=scanConsistency,proto3,enum=couchbase.search.v1.SearchQueryRequest_ScanConsistency" json:"scan_consistency,omitempty"`
	Limit              uint32                             `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Skip               uint32                             `protobuf:"varint,5,opt,name=skip,proto3" json:"skip,omitempty"`
	IncludeExplanation bool                               `protobuf:"varint,6,opt,name=include_explanation,json=includeExplanation,proto3" json:"include_explanation,omitempty"`
	HighlightStyle     SearchQueryRequest_HighlightStyle  `protobuf:"varint,7,opt,name=highlight_style,json=highlightStyle,proto3,enum=couchbase.search.v1.SearchQueryRequest_HighlightStyle" json:"highlight_style,omitempty"`
	HighlightFields    []string                           `protobuf:"bytes,8,rep,name=highlight_fields,json=highlightFields,proto3" json:"highlight_fields,omitempty"`
	Fields             []string                           `protobuf:"bytes,9,rep,name=fields,proto3" json:"fields,omitempty"`
	Sort               []*Sorting                         `protobuf:"bytes,10,rep,name=sort,proto3" json:"sort,omitempty"`
	DisableScoring     bool                               `protobuf:"varint,11,opt,name=disable_scoring,json=disableScoring,proto3" json:"disable_scoring,omitempty"`
	Collections        []string                           `protobuf:"bytes,12,rep,name=collections,proto3" json:"collections,omitempty"`
	IncludeLocations   bool                               `protobuf:"varint,13,opt,name=include_locations,json=includeLocations,proto3" json:"include_locations,omitempty"`
	Facets             map[string]*Facet                  `protobuf:"bytes,14,rep,name=facets,proto3" json:"facets,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Knn                []*KnnQuery                        `protobuf:"bytes,17,rep,name=knn,proto3" json:"knn,omitempty"`
	KnnOperator        *KnnOperator                       `protobuf:"varint,18,opt,name=knn_operator,json=knnOperator,proto3,enum=couchbase.search.v1.KnnOperator,oneof" json:"knn_operator,omitempty"`
	BucketName         *string                            `protobuf:"bytes,15,opt,name=bucket_name,json=bucketName,proto3,oneof" json:"bucket_name,omitempty"`
	ScopeName          *string                            `protobuf:"bytes,16,opt,name=scope_name,json=scopeName,proto3,oneof" json:"scope_name,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *SearchQueryRequest) Reset() {
	*x = SearchQueryRequest{}
	mi := &file_couchbase_search_v1_search_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchQueryRequest) ProtoMessage() {}

func (x *SearchQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_search_v1_search_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchQueryRequest.ProtoReflect.Descriptor instead.
func (*SearchQueryRequest) Descriptor() ([]byte, []int) {
	return file_couchbase_search_v1_search_proto_rawDescGZIP(), []int{35}
}

func (x *SearchQueryRequest) GetIndexName() string {
	if x != nil {
		return x.IndexName
	}
	return ""
}

func (x *SearchQueryRequest) GetQuery() *Query {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *SearchQueryRequest) GetScanConsistency() SearchQueryRequest_ScanConsistency {
	if x != nil {
		return x.ScanConsistency
	}
	return SearchQueryRequest_SCAN_CONSISTENCY_NOT_BOUNDED
}

func (x *SearchQueryRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchQueryRequest) GetSkip() uint32 {
	if x != nil {
		return x.Skip
	}
	return 0
}

func (x *SearchQueryRequest) GetIncludeExplanation() bool {
	if x != nil {
		return x.IncludeExplanation
	}
	return false
}

func (x *SearchQueryRequest) GetHighlightStyle() SearchQueryRequest_HighlightStyle {
	if x != nil {
		return x.HighlightStyle
	}
	return SearchQueryRequest_HIGHLIGHT_STYLE_DEFAULT
}

func (x *SearchQueryRequest) GetHighlightFields() []string {
	if x != nil {
		return x.HighlightFields
	}
	return nil
}

func (x *SearchQueryRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *SearchQueryRequest) GetSort() []*Sorting {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *SearchQueryRequest) GetDisableScoring() bool {
	if x != nil {
		return x.DisableScoring
	}
	return false
}

func (x *SearchQueryRequest) GetCollections() []string {
	if x != nil {
		return x.Collections
	}
	return nil
}

func (x *SearchQueryRequest) GetIncludeLocations() bool {
	if x != nil {
		return x.IncludeLocations
	}
	return false
}

func (x *SearchQueryRequest) GetFacets() map[string]*Facet {
	if x != nil {
		return x.Facets
	}
	return nil
}

func (x *SearchQueryRequest) GetKnn() []*KnnQuery {
	if x != nil {
		return x.Knn
	}
	return nil
}

func (x *SearchQueryRequest) GetKnnOperator() KnnOperator {
	if x != nil && x.KnnOperator != nil {
		return *x.KnnOperator
	}
	return KnnOperator_KNN_OPERATOR_OR
}

func (x *SearchQueryRequest) GetBucketName() string {
	if x != nil && x.BucketName != nil {
		return *x.BucketName
	}
	return ""
}

func (x *SearchQueryRequest) GetScopeName() string {
	if x != nil && x.ScopeName != nil {
		return *x.ScopeName
	}
	return ""
}

type SearchQueryResponse struct {
	state         protoimpl.MessageState                      `protogen:"open.v1"`
	Hits          []*SearchQueryResponse_SearchQueryRow       `protobuf:"bytes,1,rep,name=hits,proto3" json:"hits,omitempty"`
	Facets        map[string]*SearchQueryResponse_FacetResult `protobuf:"bytes,2,rep,name=facets,proto3" json:"facets,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	MetaData      *SearchQueryResponse_MetaData               `protobuf:"bytes,3,opt,name=meta_data,json=metaData,proto3,oneof" json:"meta_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchQueryResponse) Reset() {
	*x = SearchQueryResponse{}
	mi := &file_couchbase_search_v1_search_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchQueryResponse) ProtoMessage() {}

func (x *SearchQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_search_v1_search_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchQueryResponse.ProtoReflect.Descriptor instead.
func (*SearchQueryResponse) Descriptor() ([]byte, []int) {
	return file_couchbase_search_v1_search_proto_rawDescGZIP(), []int{36}
}

func (x *SearchQueryResponse) GetHits() []*SearchQueryResponse_SearchQueryRow {
	if x != nil {
		return x.Hits
	}
	return nil
}

func (x *SearchQueryResponse) GetFacets() map[string]*SearchQueryResponse_FacetResult {
	if x != nil {
		return x.Facets
	}
	return nil
}

func (x *SearchQueryResponse) GetMetaData() *SearchQueryResponse_MetaData {
	if x != nil {
		return x.MetaData
	}
	return nil
}

type SearchQueryResponse_SearchQueryRow struct {
	state         protoimpl.MessageState                   `protogen:"open.v1"`
	Id            string                                   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Score         float64                                  `protobuf:"fixed64,2,opt,name=score,proto3" json:"score,omitempty"`
	Index         string                                   `protobuf:"bytes,3,opt,name=index,proto3" json:"index,omitempty"`
	Explanation   []byte                                   `protobuf:"bytes,4,opt,name=explanation,proto3" json:"explanation,omitempty"`
	Locations     []*SearchQueryResponse_Location          `protobuf:"bytes,5,rep,name=locations,proto3" json:"locations,omitempty"`
	Fragments     map[string]*SearchQueryResponse_Fragment `protobuf:"bytes,6,rep,name=fragments,proto3" json:"fragments,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Fields        map[string][]byte                        `protobuf:"bytes,7,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchQueryResponse_SearchQueryRow) Reset() {
	*x = SearchQueryResponse_SearchQueryRow{}
	mi := &file_couchbase_search_v1_search_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchQueryResponse_SearchQueryRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchQueryResponse_SearchQueryRow) ProtoMessage() {}

func (x *SearchQueryResponse_SearchQueryRow) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_search_v1_search_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchQueryResponse_SearchQueryRow.ProtoReflect.Descriptor instead.
func (*SearchQueryResponse_SearchQueryRow) Descriptor() ([]byte, []int) {
	return file_couchbase_search_v1_search_proto_rawDescGZIP(), []int{36, 0}
}

func (x *SearchQueryResponse_SearchQueryRow) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SearchQueryResponse_SearchQueryRow) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *SearchQueryResponse_SearchQueryRow) GetIndex() string {
	if x != nil {
		return x.Index
	}
	return ""
}

func (x *SearchQueryResponse_SearchQueryRow) GetExplanation() []byte {
	if x != nil {
		return x.Explanation
	}
	return nil
}

func (x *SearchQueryResponse_SearchQueryRow) GetLocations() []*SearchQueryResponse_Location {
	if x != nil {
		return x.Locations
	}
	return nil
}

func (x *SearchQueryResponse_SearchQueryRow) GetFragments() map[string]*SearchQueryResponse_Fragment {
	if x != nil {
		return x.Fragments
	}
	return nil
}

func (x *SearchQueryResponse_SearchQueryRow) GetFields() map[string][]byte {
	if x != nil {
		return x.Fields
	}
	return nil
}

type SearchQueryResponse_Location struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Field          string                 `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Term           string                 `protobuf:"bytes,2,opt,name=term,proto3" json:"term,omitempty"`
	Position       uint32                 `protobuf:"varint,3,opt,name=position,proto3" json:"position,omitempty"`
	Start          uint32                 `protobuf:"varint,4,opt,name=start,proto3" json:"start,omitempty"`
	End            uint32                 `protobuf:"varint,5,opt,name=end,proto3" json:"end,omitempty"`
	ArrayPositions []uint32               `protobuf:"varint,6,rep,packed,name=array_positions,json=arrayPositions,proto3" json:"array_positions,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SearchQueryResponse_Location) Reset() {
	*x = SearchQueryResponse_Location{}
	mi := &file_couchbase_search_v1_search_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchQueryResponse_Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchQueryResponse_Location) ProtoMessage() {}

func (x *SearchQueryResponse_Location) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_search_v1_search_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchQueryResponse_Location.ProtoReflect.Descriptor instead.
func (*SearchQueryResponse_Location) Descriptor() ([]byte, []int) {
	return file_couchbase_search_v1_search_proto_rawDescGZIP(), []int{36, 1}
}

func (x *SearchQueryResponse_Location) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *SearchQueryResponse_Location) GetTerm() string {
	if x != nil {
		return x.Term
	}
	return ""
}

func (x *SearchQueryResponse_Location) GetPosition() uint32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *SearchQueryResponse_Location) GetStart() uint32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *SearchQueryResponse_Location) GetEnd() uint32 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *SearchQueryResponse_Location) GetArrayPositions() []uint32 {
	if x != nil {
		return x.ArrayPositions
	}
	return nil
}

type SearchQueryResponse_Fragment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       []string               `protobuf:"bytes,1,rep,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchQueryResponse_Fragment) Reset() {
	*x = SearchQueryResponse_Fragment{}
	mi := &file_couchbase_search_v1_search_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchQueryResponse_Fragment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchQueryResponse_Fragment) ProtoMessage() {}

func (x *SearchQueryResponse_Fragment) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_search_v1_search_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchQueryResponse_Fragment.ProtoReflect.Descriptor instead.
func (*SearchQueryResponse_Fragment) Descriptor() ([]byte, []int) {
	return file_couchbase_search_v1_search_proto_rawDescGZIP(), []int{36, 2}
}

func (x *SearchQueryResponse_Fragment) GetContent() []string {
	if x != nil {
		return x.Content
	}
	return nil
}

type SearchQueryResponse_FacetResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to SearchFacet:
	//
	//	*SearchQueryResponse_FacetResult_TermFacet
	//	*SearchQueryResponse_FacetResult_DateRangeFacet
	//	*SearchQueryResponse_FacetResult_NumericRangeFacet
	SearchFacet   isSearchQueryResponse_FacetResult_SearchFacet `protobuf_oneof:"search_facet"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchQueryResponse_FacetResult) Reset() {
	*x = SearchQueryResponse_FacetResult{}
	mi := &file_couchbase_search_v1_search_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchQueryResponse_FacetResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchQueryResponse_FacetResult) ProtoMessage() {}

func (x *SearchQueryResponse_FacetResult) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_search_v1_search_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchQueryResponse_FacetResult.ProtoReflect.Descriptor instead.
func (*SearchQueryResponse_FacetResult) Descriptor() ([]byte, []int) {
	return file_couchbase_search_v1_search_proto_rawDescGZIP(), []int{36, 3}
}

func (x *SearchQueryResponse_FacetResult) GetSearchFacet() isSearchQueryResponse_FacetResult_SearchFacet {
	if x != nil {
		return x.SearchFacet
	}
	return nil
}

func (x *SearchQueryResponse_FacetResult) GetTermFacet() *SearchQueryResponse_TermFacetResult {
	if x != nil {
		if x, ok := x.SearchFacet.(*SearchQueryResponse_FacetResult_TermFacet); ok {
			return x.TermFacet
		}
	}
	return nil
}

func (x *SearchQueryResponse_FacetResult) GetDateRangeFacet() *SearchQueryResponse_DateRangeFacetResult {
	if x != nil {
		if x, ok := x.SearchFacet.(*SearchQueryResponse_FacetResult_DateRangeFacet); ok {
			return x.DateRangeFacet
		}
	}
	return nil
}

func (x *SearchQueryResponse_FacetResult) GetNumericRangeFacet() *SearchQueryResponse_NumericRangeFacetResult {
	if x != nil {
		if x, ok := x.SearchFacet.(*SearchQueryResponse_FacetResult_NumericRangeFacet); ok {
			return x.NumericRangeFacet
		}
	}
	return nil
}

type isSearchQueryResponse_FacetResult_SearchFacet interface {
	isSearchQueryResponse_FacetResult_SearchFacet()
}

type SearchQueryResponse_FacetResult_TermFacet struct {
	TermFacet *SearchQueryResponse_TermFacetResult `protobuf:"bytes,1,opt,name=term_facet,json=termFacet,proto3,oneof"`
}

type SearchQueryResponse_FacetResult_DateRangeFacet struct {
	DateRangeFacet *SearchQueryResponse_DateRangeFacetResult `protobuf:"bytes,2,opt,name=date_range_facet,json=dateRangeFacet,proto3,oneof"`
}

type SearchQueryResponse_FacetResult_NumericRangeFacet struct {
	NumericRangeFacet *SearchQueryResponse_NumericRangeFacetResult `protobuf:"bytes,3,opt,name=numeric_range_facet,json=numericRangeFacet,proto3,oneof"`
}

func (*SearchQueryResponse_FacetResult_TermFacet) isSearchQueryResponse_FacetResult_SearchFacet() {}

func (*SearchQueryResponse_FacetResult_DateRangeFacet) isSearchQueryResponse_FacetResult_SearchFacet() {
}

func (*SearchQueryResponse_FacetResult_NumericRangeFacet) isSearchQueryResponse_FacetResult_SearchFacet() {
}

type SearchQueryResponse_TermResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Field         string                 `protobuf:"bytes,2,opt,name=field,proto3" json:"field,omitempty"`
	Size          uint64                 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchQueryResponse_TermResult) Reset() {
	*x = SearchQueryResponse_TermResult{}
	mi := &file_couchbase_search_v1_search_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchQueryResponse_TermResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchQueryResponse_TermResult) ProtoMessage() {}

func (x *SearchQueryResponse_TermResult) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_search_v1_search_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchQueryResponse_TermResult.ProtoReflect.Descriptor instead.
func (*SearchQueryResponse_TermResult) Descriptor() ([]byte, []int) {
	return file_couchbase_search_v1_search_proto_rawDescGZIP(), []int{36, 4}
}

func (x *SearchQueryResponse_TermResult) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SearchQueryResponse_TermResult) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *SearchQueryResponse_TermResult) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type SearchQueryResponse_TermFacetResult struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Field         string                            `protobuf:"bytes,2,opt,name=field,proto3" json:"field,omitempty"`
	Total         int64                             `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	Missing       int64                             `protobuf:"varint,4,opt,name=missing,proto3" json:"missing,omitempty"`
	Other         int64                             `protobuf:"varint,5,opt,name=other,proto3" json:"other,omitempty"`
	Terms         []*SearchQueryResponse_TermResult `protobuf:"bytes,6,rep,name=terms,proto3" json:"terms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchQueryResponse_TermFacetResult) Reset() {
	*x = SearchQueryResponse_TermFacetResult{}
	mi := &file_couchbase_search_v1_search_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchQueryResponse_TermFacetResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchQueryResponse_TermFacetResult) ProtoMessage() {}

func (x *SearchQueryResponse_TermFacetResult) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_search_v1_search_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchQueryResponse_TermFacetResult.ProtoReflect.Descriptor instead.
func (*SearchQueryResponse_TermFacetResult) Descriptor() ([]byte, []int) {
	return file_couchbase_search_v1_search_proto_rawDescGZIP(), []int{36, 5}
}

func (x *SearchQueryResponse_TermFacetResult) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *SearchQueryResponse_TermFacetResult) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SearchQueryResponse_TermFacetResult) GetMissing() int64 {
	if x != nil {
		return x.Missing
	}
	return 0
}

func (x *SearchQueryResponse_TermFacetResult) GetOther() int64 {
	if x != nil {
		return x.Other
	}
	return 0
}

func (x *SearchQueryResponse_TermFacetResult) GetTerms() []*SearchQueryResponse_TermResult {
	if x != nil {
		return x.Terms
	}
	return nil
}

type SearchQueryResponse_DateRangeResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Size          uint64                 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Start         *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start,proto3" json:"start,omitempty"`
	End           *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end,proto3" json:"end,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchQueryResponse_DateRangeResult) Reset() {
	*x = SearchQueryResponse_DateRangeResult{}
	mi := &file_couchbase_search_v1_search_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchQueryResponse_DateRangeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchQueryResponse_DateRangeResult) ProtoMessage() {}

func (x *SearchQueryResponse_DateRangeResult) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_search_v1_search_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchQueryResponse_DateRangeResult.ProtoReflect.Descriptor instead.
func (*SearchQueryResponse_DateRangeResult) Descriptor() ([]byte, []int) {
	return file_couchbase_search_v1_search_proto_rawDescGZIP(), []int{36, 6}
}

func (x *SearchQueryResponse_DateRangeResult) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SearchQueryResponse_DateRangeResult) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SearchQueryResponse_DateRangeResult) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *SearchQueryResponse_DateRangeResult) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

type SearchQueryResponse_DateRangeFacetResult struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	Field         string                                 `protobuf:"bytes,2,opt,name=field,proto3" json:"field,omitempty"`
	Total         int64                                  `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	Missing       int64                                  `protobuf:"varint,4,opt,name=missing,proto3" json:"missing,omitempty"`
	Other         int64                                  `protobuf:"varint,5,opt,name=other,proto3" json:"other,omitempty"`
	DateRanges    []*SearchQueryResponse_DateRangeResult `protobuf:"bytes,6,rep,name=date_ranges,json=dateRanges,proto3" json:"date_ranges,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchQueryResponse_DateRangeFacetResult) Reset() {
	*x = SearchQueryResponse_DateRangeFacetResult{}
	mi := &file_couchbase_search_v1_search_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchQueryResponse_DateRangeFacetResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchQueryResponse_DateRangeFacetResult) ProtoMessage() {}

func (x *SearchQueryResponse_DateRangeFacetResult) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_search_v1_search_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchQueryResponse_DateRangeFacetResult.ProtoReflect.Descriptor instead.
func (*SearchQueryResponse_DateRangeFacetResult) Descriptor() ([]byte, []int) {
	return file_couchbase_search_v1_search_proto_rawDescGZIP(), []int{36, 7}
}

func (x *SearchQueryResponse_DateRangeFacetResult) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *SearchQueryResponse_DateRangeFacetResult) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SearchQueryResponse_DateRangeFacetResult) GetMissing() int64 {
	if x != nil {
		return x.Missing
	}
	return 0
}

func (x *SearchQueryResponse_DateRangeFacetResult) GetOther() int64 {
	if x != nil {
		return x.Other
	}
	return 0
}

func (x *SearchQueryResponse_DateRangeFacetResult) GetDateRanges() []*SearchQueryResponse_DateRangeResult {
	if x != nil {
		return x.DateRanges
	}
	return nil
}

type SearchQueryResponse_NumericRangeResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Size          uint64                 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Min           uint64                 `protobuf:"varint,3,opt,name=min,proto3" json:"min,omitempty"`
	Max           uint64                 `protobuf:"varint,4,opt,name=max,proto3" json:"max,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchQueryResponse_NumericRangeResult) Reset() {
	*x = SearchQueryResponse_NumericRangeResult{}
	mi := &file_couchbase_search_v1_search_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchQueryResponse_NumericRangeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchQueryResponse_NumericRangeResult) ProtoMessage() {}

func (x *SearchQueryResponse_NumericRangeResult) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_search_v1_search_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchQueryResponse_NumericRangeResult.ProtoReflect.Descriptor instead.
func (*SearchQueryResponse_NumericRangeResult) Descriptor() ([]byte, []int) {
	return file_couchbase_search_v1_search_proto_rawDescGZIP(), []int{36, 8}
}

func (x *SearchQueryResponse_NumericRangeResult) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SearchQueryResponse_NumericRangeResult) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SearchQueryResponse_NumericRangeResult) GetMin() uint64 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *SearchQueryResponse_NumericRangeResult) GetMax() uint64 {
	if x != nil {
		return x.Max
	}
	return 0
}

type SearchQueryResponse_NumericRangeFacetResult struct {
	state         protoimpl.MessageState                    `protogen:"open.v1"`
	Field         string                                    `protobuf:"bytes,2,opt,name=field,proto3" json:"field,omitempty"`
	Total         int64                                     `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	Missing       int64                                     `protobuf:"varint,4,opt,name=missing,proto3" json:"missing,omitempty"`
	Other         int64                                     `protobuf:"varint,5,opt,name=other,proto3" json:"other,omitempty"`
	NumericRanges []*SearchQueryResponse_NumericRangeResult `protobuf:"bytes,6,rep,name=numeric_ranges,json=numericRanges,proto3" json:"numeric_ranges,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchQueryResponse_NumericRangeFacetResult) Reset() {
	*x = SearchQueryResponse_NumericRangeFacetResult{}
	mi := &file_couchbase_search_v1_search_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchQueryResponse_NumericRangeFacetResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchQueryResponse_NumericRangeFacetResult) ProtoMessage() {}

func (x *SearchQueryResponse_NumericRangeFacetResult) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_search_v1_search_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchQueryResponse_NumericRangeFacetResult.ProtoReflect.Descriptor instead.
func (*SearchQueryResponse_NumericRangeFacetResult) Descriptor() ([]byte, []int) {
	return file_couchbase_search_v1_search_proto_rawDescGZIP(), []int{36, 9}
}

func (x *SearchQueryResponse_NumericRangeFacetResult) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *SearchQueryResponse_NumericRangeFacetResult) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SearchQueryResponse_NumericRangeFacetResult) GetMissing() int64 {
	if x != nil {
		return x.Missing
	}
	return 0
}

func (x *SearchQueryResponse_NumericRangeFacetResult) GetOther() int64 {
	if x != nil {
		return x.Other
	}
	return 0
}

func (x *SearchQueryResponse_NumericRangeFacetResult) GetNumericRanges() []*SearchQueryResponse_NumericRangeResult {
	if x != nil {
		return x.NumericRanges
	}
	return nil
}

type SearchQueryResponse_MetaData struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	Metrics       *SearchQueryResponse_SearchMetrics `protobuf:"bytes,1,opt,name=metrics,proto3" json:"metrics,omitempty"`
	Errors        map[string]string                  `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchQueryResponse_MetaData) Reset() {
	*x = SearchQueryResponse_MetaData{}
	mi := &file_couchbase_search_v1_search_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchQueryResponse_MetaData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchQueryResponse_MetaData) ProtoMessage() {}

func (x *SearchQueryResponse_MetaData) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_search_v1_search_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchQueryResponse_MetaData.ProtoReflect.Descriptor instead.
func (*SearchQueryResponse_MetaData) Descriptor() ([]byte, []int) {
	return file_couchbase_search_v1_search_proto_rawDescGZIP(), []int{36, 10}
}

func (x *SearchQueryResponse_MetaData) GetMetrics() *SearchQueryResponse_SearchMetrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *SearchQueryResponse_MetaData) GetErrors() map[string]string {
	if x != nil {
		return x.Errors
	}
	return nil
}

type SearchQueryResponse_SearchMetrics struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	ExecutionTime         *durationpb.Duration   `protobuf:"bytes,1,opt,name=execution_time,json=executionTime,proto3" json:"execution_time,omitempty"`
	TotalRows             uint64                 `protobuf:"varint,2,opt,name=total_rows,json=totalRows,proto3" json:"total_rows,omitempty"`
	MaxScore              float64                `protobuf:"fixed64,3,opt,name=max_score,json=maxScore,proto3" json:"max_score,omitempty"`
	TotalPartitionCount   uint64                 `protobuf:"varint,4,opt,name=total_partition_count,json=totalPartitionCount,proto3" json:"total_partition_count,omitempty"`
	SuccessPartitionCount uint64                 `protobuf:"varint,5,opt,name=success_partition_count,json=successPartitionCount,proto3" json:"success_partition_count,omitempty"`
	ErrorPartitionCount   uint64                 `protobuf:"varint,6,opt,name=error_partition_count,json=errorPartitionCount,proto3" json:"error_partition_count,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *SearchQueryResponse_SearchMetrics) Reset() {
	*x = SearchQueryResponse_SearchMetrics{}
	mi := &file_couchbase_search_v1_search_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchQueryResponse_SearchMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchQueryResponse_SearchMetrics) ProtoMessage() {}

func (x *SearchQueryResponse_SearchMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_search_v1_search_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchQueryResponse_SearchMetrics.ProtoReflect.Descriptor instead.
func (*SearchQueryResponse_SearchMetrics) Descriptor() ([]byte, []int) {
	return file_couchbase_search_v1_search_proto_rawDescGZIP(), []int{36, 11}
}

func (x *SearchQueryResponse_SearchMetrics) GetExecutionTime() *durationpb.Duration {
	if x != nil {
		return x.ExecutionTime
	}
	return nil
}

func (x *SearchQueryResponse_SearchMetrics) GetTotalRows() uint64 {
	if x != nil {
		return x.TotalRows
	}
	return 0
}

func (x *SearchQueryResponse_SearchMetrics) GetMaxScore() float64 {
	if x != nil {
		return x.MaxScore
	}
	return 0
}

func (x *SearchQueryResponse_SearchMetrics) GetTotalPartitionCount() uint64 {
	if x != nil {
		return x.TotalPartitionCount
	}
	return 0
}

func (x *SearchQueryResponse_SearchMetrics) GetSuccessPartitionCount() uint64 {
	if x != nil {
		return x.SuccessPartitionCount
	}
	return 0
}

func (x *SearchQueryResponse_SearchMetrics) GetErrorPartitionCount() uint64 {
	if x != nil {
		return x.ErrorPartitionCount
	}
	return 0
}

var File_couchbase_search_v1_search_proto protoreflect.FileDescriptor

const file_couchbase_search_v1_search_proto_rawDesc = "" +
	"\n" +
	" couchbase/search/v1/search.proto\x12\x13couchbase.search.v1\x1a\x1egoogle/protobuf/duration.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"s\n" +
	"\x11BooleanFieldQuery\x12\x19\n" +
	"\x05boost\x18\x01 \x01(\x02H\x00R\x05boost\x88\x01\x01\x12\x19\n" +
	"\x05field\x18\x02 \x01(\tH\x01R\x05field\x88\x01\x01\x12\x14\n" +
	"\x05value\x18\x06 \x01(\bR\x05valueB\b\n" +
	"\x06_boostB\b\n" +
	"\x06_field\"\x9f\x02\n" +
	"\fBooleanQuery\x12\x19\n" +
	"\x05boost\x18\x01 \x01(\x02H\x00R\x05boost\x88\x01\x01\x12>\n" +
	"\x04must\x18\x02 \x01(\v2%.couchbase.search.v1.ConjunctionQueryH\x01R\x04must\x88\x01\x01\x12E\n" +
	"\bmust_not\x18\x03 \x01(\v2%.couchbase.search.v1.DisjunctionQueryH\x02R\amustNot\x88\x01\x01\x12B\n" +
	"\x06should\x18\x04 \x01(\v2%.couchbase.search.v1.DisjunctionQueryH\x03R\x06should\x88\x01\x01B\b\n" +
	"\x06_boostB\a\n" +
	"\x05_mustB\v\n" +
	"\t_must_notB\t\n" +
	"\a_should\"m\n" +
	"\x10ConjunctionQuery\x12\x19\n" +
	"\x05boost\x18\x01 \x01(\x02H\x00R\x05boost\x88\x01\x01\x124\n" +
	"\aqueries\x18\x02 \x03(\v2\x1a.couchbase.search.v1.QueryR\aqueriesB\b\n" +
	"\x06_boost\"\xfe\x01\n" +
	"\x0eDateRangeQuery\x12\x19\n" +
	"\x05boost\x18\x01 \x01(\x02H\x00R\x05boost\x88\x01\x01\x12\x19\n" +
	"\x05field\x18\x02 \x01(\tH\x01R\x05field\x88\x01\x01\x12-\n" +
	"\x10date_time_parser\x18\x03 \x01(\tH\x02R\x0edateTimeParser\x88\x01\x01\x12\"\n" +
	"\n" +
	"start_date\x18\x04 \x01(\tH\x03R\tstartDate\x88\x01\x01\x12\x1e\n" +
	"\bend_date\x18\x05 \x01(\tH\x04R\aendDate\x88\x01\x01B\b\n" +
	"\x06_boostB\b\n" +
	"\x06_fieldB\x13\n" +
	"\x11_date_time_parserB\r\n" +
	"\v_start_dateB\v\n" +
	"\t_end_date\"\x98\x01\n" +
	"\x10DisjunctionQuery\x12\x19\n" +
	"\x05boost\x18\x01 \x01(\x02H\x00R\x05boost\x88\x01\x01\x124\n" +
	"\aqueries\x18\x02 \x03(\v2\x1a.couchbase.search.v1.QueryR\aqueries\x12\x1d\n" +
	"\aminimum\x18\x03 \x01(\rH\x01R\aminimum\x88\x01\x01B\b\n" +
	"\x06_boostB\n" +
	"\n" +
	"\b_minimum\"C\n" +
	"\n" +
	"DocIdQuery\x12\x19\n" +
	"\x05boost\x18\x01 \x01(\x02H\x00R\x05boost\x88\x01\x01\x12\x10\n" +
	"\x03ids\x18\x03 \x03(\tR\x03idsB\b\n" +
	"\x06_boost\"B\n" +
	"\x06LatLng\x12\x1a\n" +
	"\blatitude\x18\x01 \x01(\x01R\blatitude\x12\x1c\n" +
	"\tlongitude\x18\x02 \x01(\x01R\tlongitude\"\xd7\x01\n" +
	"\x13GeoBoundingBoxQuery\x12\x19\n" +
	"\x05boost\x18\x01 \x01(\x02H\x00R\x05boost\x88\x01\x01\x12\x19\n" +
	"\x05field\x18\x02 \x01(\tH\x01R\x05field\x88\x01\x01\x126\n" +
	"\btop_left\x18\x03 \x01(\v2\x1b.couchbase.search.v1.LatLngR\atopLeft\x12>\n" +
	"\fbottom_right\x18\x04 \x01(\v2\x1b.couchbase.search.v1.LatLngR\vbottomRightB\b\n" +
	"\x06_boostB\b\n" +
	"\x06_field\"\xad\x01\n" +
	"\x10GeoDistanceQuery\x12\x19\n" +
	"\x05boost\x18\x01 \x01(\x02H\x00R\x05boost\x88\x01\x01\x12\x19\n" +
	"\x05field\x18\x02 \x01(\tH\x01R\x05field\x88\x01\x01\x123\n" +
	"\x06center\x18\x03 \x01(\v2\x1b.couchbase.search.v1.LatLngR\x06center\x12\x1a\n" +
	"\bdistance\x18\x04 \x01(\tR\bdistanceB\b\n" +
	"\x06_boostB\b\n" +
	"\x06_field\"\x94\x01\n" +
	"\x0fGeoPolygonQuery\x12\x19\n" +
	"\x05boost\x18\x01 \x01(\x02H\x00R\x05boost\x88\x01\x01\x12\x19\n" +
	"\x05field\x18\x02 \x01(\tH\x01R\x05field\x88\x01\x01\x127\n" +
	"\bvertices\x18\x03 \x03(\v2\x1b.couchbase.search.v1.LatLngR\bverticesB\b\n" +
	"\x06_boostB\b\n" +
	"\x06_field\"\x0f\n" +
	"\rMatchAllQuery\"\x10\n" +
	"\x0eMatchNoneQuery\"\xa2\x01\n" +
	"\x10MatchPhraseQuery\x12\x19\n" +
	"\x05boost\x18\x01 \x01(\x02H\x00R\x05boost\x88\x01\x01\x12\x19\n" +
	"\x05field\x18\x02 \x01(\tH\x01R\x05field\x88\x01\x01\x12\x16\n" +
	"\x06phrase\x18\x03 \x01(\tR\x06phrase\x12\x1f\n" +
	"\banalyzer\x18\x04 \x01(\tH\x02R\banalyzer\x88\x01\x01B\b\n" +
	"\x06_boostB\b\n" +
	"\x06_fieldB\v\n" +
	"\t_analyzer\"\x8e\x03\n" +
	"\n" +
	"MatchQuery\x12\x19\n" +
	"\x05boost\x18\x01 \x01(\x02H\x00R\x05boost\x88\x01\x01\x12\x19\n" +
	"\x05field\x18\x02 \x01(\tH\x01R\x05field\x88\x01\x01\x12\x14\n" +
	"\x05value\x18\x03 \x01(\tR\x05value\x12\x1f\n" +
	"\banalyzer\x18\x04 \x01(\tH\x02R\banalyzer\x88\x01\x01\x12!\n" +
	"\tfuzziness\x18\x05 \x01(\x04H\x03R\tfuzziness\x88\x01\x01\x12I\n" +
	"\boperator\x18\x06 \x01(\x0e2(.couchbase.search.v1.MatchQuery.OperatorH\x04R\boperator\x88\x01\x01\x12(\n" +
	"\rprefix_length\x18\a \x01(\x04H\x05R\fprefixLength\x88\x01\x01\"-\n" +
	"\bOperator\x12\x0f\n" +
	"\vOPERATOR_OR\x10\x00\x12\x10\n" +
	"\fOPERATOR_AND\x10\x01B\b\n" +
	"\x06_boostB\b\n" +
	"\x06_fieldB\v\n" +
	"\t_analyzerB\f\n" +
	"\n" +
	"_fuzzinessB\v\n" +
	"\t_operatorB\x10\n" +
	"\x0e_prefix_length\"\x93\x02\n" +
	"\x11NumericRangeQuery\x12\x19\n" +
	"\x05boost\x18\x01 \x01(\x02H\x00R\x05boost\x88\x01\x01\x12\x19\n" +
	"\x05field\x18\x02 \x01(\tH\x01R\x05field\x88\x01\x01\x12\x15\n" +
	"\x03min\x18\x03 \x01(\x02H\x02R\x03min\x88\x01\x01\x12\x15\n" +
	"\x03max\x18\x04 \x01(\x02H\x03R\x03max\x88\x01\x01\x12(\n" +
	"\rinclusive_min\x18\x05 \x01(\bH\x04R\finclusiveMin\x88\x01\x01\x12(\n" +
	"\rinclusive_max\x18\x06 \x01(\bH\x05R\finclusiveMax\x88\x01\x01B\b\n" +
	"\x06_boostB\b\n" +
	"\x06_fieldB\x06\n" +
	"\x04_minB\x06\n" +
	"\x04_maxB\x10\n" +
	"\x0e_inclusive_minB\x10\n" +
	"\x0e_inclusive_max\"m\n" +
	"\vPhraseQuery\x12\x19\n" +
	"\x05boost\x18\x01 \x01(\x02H\x00R\x05boost\x88\x01\x01\x12\x19\n" +
	"\x05field\x18\x02 \x01(\tH\x01R\x05field\x88\x01\x01\x12\x14\n" +
	"\x05terms\x18\x03 \x03(\tR\x05termsB\b\n" +
	"\x06_boostB\b\n" +
	"\x06_field\"o\n" +
	"\vPrefixQuery\x12\x19\n" +
	"\x05boost\x18\x01 \x01(\x02H\x00R\x05boost\x88\x01\x01\x12\x19\n" +
	"\x05field\x18\x02 \x01(\tH\x01R\x05field\x88\x01\x01\x12\x16\n" +
	"\x06prefix\x18\x03 \x01(\tR\x06prefixB\b\n" +
	"\x06_boostB\b\n" +
	"\x06_field\"Z\n" +
	"\x10QueryStringQuery\x12\x19\n" +
	"\x05boost\x18\x01 \x01(\x02H\x00R\x05boost\x88\x01\x01\x12!\n" +
	"\fquery_string\x18\x03 \x01(\tR\vqueryStringB\b\n" +
	"\x06_boost\"o\n" +
	"\vRegexpQuery\x12\x19\n" +
	"\x05boost\x18\x01 \x01(\x02H\x00R\x05boost\x88\x01\x01\x12\x19\n" +
	"\x05field\x18\x02 \x01(\tH\x01R\x05field\x88\x01\x01\x12\x16\n" +
	"\x06regexp\x18\x03 \x01(\tR\x06regexpB\b\n" +
	"\x06_boostB\b\n" +
	"\x06_field\"\xd6\x01\n" +
	"\tTermQuery\x12\x19\n" +
	"\x05boost\x18\x01 \x01(\x02H\x00R\x05boost\x88\x01\x01\x12\x19\n" +
	"\x05field\x18\x02 \x01(\tH\x01R\x05field\x88\x01\x01\x12\x12\n" +
	"\x04term\x18\x03 \x01(\tR\x04term\x12!\n" +
	"\tfuzziness\x18\x04 \x01(\x04H\x02R\tfuzziness\x88\x01\x01\x12(\n" +
	"\rprefix_length\x18\x05 \x01(\x04H\x03R\fprefixLength\x88\x01\x01B\b\n" +
	"\x06_boostB\b\n" +
	"\x06_fieldB\f\n" +
	"\n" +
	"_fuzzinessB\x10\n" +
	"\x0e_prefix_length\"\x90\x02\n" +
	"\x0eTermRangeQuery\x12\x19\n" +
	"\x05boost\x18\x01 \x01(\x02H\x00R\x05boost\x88\x01\x01\x12\x19\n" +
	"\x05field\x18\x02 \x01(\tH\x01R\x05field\x88\x01\x01\x12\x15\n" +
	"\x03min\x18\x05 \x01(\tH\x02R\x03min\x88\x01\x01\x12\x15\n" +
	"\x03max\x18\x06 \x01(\tH\x03R\x03max\x88\x01\x01\x12(\n" +
	"\rinclusive_min\x18\a \x01(\bH\x04R\finclusiveMin\x88\x01\x01\x12(\n" +
	"\rinclusive_max\x18\b \x01(\bH\x05R\finclusiveMax\x88\x01\x01B\b\n" +
	"\x06_boostB\b\n" +
	"\x06_fieldB\x06\n" +
	"\x04_minB\x06\n" +
	"\x04_maxB\x10\n" +
	"\x0e_inclusive_minB\x10\n" +
	"\x0e_inclusive_max\"u\n" +
	"\rWildcardQuery\x12\x19\n" +
	"\x05boost\x18\x01 \x01(\x02H\x00R\x05boost\x88\x01\x01\x12\x19\n" +
	"\x05field\x18\x02 \x01(\tH\x01R\x05field\x88\x01\x01\x12\x1a\n" +
	"\bwildcard\x18\x03 \x01(\tR\bwildcardB\b\n" +
	"\x06_boostB\b\n" +
	"\x06_field\"\xa1\r\n" +
	"\x05Query\x12X\n" +
	"\x13boolean_field_query\x18\x01 \x01(\v2&.couchbase.search.v1.BooleanFieldQueryH\x00R\x11booleanFieldQuery\x12H\n" +
	"\rboolean_query\x18\x02 \x01(\v2!.couchbase.search.v1.BooleanQueryH\x00R\fbooleanQuery\x12T\n" +
	"\x11conjunction_query\x18\x03 \x01(\v2%.couchbase.search.v1.ConjunctionQueryH\x00R\x10conjunctionQuery\x12O\n" +
	"\x10date_range_query\x18\x04 \x01(\v2#.couchbase.search.v1.DateRangeQueryH\x00R\x0edateRangeQuery\x12T\n" +
	"\x11disjunction_query\x18\x05 \x01(\v2%.couchbase.search.v1.DisjunctionQueryH\x00R\x10disjunctionQuery\x12C\n" +
	"\fdoc_id_query\x18\x06 \x01(\v2\x1f.couchbase.search.v1.DocIdQueryH\x00R\n" +
	"docIdQuery\x12_\n" +
	"\x16geo_bounding_box_query\x18\a \x01(\v2(.couchbase.search.v1.GeoBoundingBoxQueryH\x00R\x13geoBoundingBoxQuery\x12U\n" +
	"\x12geo_distance_query\x18\b \x01(\v2%.couchbase.search.v1.GeoDistanceQueryH\x00R\x10geoDistanceQuery\x12R\n" +
	"\x11geo_polygon_query\x18\t \x01(\v2$.couchbase.search.v1.GeoPolygonQueryH\x00R\x0fgeoPolygonQuery\x12L\n" +
	"\x0fmatch_all_query\x18\n" +
	" \x01(\v2\".couchbase.search.v1.MatchAllQueryH\x00R\rmatchAllQuery\x12O\n" +
	"\x10match_none_query\x18\v \x01(\v2#.couchbase.search.v1.MatchNoneQueryH\x00R\x0ematchNoneQuery\x12U\n" +
	"\x12match_phrase_query\x18\f \x01(\v2%.couchbase.search.v1.MatchPhraseQueryH\x00R\x10matchPhraseQuery\x12B\n" +
	"\vmatch_query\x18\r \x01(\v2\x1f.couchbase.search.v1.MatchQueryH\x00R\n" +
	"matchQuery\x12X\n" +
	"\x13numeric_range_query\x18\x0e \x01(\v2&.couchbase.search.v1.NumericRangeQueryH\x00R\x11numericRangeQuery\x12E\n" +
	"\fphrase_query\x18\x0f \x01(\v2 .couchbase.search.v1.PhraseQueryH\x00R\vphraseQuery\x12E\n" +
	"\fprefix_query\x18\x10 \x01(\v2 .couchbase.search.v1.PrefixQueryH\x00R\vprefixQuery\x12U\n" +
	"\x12query_string_query\x18\x11 \x01(\v2%.couchbase.search.v1.QueryStringQueryH\x00R\x10queryStringQuery\x12E\n" +
	"\fregexp_query\x18\x12 \x01(\v2 .couchbase.search.v1.RegexpQueryH\x00R\vregexpQuery\x12?\n" +
	"\n" +
	"term_query\x18\x13 \x01(\v2\x1e.couchbase.search.v1.TermQueryH\x00R\ttermQuery\x12O\n" +
	"\x10term_range_query\x18\x14 \x01(\v2#.couchbase.search.v1.TermRangeQueryH\x00R\x0etermRangeQuery\x12K\n" +
	"\x0ewildcard_query\x18\x15 \x01(\v2\".couchbase.search.v1.WildcardQueryH\x00R\rwildcardQueryB\a\n" +
	"\x05query\"\x86\x01\n" +
	"\fFieldSorting\x12\x14\n" +
	"\x05field\x18\x01 \x01(\tR\x05field\x12\x1e\n" +
	"\n" +
	"descending\x18\x02 \x01(\bR\n" +
	"descending\x12\x18\n" +
	"\amissing\x18\x03 \x01(\tR\amissing\x12\x12\n" +
	"\x04mode\x18\x04 \x01(\tR\x04mode\x12\x12\n" +
	"\x04type\x18\x05 \x01(\tR\x04type\"\x93\x01\n" +
	"\x12GeoDistanceSorting\x12\x14\n" +
	"\x05field\x18\x01 \x01(\tR\x05field\x12\x1e\n" +
	"\n" +
	"descending\x18\x02 \x01(\bR\n" +
	"descending\x123\n" +
	"\x06center\x18\x03 \x01(\v2\x1b.couchbase.search.v1.LatLngR\x06center\x12\x12\n" +
	"\x04unit\x18\x04 \x01(\tR\x04unit\"+\n" +
	"\tIdSorting\x12\x1e\n" +
	"\n" +
	"descending\x18\x01 \x01(\bR\n" +
	"descending\".\n" +
	"\fScoreSorting\x12\x1e\n" +
	"\n" +
	"descending\x18\x01 \x01(\bR\n" +
	"descending\"\xc6\x02\n" +
	"\aSorting\x12H\n" +
	"\rfield_sorting\x18\x01 \x01(\v2!.couchbase.search.v1.FieldSortingH\x00R\ffieldSorting\x12[\n" +
	"\x14geo_distance_sorting\x18\x02 \x01(\v2'.couchbase.search.v1.GeoDistanceSortingH\x00R\x12geoDistanceSorting\x12?\n" +
	"\n" +
	"id_sorting\x18\x03 \x01(\v2\x1e.couchbase.search.v1.IdSortingH\x00R\tidSorting\x12H\n" +
	"\rscore_sorting\x18\x04 \x01(\v2!.couchbase.search.v1.ScoreSortingH\x00R\fscoreSortingB\t\n" +
	"\asorting\"c\n" +
	"\tDateRange\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x19\n" +
	"\x05start\x18\x02 \x01(\tH\x00R\x05start\x88\x01\x01\x12\x15\n" +
	"\x03end\x18\x03 \x01(\tH\x01R\x03end\x88\x01\x01B\b\n" +
	"\x06_startB\x06\n" +
	"\x04_end\"{\n" +
	"\x0eDateRangeFacet\x12\x14\n" +
	"\x05field\x18\x01 \x01(\tR\x05field\x12\x12\n" +
	"\x04size\x18\x02 \x01(\rR\x04size\x12?\n" +
	"\vdate_ranges\x18\x03 \x03(\v2\x1e.couchbase.search.v1.DateRangeR\n" +
	"dateRanges\"`\n" +
	"\fNumericRange\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x15\n" +
	"\x03min\x18\x02 \x01(\x02H\x00R\x03min\x88\x01\x01\x12\x15\n" +
	"\x03max\x18\x03 \x01(\x02H\x01R\x03max\x88\x01\x01B\x06\n" +
	"\x04_minB\x06\n" +
	"\x04_max\"\x87\x01\n" +
	"\x11NumericRangeFacet\x12\x14\n" +
	"\x05field\x18\x01 \x01(\tR\x05field\x12\x12\n" +
	"\x04size\x18\x02 \x01(\rR\x04size\x12H\n" +
	"\x0enumeric_ranges\x18\x03 \x03(\v2!.couchbase.search.v1.NumericRangeR\rnumericRanges\"5\n" +
	"\tTermFacet\x12\x14\n" +
	"\x05field\x18\x01 \x01(\tR\x05field\x12\x12\n" +
	"\x04size\x18\x02 \x01(\rR\x04size\"\xfc\x01\n" +
	"\x05Facet\x12O\n" +
	"\x10date_range_facet\x18\x01 \x01(\v2#.couchbase.search.v1.DateRangeFacetH\x00R\x0edateRangeFacet\x12X\n" +
	"\x13numeric_range_facet\x18\x02 \x01(\v2&.couchbase.search.v1.NumericRangeFacetH\x00R\x11numericRangeFacet\x12?\n" +
	"\n" +
	"term_facet\x18\x03 \x01(\v2\x1e.couchbase.search.v1.TermFacetH\x00R\ttermFacetB\a\n" +
	"\x05facet\"k\n" +
	"\bKnnQuery\x12\x14\n" +
	"\x05field\x18\x01 \x01(\tR\x05field\x12\f\n" +
	"\x01k\x18\x02 \x01(\x03R\x01k\x12\x16\n" +
	"\x06vector\x18\x03 \x03(\x02R\x06vector\x12\x19\n" +
	"\x05boost\x18\x04 \x01(\x02H\x00R\x05boost\x88\x01\x01B\b\n" +
	"\x06_boost\"\xa3\t\n" +
	"\x12SearchQueryRequest\x12\x1d\n" +
	"\n" +
	"index_name\x18\x01 \x01(\tR\tindexName\x120\n" +
	"\x05query\x18\x02 \x01(\v2\x1a.couchbase.search.v1.QueryR\x05query\x12b\n" +
	"\x10scan_consistency\x18\x03 \x01(\x0e27.couchbase.search.v1.SearchQueryRequest.ScanConsistencyR\x0fscanConsistency\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\rR\x05limit\x12\x12\n" +
	"\x04skip\x18\x05 \x01(\rR\x04skip\x12/\n" +
	"\x13include_explanation\x18\x06 \x01(\bR\x12includeExplanation\x12_\n" +
	"\x0fhighlight_style\x18\a \x01(\x0e26.couchbase.search.v1.SearchQueryRequest.HighlightStyleR\x0ehighlightStyle\x12)\n" +
	"\x10highlight_fields\x18\b \x03(\tR\x0fhighlightFields\x12\x16\n" +
	"\x06fields\x18\t \x03(\tR\x06fields\x120\n" +
	"\x04sort\x18\n" +
	" \x03(\v2\x1c.couchbase.search.v1.SortingR\x04sort\x12'\n" +
	"\x0fdisable_scoring\x18\v \x01(\bR\x0edisableScoring\x12 \n" +
	"\vcollections\x18\f \x03(\tR\vcollections\x12+\n" +
	"\x11include_locations\x18\r \x01(\bR\x10includeLocations\x12K\n" +
	"\x06facets\x18\x0e \x03(\v23.couchbase.search.v1.SearchQueryRequest.FacetsEntryR\x06facets\x12/\n" +
	"\x03knn\x18\x11 \x03(\v2\x1d.couchbase.search.v1.KnnQueryR\x03knn\x12H\n" +
	"\fknn_operator\x18\x12 \x01(\x0e2 .couchbase.search.v1.KnnOperatorH\x00R\vknnOperator\x88\x01\x01\x12$\n" +
	"\vbucket_name\x18\x0f \x01(\tH\x01R\n" +
	"bucketName\x88\x01\x01\x12\"\n" +
	"\n" +
	"scope_name\x18\x10 \x01(\tH\x02R\tscopeName\x88\x01\x01\x1aU\n" +
	"\vFacetsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x120\n" +
	"\x05value\x18\x02 \x01(\v2\x1a.couchbase.search.v1.FacetR\x05value:\x028\x01\"3\n" +
	"\x0fScanConsistency\x12 \n" +
	"\x1cSCAN_CONSISTENCY_NOT_BOUNDED\x10\x00\"a\n" +
	"\x0eHighlightStyle\x12\x1b\n" +
	"\x17HIGHLIGHT_STYLE_DEFAULT\x10\x00\x12\x18\n" +
	"\x14HIGHLIGHT_STYLE_HTML\x10\x01\x12\x18\n" +
	"\x14HIGHLIGHT_STYLE_ANSI\x10\x02B\x0f\n" +
	"\r_knn_operatorB\x0e\n" +
	"\f_bucket_nameB\r\n" +
	"\v_scope_name\"\xbd\x17\n" +
	"\x13SearchQueryResponse\x12K\n" +
	"\x04hits\x18\x01 \x03(\v27.couchbase.search.v1.SearchQueryResponse.SearchQueryRowR\x04hits\x12L\n" +
	"\x06facets\x18\x02 \x03(\v24.couchbase.search.v1.SearchQueryResponse.FacetsEntryR\x06facets\x12S\n" +
	"\tmeta_data\x18\x03 \x01(\v21.couchbase.search.v1.SearchQueryResponse.MetaDataH\x00R\bmetaData\x88\x01\x01\x1a\xae\x04\n" +
	"\x0eSearchQueryRow\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05score\x18\x02 \x01(\x01R\x05score\x12\x14\n" +
	"\x05index\x18\x03 \x01(\tR\x05index\x12 \n" +
	"\vexplanation\x18\x04 \x01(\fR\vexplanation\x12O\n" +
	"\tlocations\x18\x05 \x03(\v21.couchbase.search.v1.SearchQueryResponse.LocationR\tlocations\x12d\n" +
	"\tfragments\x18\x06 \x03(\v2F.couchbase.search.v1.SearchQueryResponse.SearchQueryRow.FragmentsEntryR\tfragments\x12[\n" +
	"\x06fields\x18\a \x03(\v2C.couchbase.search.v1.SearchQueryResponse.SearchQueryRow.FieldsEntryR\x06fields\x1ao\n" +
	"\x0eFragmentsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12G\n" +
	"\x05value\x18\x02 \x01(\v21.couchbase.search.v1.SearchQueryResponse.FragmentR\x05value:\x028\x01\x1a9\n" +
	"\vFieldsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01\x1a\xa1\x01\n" +
	"\bLocation\x12\x14\n" +
	"\x05field\x18\x01 \x01(\tR\x05field\x12\x12\n" +
	"\x04term\x18\x02 \x01(\tR\x04term\x12\x1a\n" +
	"\bposition\x18\x03 \x01(\rR\bposition\x12\x14\n" +
	"\x05start\x18\x04 \x01(\rR\x05start\x12\x10\n" +
	"\x03end\x18\x05 \x01(\rR\x03end\x12'\n" +
	"\x0farray_positions\x18\x06 \x03(\rR\x0earrayPositions\x1a$\n" +
	"\bFragment\x12\x18\n" +
	"\acontent\x18\x01 \x03(\tR\acontent\x1a\xd7\x02\n" +
	"\vFacetResult\x12Y\n" +
	"\n" +
	"term_facet\x18\x01 \x01(\v28.couchbase.search.v1.SearchQueryResponse.TermFacetResultH\x00R\ttermFacet\x12i\n" +
	"\x10date_range_facet\x18\x02 \x01(\v2=.couchbase.search.v1.SearchQueryResponse.DateRangeFacetResultH\x00R\x0edateRangeFacet\x12r\n" +
	"\x13numeric_range_facet\x18\x03 \x01(\v2@.couchbase.search.v1.SearchQueryResponse.NumericRangeFacetResultH\x00R\x11numericRangeFacetB\x0e\n" +
	"\fsearch_facet\x1aJ\n" +
	"\n" +
	"TermResult\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05field\x18\x02 \x01(\tR\x05field\x12\x12\n" +
	"\x04size\x18\x03 \x01(\x04R\x04size\x1a\xbe\x01\n" +
	"\x0fTermFacetResult\x12\x14\n" +
	"\x05field\x18\x02 \x01(\tR\x05field\x12\x14\n" +
	"\x05total\x18\x03 \x01(\x03R\x05total\x12\x18\n" +
	"\amissing\x18\x04 \x01(\x03R\amissing\x12\x14\n" +
	"\x05other\x18\x05 \x01(\x03R\x05other\x12I\n" +
	"\x05terms\x18\x06 \x03(\v23.couchbase.search.v1.SearchQueryResponse.TermResultR\x05termsJ\x04\b\x01\x10\x02\x1a\x99\x01\n" +
	"\x0fDateRangeResult\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04size\x18\x02 \x01(\x04R\x04size\x120\n" +
	"\x05start\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x05start\x12,\n" +
	"\x03end\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x03end\x1a\xd3\x01\n" +
	"\x14DateRangeFacetResult\x12\x14\n" +
	"\x05field\x18\x02 \x01(\tR\x05field\x12\x14\n" +
	"\x05total\x18\x03 \x01(\x03R\x05total\x12\x18\n" +
	"\amissing\x18\x04 \x01(\x03R\amissing\x12\x14\n" +
	"\x05other\x18\x05 \x01(\x03R\x05other\x12Y\n" +
	"\vdate_ranges\x18\x06 \x03(\v28.couchbase.search.v1.SearchQueryResponse.DateRangeResultR\n" +
	"dateRangesJ\x04\b\x01\x10\x02\x1a`\n" +
	"\x12NumericRangeResult\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04size\x18\x02 \x01(\x04R\x04size\x12\x10\n" +
	"\x03min\x18\x03 \x01(\x04R\x03min\x12\x10\n" +
	"\x03max\x18\x04 \x01(\x04R\x03max\x1a\xdf\x01\n" +
	"\x17NumericRangeFacetResult\x12\x14\n" +
	"\x05field\x18\x02 \x01(\tR\x05field\x12\x14\n" +
	"\x05total\x18\x03 \x01(\x03R\x05total\x12\x18\n" +
	"\amissing\x18\x04 \x01(\x03R\amissing\x12\x14\n" +
	"\x05other\x18\x05 \x01(\x03R\x05other\x12b\n" +
	"\x0enumeric_ranges\x18\x06 \x03(\v2;.couchbase.search.v1.SearchQueryResponse.NumericRangeResultR\rnumericRangesJ\x04\b\x01\x10\x02\x1a\xee\x01\n" +
	"\bMetaData\x12P\n" +
	"\ametrics\x18\x01 \x01(\v26.couchbase.search.v1.SearchQueryResponse.SearchMetricsR\ametrics\x12U\n" +
	"\x06errors\x18\x02 \x03(\v2=.couchbase.search.v1.SearchQueryResponse.MetaData.ErrorsEntryR\x06errors\x1a9\n" +
	"\vErrorsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a\xad\x02\n" +
	"\rSearchMetrics\x12@\n" +
	"\x0eexecution_time\x18\x01 \x01(\v2\x19.google.protobuf.DurationR\rexecutionTime\x12\x1d\n" +
	"\n" +
	"total_rows\x18\x02 \x01(\x04R\ttotalRows\x12\x1b\n" +
	"\tmax_score\x18\x03 \x01(\x01R\bmaxScore\x122\n" +
	"\x15total_partition_count\x18\x04 \x01(\x04R\x13totalPartitionCount\x126\n" +
	"\x17success_partition_count\x18\x05 \x01(\x04R\x15successPartitionCount\x122\n" +
	"\x15error_partition_count\x18\x06 \x01(\x04R\x13errorPartitionCount\x1ao\n" +
	"\vFacetsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12J\n" +
	"\x05value\x18\x02 \x01(\v24.couchbase.search.v1.SearchQueryResponse.FacetResultR\x05value:\x028\x01B\f\n" +
	"\n" +
	"_meta_data*8\n" +
	"\vKnnOperator\x12\x13\n" +
	"\x0fKNN_OPERATOR_OR\x10\x00\x12\x14\n" +
	"\x10KNN_OPERATOR_AND\x10\x012u\n" +
	"\rSearchService\x12d\n" +
	"\vSearchQuery\x12'.couchbase.search.v1.SearchQueryRequest\x1a(.couchbase.search.v1.SearchQueryResponse\"\x000\x01B\xf2\x01\n" +
	"+com.couchbase.client.protostellar.search.v1P\x01Z@github.com/couchbase/goprotostellar/genproto/search_v1;search_v1\xaa\x02 Couchbase.Protostellar.Search.V1\xca\x02*Couchbase\\Protostellar\\Generated\\Search\\V1\xea\x02.Couchbase::Protostellar::Generated::Search::V1b\x06proto3"

var (
	file_couchbase_search_v1_search_proto_rawDescOnce sync.Once
	file_couchbase_search_v1_search_proto_rawDescData []byte
)

func file_couchbase_search_v1_search_proto_rawDescGZIP() []byte {
	file_couchbase_search_v1_search_proto_rawDescOnce.Do(func() {
		file_couchbase_search_v1_search_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_couchbase_search_v1_search_proto_rawDesc), len(file_couchbase_search_v1_search_proto_rawDesc)))
	})
	return file_couchbase_search_v1_search_proto_rawDescData
}

var file_couchbase_search_v1_search_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_couchbase_search_v1_search_proto_msgTypes = make([]protoimpl.MessageInfo, 54)
var file_couchbase_search_v1_search_proto_goTypes = []any{
	(KnnOperator)(0),                                    // 0: couchbase.search.v1.KnnOperator
	(MatchQuery_Operator)(0),                            // 1: couchbase.search.v1.MatchQuery.Operator
	(SearchQueryRequest_ScanConsistency)(0),             // 2: couchbase.search.v1.SearchQueryRequest.ScanConsistency
	(SearchQueryRequest_HighlightStyle)(0),              // 3: couchbase.search.v1.SearchQueryRequest.HighlightStyle
	(*BooleanFieldQuery)(nil),                           // 4: couchbase.search.v1.BooleanFieldQuery
	(*BooleanQuery)(nil),                                // 5: couchbase.search.v1.BooleanQuery
	(*ConjunctionQuery)(nil),                            // 6: couchbase.search.v1.ConjunctionQuery
	(*DateRangeQuery)(nil),                              // 7: couchbase.search.v1.DateRangeQuery
	(*DisjunctionQuery)(nil),                            // 8: couchbase.search.v1.DisjunctionQuery
	(*DocIdQuery)(nil),                                  // 9: couchbase.search.v1.DocIdQuery
	(*LatLng)(nil),                                      // 10: couchbase.search.v1.LatLng
	(*GeoBoundingBoxQuery)(nil),                         // 11: couchbase.search.v1.GeoBoundingBoxQuery
	(*GeoDistanceQuery)(nil),                            // 12: couchbase.search.v1.GeoDistanceQuery
	(*GeoPolygonQuery)(nil),                             // 13: couchbase.search.v1.GeoPolygonQuery
	(*MatchAllQuery)(nil),                               // 14: couchbase.search.v1.MatchAllQuery
	(*MatchNoneQuery)(nil),                              // 15: couchbase.search.v1.MatchNoneQuery
	(*MatchPhraseQuery)(nil),                            // 16: couchbase.search.v1.MatchPhraseQuery
	(*MatchQuery)(nil),                                  // 17: couchbase.search.v1.MatchQuery
	(*NumericRangeQuery)(nil),                           // 18: couchbase.search.v1.NumericRangeQuery
	(*PhraseQuery)(nil),                                 // 19: couchbase.search.v1.PhraseQuery
	(*PrefixQuery)(nil),                                 // 20: couchbase.search.v1.PrefixQuery
	(*QueryStringQuery)(nil),                            // 21: couchbase.search.v1.QueryStringQuery
	(*RegexpQuery)(nil),                                 // 22: couchbase.search.v1.RegexpQuery
	(*TermQuery)(nil),                                   // 23: couchbase.search.v1.TermQuery
	(*TermRangeQuery)(nil),                              // 24: couchbase.search.v1.TermRangeQuery
	(*WildcardQuery)(nil),                               // 25: couchbase.search.v1.WildcardQuery
	(*Query)(nil),                                       // 26: couchbase.search.v1.Query
	(*FieldSorting)(nil),                                // 27: couchbase.search.v1.FieldSorting
	(*GeoDistanceSorting)(nil),                          // 28: couchbase.search.v1.GeoDistanceSorting
	(*IdSorting)(nil),                                   // 29: couchbase.search.v1.IdSorting
	(*ScoreSorting)(nil),                                // 30: couchbase.search.v1.ScoreSorting
	(*Sorting)(nil),                                     // 31: couchbase.search.v1.Sorting
	(*DateRange)(nil),                                   // 32: couchbase.search.v1.DateRange
	(*DateRangeFacet)(nil),                              // 33: couchbase.search.v1.DateRangeFacet
	(*NumericRange)(nil),                                // 34: couchbase.search.v1.NumericRange
	(*NumericRangeFacet)(nil),                           // 35: couchbase.search.v1.NumericRangeFacet
	(*TermFacet)(nil),                                   // 36: couchbase.search.v1.TermFacet
	(*Facet)(nil),                                       // 37: couchbase.search.v1.Facet
	(*KnnQuery)(nil),                                    // 38: couchbase.search.v1.KnnQuery
	(*SearchQueryRequest)(nil),                          // 39: couchbase.search.v1.SearchQueryRequest
	(*SearchQueryResponse)(nil),                         // 40: couchbase.search.v1.SearchQueryResponse
	nil,                                                 // 41: couchbase.search.v1.SearchQueryRequest.FacetsEntry
	(*SearchQueryResponse_SearchQueryRow)(nil),          // 42: couchbase.search.v1.SearchQueryResponse.SearchQueryRow
	(*SearchQueryResponse_Location)(nil),                // 43: couchbase.search.v1.SearchQueryResponse.Location
	(*SearchQueryResponse_Fragment)(nil),                // 44: couchbase.search.v1.SearchQueryResponse.Fragment
	(*SearchQueryResponse_FacetResult)(nil),             // 45: couchbase.search.v1.SearchQueryResponse.FacetResult
	(*SearchQueryResponse_TermResult)(nil),              // 46: couchbase.search.v1.SearchQueryResponse.TermResult
	(*SearchQueryResponse_TermFacetResult)(nil),         // 47: couchbase.search.v1.SearchQueryResponse.TermFacetResult
	(*SearchQueryResponse_DateRangeResult)(nil),         // 48: couchbase.search.v1.SearchQueryResponse.DateRangeResult
	(*SearchQueryResponse_DateRangeFacetResult)(nil),    // 49: couchbase.search.v1.SearchQueryResponse.DateRangeFacetResult
	(*SearchQueryResponse_NumericRangeResult)(nil),      // 50: couchbase.search.v1.SearchQueryResponse.NumericRangeResult
	(*SearchQueryResponse_NumericRangeFacetResult)(nil), // 51: couchbase.search.v1.SearchQueryResponse.NumericRangeFacetResult
	(*SearchQueryResponse_MetaData)(nil),                // 52: couchbase.search.v1.SearchQueryResponse.MetaData
	(*SearchQueryResponse_SearchMetrics)(nil),           // 53: couchbase.search.v1.SearchQueryResponse.SearchMetrics
	nil,                           // 54: couchbase.search.v1.SearchQueryResponse.FacetsEntry
	nil,                           // 55: couchbase.search.v1.SearchQueryResponse.SearchQueryRow.FragmentsEntry
	nil,                           // 56: couchbase.search.v1.SearchQueryResponse.SearchQueryRow.FieldsEntry
	nil,                           // 57: couchbase.search.v1.SearchQueryResponse.MetaData.ErrorsEntry
	(*timestamppb.Timestamp)(nil), // 58: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),   // 59: google.protobuf.Duration
}
var file_couchbase_search_v1_search_proto_depIdxs = []int32{
	6,  // 0: couchbase.search.v1.BooleanQuery.must:type_name -> couchbase.search.v1.ConjunctionQuery
	8,  // 1: couchbase.search.v1.BooleanQuery.must_not:type_name -> couchbase.search.v1.DisjunctionQuery
	8,  // 2: couchbase.search.v1.BooleanQuery.should:type_name -> couchbase.search.v1.DisjunctionQuery
	26, // 3: couchbase.search.v1.ConjunctionQuery.queries:type_name -> couchbase.search.v1.Query
	26, // 4: couchbase.search.v1.DisjunctionQuery.queries:type_name -> couchbase.search.v1.Query
	10, // 5: couchbase.search.v1.GeoBoundingBoxQuery.top_left:type_name -> couchbase.search.v1.LatLng
	10, // 6: couchbase.search.v1.GeoBoundingBoxQuery.bottom_right:type_name -> couchbase.search.v1.LatLng
	10, // 7: couchbase.search.v1.GeoDistanceQuery.center:type_name -> couchbase.search.v1.LatLng
	10, // 8: couchbase.search.v1.GeoPolygonQuery.vertices:type_name -> couchbase.search.v1.LatLng
	1,  // 9: couchbase.search.v1.MatchQuery.operator:type_name -> couchbase.search.v1.MatchQuery.Operator
	4,  // 10: couchbase.search.v1.Query.boolean_field_query:type_name -> couchbase.search.v1.BooleanFieldQuery
	5,  // 11: couchbase.search.v1.Query.boolean_query:type_name -> couchbase.search.v1.BooleanQuery
	6,  // 12: couchbase.search.v1.Query.conjunction_query:type_name -> couchbase.search.v1.ConjunctionQuery
	7,  // 13: couchbase.search.v1.Query.date_range_query:type_name -> couchbase.search.v1.DateRangeQuery
	8,  // 14: couchbase.search.v1.Query.disjunction_query:type_name -> couchbase.search.v1.DisjunctionQuery
	9,  // 15: couchbase.search.v1.Query.doc_id_query:type_name -> couchbase.search.v1.DocIdQuery
	11, // 16: couchbase.search.v1.Query.geo_bounding_box_query:type_name -> couchbase.search.v1.GeoBoundingBoxQuery
	12, // 17: couchbase.search.v1.Query.geo_distance_query:type_name -> couchbase.search.v1.GeoDistanceQuery
	13, // 18: couchbase.search.v1.Query.geo_polygon_query:type_name -> couchbase.search.v1.GeoPolygonQuery
	14, // 19: couchbase.search.v1.Query.match_all_query:type_name -> couchbase.search.v1.MatchAllQuery
	15, // 20: couchbase.search.v1.Query.match_none_query:type_name -> couchbase.search.v1.MatchNoneQuery
	16, // 21: couchbase.search.v1.Query.match_phrase_query:type_name -> couchbase.search.v1.MatchPhraseQuery
	17, // 22: couchbase.search.v1.Query.match_query:type_name -> couchbase.search.v1.MatchQuery
	18, // 23: couchbase.search.v1.Query.numeric_range_query:type_name -> couchbase.search.v1.NumericRangeQuery
	19, // 24: couchbase.search.v1.Query.phrase_query:type_name -> couchbase.search.v1.PhraseQuery
	20, // 25: couchbase.search.v1.Query.prefix_query:type_name -> couchbase.search.v1.PrefixQuery
	21, // 26: couchbase.search.v1.Query.query_string_query:type_name -> couchbase.search.v1.QueryStringQuery
	22, // 27: couchbase.search.v1.Query.regexp_query:type_name -> couchbase.search.v1.RegexpQuery
	23, // 28: couchbase.search.v1.Query.term_query:type_name -> couchbase.search.v1.TermQuery
	24, // 29: couchbase.search.v1.Query.term_range_query:type_name -> couchbase.search.v1.TermRangeQuery
	25, // 30: couchbase.search.v1.Query.wildcard_query:type_name -> couchbase.search.v1.WildcardQuery
	10, // 31: couchbase.search.v1.GeoDistanceSorting.center:type_name -> couchbase.search.v1.LatLng
	27, // 32: couchbase.search.v1.Sorting.field_sorting:type_name -> couchbase.search.v1.FieldSorting
	28, // 33: couchbase.search.v1.Sorting.geo_distance_sorting:type_name -> couchbase.search.v1.GeoDistanceSorting
	29, // 34: couchbase.search.v1.Sorting.id_sorting:type_name -> couchbase.search.v1.IdSorting
	30, // 35: couchbase.search.v1.Sorting.score_sorting:type_name -> couchbase.search.v1.ScoreSorting
	32, // 36: couchbase.search.v1.DateRangeFacet.date_ranges:type_name -> couchbase.search.v1.DateRange
	34, // 37: couchbase.search.v1.NumericRangeFacet.numeric_ranges:type_name -> couchbase.search.v1.NumericRange
	33, // 38: couchbase.search.v1.Facet.date_range_facet:type_name -> couchbase.search.v1.DateRangeFacet
	35, // 39: couchbase.search.v1.Facet.numeric_range_facet:type_name -> couchbase.search.v1.NumericRangeFacet
	36, // 40: couchbase.search.v1.Facet.term_facet:type_name -> couchbase.search.v1.TermFacet
	26, // 41: couchbase.search.v1.SearchQueryRequest.query:type_name -> couchbase.search.v1.Query
	2,  // 42: couchbase.search.v1.SearchQueryRequest.scan_consistency:type_name -> couchbase.search.v1.SearchQueryRequest.ScanConsistency
	3,  // 43: couchbase.search.v1.SearchQueryRequest.highlight_style:type_name -> couchbase.search.v1.SearchQueryRequest.HighlightStyle
	31, // 44: couchbase.search.v1.SearchQueryRequest.sort:type_name -> couchbase.search.v1.Sorting
	41, // 45: couchbase.search.v1.SearchQueryRequest.facets:type_name -> couchbase.search.v1.SearchQueryRequest.FacetsEntry
	38, // 46: couchbase.search.v1.SearchQueryRequest.knn:type_name -> couchbase.search.v1.KnnQuery
	0,  // 47: couchbase.search.v1.SearchQueryRequest.knn_operator:type_name -> couchbase.search.v1.KnnOperator
	42, // 48: couchbase.search.v1.SearchQueryResponse.hits:type_name -> couchbase.search.v1.SearchQueryResponse.SearchQueryRow
	54, // 49: couchbase.search.v1.SearchQueryResponse.facets:type_name -> couchbase.search.v1.SearchQueryResponse.FacetsEntry
	52, // 50: couchbase.search.v1.SearchQueryResponse.meta_data:type_name -> couchbase.search.v1.SearchQueryResponse.MetaData
	37, // 51: couchbase.search.v1.SearchQueryRequest.FacetsEntry.value:type_name -> couchbase.search.v1.Facet
	43, // 52: couchbase.search.v1.SearchQueryResponse.SearchQueryRow.locations:type_name -> couchbase.search.v1.SearchQueryResponse.Location
	55, // 53: couchbase.search.v1.SearchQueryResponse.SearchQueryRow.fragments:type_name -> couchbase.search.v1.SearchQueryResponse.SearchQueryRow.FragmentsEntry
	56, // 54: couchbase.search.v1.SearchQueryResponse.SearchQueryRow.fields:type_name -> couchbase.search.v1.SearchQueryResponse.SearchQueryRow.FieldsEntry
	47, // 55: couchbase.search.v1.SearchQueryResponse.FacetResult.term_facet:type_name -> couchbase.search.v1.SearchQueryResponse.TermFacetResult
	49, // 56: couchbase.search.v1.SearchQueryResponse.FacetResult.date_range_facet:type_name -> couchbase.search.v1.SearchQueryResponse.DateRangeFacetResult
	51, // 57: couchbase.search.v1.SearchQueryResponse.FacetResult.numeric_range_facet:type_name -> couchbase.search.v1.SearchQueryResponse.NumericRangeFacetResult
	46, // 58: couchbase.search.v1.SearchQueryResponse.TermFacetResult.terms:type_name -> couchbase.search.v1.SearchQueryResponse.TermResult
	58, // 59: couchbase.search.v1.SearchQueryResponse.DateRangeResult.start:type_name -> google.protobuf.Timestamp
	58, // 60: couchbase.search.v1.SearchQueryResponse.DateRangeResult.end:type_name -> google.protobuf.Timestamp
	48, // 61: couchbase.search.v1.SearchQueryResponse.DateRangeFacetResult.date_ranges:type_name -> couchbase.search.v1.SearchQueryResponse.DateRangeResult
	50, // 62: couchbase.search.v1.SearchQueryResponse.NumericRangeFacetResult.numeric_ranges:type_name -> couchbase.search.v1.SearchQueryResponse.NumericRangeResult
	53, // 63: couchbase.search.v1.SearchQueryResponse.MetaData.metrics:type_name -> couchbase.search.v1.SearchQueryResponse.SearchMetrics
	57, // 64: couchbase.search.v1.SearchQueryResponse.MetaData.errors:type_name -> couchbase.search.v1.SearchQueryResponse.MetaData.ErrorsEntry
	59, // 65: couchbase.search.v1.SearchQueryResponse.SearchMetrics.execution_time:type_name -> google.protobuf.Duration
	45, // 66: couchbase.search.v1.SearchQueryResponse.FacetsEntry.value:type_name -> couchbase.search.v1.SearchQueryResponse.FacetResult
	44, // 67: couchbase.search.v1.SearchQueryResponse.SearchQueryRow.FragmentsEntry.value:type_name -> couchbase.search.v1.SearchQueryResponse.Fragment
	39, // 68: couchbase.search.v1.SearchService.SearchQuery:input_type -> couchbase.search.v1.SearchQueryRequest
	40, // 69: couchbase.search.v1.SearchService.SearchQuery:output_type -> couchbase.search.v1.SearchQueryResponse
	69, // [69:70] is the sub-list for method output_type
	68, // [68:69] is the sub-list for method input_type
	68, // [68:68] is the sub-list for extension type_name
	68, // [68:68] is the sub-list for extension extendee
	0,  // [0:68] is the sub-list for field type_name
}

func init() { file_couchbase_search_v1_search_proto_init() }
func file_couchbase_search_v1_search_proto_init() {
	if File_couchbase_search_v1_search_proto != nil {
		return
	}
	file_couchbase_search_v1_search_proto_msgTypes[0].OneofWrappers = []any{}
	file_couchbase_search_v1_search_proto_msgTypes[1].OneofWrappers = []any{}
	file_couchbase_search_v1_search_proto_msgTypes[2].OneofWrappers = []any{}
	file_couchbase_search_v1_search_proto_msgTypes[3].OneofWrappers = []any{}
	file_couchbase_search_v1_search_proto_msgTypes[4].OneofWrappers = []any{}
	file_couchbase_search_v1_search_proto_msgTypes[5].OneofWrappers = []any{}
	file_couchbase_search_v1_search_proto_msgTypes[7].OneofWrappers = []any{}
	file_couchbase_search_v1_search_proto_msgTypes[8].OneofWrappers = []any{}
	file_couchbase_search_v1_search_proto_msgTypes[9].OneofWrappers = []any{}
	file_couchbase_search_v1_search_proto_msgTypes[12].OneofWrappers = []any{}
	file_couchbase_search_v1_search_proto_msgTypes[13].OneofWrappers = []any{}
	file_couchbase_search_v1_search_proto_msgTypes[14].OneofWrappers = []any{}
	file_couchbase_search_v1_search_proto_msgTypes[15].OneofWrappers = []any{}
	file_couchbase_search_v1_search_proto_msgTypes[16].OneofWrappers = []any{}
	file_couchbase_search_v1_search_proto_msgTypes[17].OneofWrappers = []any{}
	file_couchbase_search_v1_search_proto_msgTypes[18].OneofWrappers = []any{}
	file_couchbase_search_v1_search_proto_msgTypes[19].OneofWrappers = []any{}
	file_couchbase_search_v1_search_proto_msgTypes[20].OneofWrappers = []any{}
	file_couchbase_search_v1_search_proto_msgTypes[21].OneofWrappers = []any{}
	file_couchbase_search_v1_search_proto_msgTypes[22].OneofWrappers = []any{
		(*Query_BooleanFieldQuery)(nil),
		(*Query_BooleanQuery)(nil),
		(*Query_ConjunctionQuery)(nil),
		(*Query_DateRangeQuery)(nil),
		(*Query_DisjunctionQuery)(nil),
		(*Query_DocIdQuery)(nil),
		(*Query_GeoBoundingBoxQuery)(nil),
		(*Query_GeoDistanceQuery)(nil),
		(*Query_GeoPolygonQuery)(nil),
		(*Query_MatchAllQuery)(nil),
		(*Query_MatchNoneQuery)(nil),
		(*Query_MatchPhraseQuery)(nil),
		(*Query_MatchQuery)(nil),
		(*Query_NumericRangeQuery)(nil),
		(*Query_PhraseQuery)(nil),
		(*Query_PrefixQuery)(nil),
		(*Query_QueryStringQuery)(nil),
		(*Query_RegexpQuery)(nil),
		(*Query_TermQuery)(nil),
		(*Query_TermRangeQuery)(nil),
		(*Query_WildcardQuery)(nil),
	}
	file_couchbase_search_v1_search_proto_msgTypes[27].OneofWrappers = []any{
		(*Sorting_FieldSorting)(nil),
		(*Sorting_GeoDistanceSorting)(nil),
		(*Sorting_IdSorting)(nil),
		(*Sorting_ScoreSorting)(nil),
	}
	file_couchbase_search_v1_search_proto_msgTypes[28].OneofWrappers = []any{}
	file_couchbase_search_v1_search_proto_msgTypes[30].OneofWrappers = []any{}
	file_couchbase_search_v1_search_proto_msgTypes[33].OneofWrappers = []any{
		(*Facet_DateRangeFacet)(nil),
		(*Facet_NumericRangeFacet)(nil),
		(*Facet_TermFacet)(nil),
	}
	file_couchbase_search_v1_search_proto_msgTypes[34].OneofWrappers = []any{}
	file_couchbase_search_v1_search_proto_msgTypes[35].OneofWrappers = []any{}
	file_couchbase_search_v1_search_proto_msgTypes[36].OneofWrappers = []any{}
	file_couchbase_search_v1_search_proto_msgTypes[41].OneofWrappers = []any{
		(*SearchQueryResponse_FacetResult_TermFacet)(nil),
		(*SearchQueryResponse_FacetResult_DateRangeFacet)(nil),
		(*SearchQueryResponse_FacetResult_NumericRangeFacet)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_couchbase_search_v1_search_proto_rawDesc), len(file_couchbase_search_v1_search_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   54,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_couchbase_search_v1_search_proto_goTypes,
		DependencyIndexes: file_couchbase_search_v1_search_proto_depIdxs,
		EnumInfos:         file_couchbase_search_v1_search_proto_enumTypes,
		MessageInfos:      file_couchbase_search_v1_search_proto_msgTypes,
	}.Build()
	File_couchbase_search_v1_search_proto = out.File
	file_couchbase_search_v1_search_proto_goTypes = nil
	file_couchbase_search_v1_search_proto_depIdxs = nil
}
