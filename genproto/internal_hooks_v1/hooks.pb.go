// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: couchbase/internal/hooks/v1/hooks.proto

package internal_hooks_v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ComparisonOperator int32

const (
	ComparisonOperator_COMPARISON_OPERATOR_EQUAL                 ComparisonOperator = 0
	ComparisonOperator_COMPARISON_OPERATOR_NOT_EQUAL             ComparisonOperator = 1
	ComparisonOperator_COMPARISON_OPERATOR_GREATER_THAN          ComparisonOperator = 2
	ComparisonOperator_COMPARISON_OPERATOR_GREATER_THAN_OR_EQUAL ComparisonOperator = 3
	ComparisonOperator_COMPARISON_OPERATOR_LESS_THAN             ComparisonOperator = 4
	ComparisonOperator_COMPARISON_OPERATOR_LESS_THAN_OR_EQUAL    ComparisonOperator = 5
)

// Enum value maps for ComparisonOperator.
var (
	ComparisonOperator_name = map[int32]string{
		0: "COMPARISON_OPERATOR_EQUAL",
		1: "COMPARISON_OPERATOR_NOT_EQUAL",
		2: "COMPARISON_OPERATOR_GREATER_THAN",
		3: "COMPARISON_OPERATOR_GREATER_THAN_OR_EQUAL",
		4: "COMPARISON_OPERATOR_LESS_THAN",
		5: "COMPARISON_OPERATOR_LESS_THAN_OR_EQUAL",
	}
	ComparisonOperator_value = map[string]int32{
		"COMPARISON_OPERATOR_EQUAL":                 0,
		"COMPARISON_OPERATOR_NOT_EQUAL":             1,
		"COMPARISON_OPERATOR_GREATER_THAN":          2,
		"COMPARISON_OPERATOR_GREATER_THAN_OR_EQUAL": 3,
		"COMPARISON_OPERATOR_LESS_THAN":             4,
		"COMPARISON_OPERATOR_LESS_THAN_OR_EQUAL":    5,
	}
)

func (x ComparisonOperator) Enum() *ComparisonOperator {
	p := new(ComparisonOperator)
	*p = x
	return p
}

func (x ComparisonOperator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ComparisonOperator) Descriptor() protoreflect.EnumDescriptor {
	return file_couchbase_internal_hooks_v1_hooks_proto_enumTypes[0].Descriptor()
}

func (ComparisonOperator) Type() protoreflect.EnumType {
	return &file_couchbase_internal_hooks_v1_hooks_proto_enumTypes[0]
}

func (x ComparisonOperator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ComparisonOperator.Descriptor instead.
func (ComparisonOperator) EnumDescriptor() ([]byte, []int) {
	return file_couchbase_internal_hooks_v1_hooks_proto_rawDescGZIP(), []int{0}
}

type CreateHooksContextRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateHooksContextRequest) Reset() {
	*x = CreateHooksContextRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateHooksContextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHooksContextRequest) ProtoMessage() {}

func (x *CreateHooksContextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHooksContextRequest.ProtoReflect.Descriptor instead.
func (*CreateHooksContextRequest) Descriptor() ([]byte, []int) {
	return file_couchbase_internal_hooks_v1_hooks_proto_rawDescGZIP(), []int{0}
}

func (x *CreateHooksContextRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CreateHooksContextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateHooksContextResponse) Reset() {
	*x = CreateHooksContextResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateHooksContextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHooksContextResponse) ProtoMessage() {}

func (x *CreateHooksContextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHooksContextResponse.ProtoReflect.Descriptor instead.
func (*CreateHooksContextResponse) Descriptor() ([]byte, []int) {
	return file_couchbase_internal_hooks_v1_hooks_proto_rawDescGZIP(), []int{1}
}

type DestroyHooksContextRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DestroyHooksContextRequest) Reset() {
	*x = DestroyHooksContextRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DestroyHooksContextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroyHooksContextRequest) ProtoMessage() {}

func (x *DestroyHooksContextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroyHooksContextRequest.ProtoReflect.Descriptor instead.
func (*DestroyHooksContextRequest) Descriptor() ([]byte, []int) {
	return file_couchbase_internal_hooks_v1_hooks_proto_rawDescGZIP(), []int{2}
}

func (x *DestroyHooksContextRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DestroyHooksContextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DestroyHooksContextResponse) Reset() {
	*x = DestroyHooksContextResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DestroyHooksContextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroyHooksContextResponse) ProtoMessage() {}

func (x *DestroyHooksContextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroyHooksContextResponse.ProtoReflect.Descriptor instead.
func (*DestroyHooksContextResponse) Descriptor() ([]byte, []int) {
	return file_couchbase_internal_hooks_v1_hooks_proto_rawDescGZIP(), []int{3}
}

type ValueRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//
	//	*ValueRef_RequestField
	//	*ValueRef_CounterValue
	//	*ValueRef_JsonValue
	Value isValueRef_Value `protobuf_oneof:"value"`
}

func (x *ValueRef) Reset() {
	*x = ValueRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValueRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValueRef) ProtoMessage() {}

func (x *ValueRef) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValueRef.ProtoReflect.Descriptor instead.
func (*ValueRef) Descriptor() ([]byte, []int) {
	return file_couchbase_internal_hooks_v1_hooks_proto_rawDescGZIP(), []int{4}
}

func (m *ValueRef) GetValue() isValueRef_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *ValueRef) GetRequestField() string {
	if x, ok := x.GetValue().(*ValueRef_RequestField); ok {
		return x.RequestField
	}
	return ""
}

func (x *ValueRef) GetCounterValue() string {
	if x, ok := x.GetValue().(*ValueRef_CounterValue); ok {
		return x.CounterValue
	}
	return ""
}

func (x *ValueRef) GetJsonValue() []byte {
	if x, ok := x.GetValue().(*ValueRef_JsonValue); ok {
		return x.JsonValue
	}
	return nil
}

type isValueRef_Value interface {
	isValueRef_Value()
}

type ValueRef_RequestField struct {
	RequestField string `protobuf:"bytes,1,opt,name=request_field,json=requestField,proto3,oneof"`
}

type ValueRef_CounterValue struct {
	CounterValue string `protobuf:"bytes,2,opt,name=counter_value,json=counterValue,proto3,oneof"`
}

type ValueRef_JsonValue struct {
	JsonValue []byte `protobuf:"bytes,3,opt,name=json_value,json=jsonValue,proto3,oneof"`
}

func (*ValueRef_RequestField) isValueRef_Value() {}

func (*ValueRef_CounterValue) isValueRef_Value() {}

func (*ValueRef_JsonValue) isValueRef_Value() {}

type HookCondition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Left  *ValueRef          `protobuf:"bytes,1,opt,name=left,proto3" json:"left,omitempty"`
	Op    ComparisonOperator `protobuf:"varint,2,opt,name=op,proto3,enum=couchbase.internal.hooks.v1.ComparisonOperator" json:"op,omitempty"`
	Right *ValueRef          `protobuf:"bytes,3,opt,name=right,proto3" json:"right,omitempty"`
}

func (x *HookCondition) Reset() {
	*x = HookCondition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HookCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HookCondition) ProtoMessage() {}

func (x *HookCondition) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HookCondition.ProtoReflect.Descriptor instead.
func (*HookCondition) Descriptor() ([]byte, []int) {
	return file_couchbase_internal_hooks_v1_hooks_proto_rawDescGZIP(), []int{5}
}

func (x *HookCondition) GetLeft() *ValueRef {
	if x != nil {
		return x.Left
	}
	return nil
}

func (x *HookCondition) GetOp() ComparisonOperator {
	if x != nil {
		return x.Op
	}
	return ComparisonOperator_COMPARISON_OPERATOR_EQUAL
}

func (x *HookCondition) GetRight() *ValueRef {
	if x != nil {
		return x.Right
	}
	return nil
}

type HookAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Action:
	//
	//	*HookAction_If_
	//	*HookAction_Counter_
	//	*HookAction_WaitOnBarrier_
	//	*HookAction_SignalBarrier_
	//	*HookAction_ReturnResponse_
	//	*HookAction_ReturnError_
	//	*HookAction_Execute_
	Action isHookAction_Action `protobuf_oneof:"action"`
}

func (x *HookAction) Reset() {
	*x = HookAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HookAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HookAction) ProtoMessage() {}

func (x *HookAction) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HookAction.ProtoReflect.Descriptor instead.
func (*HookAction) Descriptor() ([]byte, []int) {
	return file_couchbase_internal_hooks_v1_hooks_proto_rawDescGZIP(), []int{6}
}

func (m *HookAction) GetAction() isHookAction_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (x *HookAction) GetIf() *HookAction_If {
	if x, ok := x.GetAction().(*HookAction_If_); ok {
		return x.If
	}
	return nil
}

func (x *HookAction) GetCounter() *HookAction_Counter {
	if x, ok := x.GetAction().(*HookAction_Counter_); ok {
		return x.Counter
	}
	return nil
}

func (x *HookAction) GetWaitOnBarrier() *HookAction_WaitOnBarrier {
	if x, ok := x.GetAction().(*HookAction_WaitOnBarrier_); ok {
		return x.WaitOnBarrier
	}
	return nil
}

func (x *HookAction) GetSignalBarrier() *HookAction_SignalBarrier {
	if x, ok := x.GetAction().(*HookAction_SignalBarrier_); ok {
		return x.SignalBarrier
	}
	return nil
}

func (x *HookAction) GetReturnResponse() *HookAction_ReturnResponse {
	if x, ok := x.GetAction().(*HookAction_ReturnResponse_); ok {
		return x.ReturnResponse
	}
	return nil
}

func (x *HookAction) GetReturnError() *HookAction_ReturnError {
	if x, ok := x.GetAction().(*HookAction_ReturnError_); ok {
		return x.ReturnError
	}
	return nil
}

func (x *HookAction) GetExecute() *HookAction_Execute {
	if x, ok := x.GetAction().(*HookAction_Execute_); ok {
		return x.Execute
	}
	return nil
}

type isHookAction_Action interface {
	isHookAction_Action()
}

type HookAction_If_ struct {
	If *HookAction_If `protobuf:"bytes,1,opt,name=if,proto3,oneof"`
}

type HookAction_Counter_ struct {
	Counter *HookAction_Counter `protobuf:"bytes,2,opt,name=counter,proto3,oneof"`
}

type HookAction_WaitOnBarrier_ struct {
	WaitOnBarrier *HookAction_WaitOnBarrier `protobuf:"bytes,3,opt,name=wait_on_barrier,json=waitOnBarrier,proto3,oneof"`
}

type HookAction_SignalBarrier_ struct {
	SignalBarrier *HookAction_SignalBarrier `protobuf:"bytes,4,opt,name=signal_barrier,json=signalBarrier,proto3,oneof"`
}

type HookAction_ReturnResponse_ struct {
	ReturnResponse *HookAction_ReturnResponse `protobuf:"bytes,5,opt,name=return_response,json=returnResponse,proto3,oneof"`
}

type HookAction_ReturnError_ struct {
	ReturnError *HookAction_ReturnError `protobuf:"bytes,6,opt,name=return_error,json=returnError,proto3,oneof"`
}

type HookAction_Execute_ struct {
	Execute *HookAction_Execute `protobuf:"bytes,7,opt,name=execute,proto3,oneof"`
}

func (*HookAction_If_) isHookAction_Action() {}

func (*HookAction_Counter_) isHookAction_Action() {}

func (*HookAction_WaitOnBarrier_) isHookAction_Action() {}

func (*HookAction_SignalBarrier_) isHookAction_Action() {}

func (*HookAction_ReturnResponse_) isHookAction_Action() {}

func (*HookAction_ReturnError_) isHookAction_Action() {}

func (*HookAction_Execute_) isHookAction_Action() {}

type Hook struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description  string        `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	TargetMethod string        `protobuf:"bytes,3,opt,name=target_method,json=targetMethod,proto3" json:"target_method,omitempty"`
	Actions      []*HookAction `protobuf:"bytes,4,rep,name=actions,proto3" json:"actions,omitempty"`
}

func (x *Hook) Reset() {
	*x = Hook{}
	if protoimpl.UnsafeEnabled {
		mi := &file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Hook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hook) ProtoMessage() {}

func (x *Hook) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hook.ProtoReflect.Descriptor instead.
func (*Hook) Descriptor() ([]byte, []int) {
	return file_couchbase_internal_hooks_v1_hooks_proto_rawDescGZIP(), []int{7}
}

func (x *Hook) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Hook) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Hook) GetTargetMethod() string {
	if x != nil {
		return x.TargetMethod
	}
	return ""
}

func (x *Hook) GetActions() []*HookAction {
	if x != nil {
		return x.Actions
	}
	return nil
}

type AddHooksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HooksContextId string  `protobuf:"bytes,1,opt,name=hooks_context_id,json=hooksContextId,proto3" json:"hooks_context_id,omitempty"`
	Hooks          []*Hook `protobuf:"bytes,2,rep,name=hooks,proto3" json:"hooks,omitempty"`
}

func (x *AddHooksRequest) Reset() {
	*x = AddHooksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddHooksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddHooksRequest) ProtoMessage() {}

func (x *AddHooksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddHooksRequest.ProtoReflect.Descriptor instead.
func (*AddHooksRequest) Descriptor() ([]byte, []int) {
	return file_couchbase_internal_hooks_v1_hooks_proto_rawDescGZIP(), []int{8}
}

func (x *AddHooksRequest) GetHooksContextId() string {
	if x != nil {
		return x.HooksContextId
	}
	return ""
}

func (x *AddHooksRequest) GetHooks() []*Hook {
	if x != nil {
		return x.Hooks
	}
	return nil
}

type AddHooksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddHooksResponse) Reset() {
	*x = AddHooksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddHooksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddHooksResponse) ProtoMessage() {}

func (x *AddHooksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddHooksResponse.ProtoReflect.Descriptor instead.
func (*AddHooksResponse) Descriptor() ([]byte, []int) {
	return file_couchbase_internal_hooks_v1_hooks_proto_rawDescGZIP(), []int{9}
}

type WatchBarrierRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HooksContextId string `protobuf:"bytes,1,opt,name=hooks_context_id,json=hooksContextId,proto3" json:"hooks_context_id,omitempty"`
	BarrierId      string `protobuf:"bytes,2,opt,name=barrier_id,json=barrierId,proto3" json:"barrier_id,omitempty"`
}

func (x *WatchBarrierRequest) Reset() {
	*x = WatchBarrierRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchBarrierRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchBarrierRequest) ProtoMessage() {}

func (x *WatchBarrierRequest) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchBarrierRequest.ProtoReflect.Descriptor instead.
func (*WatchBarrierRequest) Descriptor() ([]byte, []int) {
	return file_couchbase_internal_hooks_v1_hooks_proto_rawDescGZIP(), []int{10}
}

func (x *WatchBarrierRequest) GetHooksContextId() string {
	if x != nil {
		return x.HooksContextId
	}
	return ""
}

func (x *WatchBarrierRequest) GetBarrierId() string {
	if x != nil {
		return x.BarrierId
	}
	return ""
}

type WatchBarrierResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WaitId string `protobuf:"bytes,2,opt,name=wait_id,json=waitId,proto3" json:"wait_id,omitempty"`
}

func (x *WatchBarrierResponse) Reset() {
	*x = WatchBarrierResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchBarrierResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchBarrierResponse) ProtoMessage() {}

func (x *WatchBarrierResponse) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchBarrierResponse.ProtoReflect.Descriptor instead.
func (*WatchBarrierResponse) Descriptor() ([]byte, []int) {
	return file_couchbase_internal_hooks_v1_hooks_proto_rawDescGZIP(), []int{11}
}

func (x *WatchBarrierResponse) GetWaitId() string {
	if x != nil {
		return x.WaitId
	}
	return ""
}

type SignalBarrierRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HooksContextId string  `protobuf:"bytes,1,opt,name=hooks_context_id,json=hooksContextId,proto3" json:"hooks_context_id,omitempty"`
	BarrierId      string  `protobuf:"bytes,2,opt,name=barrier_id,json=barrierId,proto3" json:"barrier_id,omitempty"`
	WaitId         *string `protobuf:"bytes,3,opt,name=wait_id,json=waitId,proto3,oneof" json:"wait_id,omitempty"`
}

func (x *SignalBarrierRequest) Reset() {
	*x = SignalBarrierRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalBarrierRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalBarrierRequest) ProtoMessage() {}

func (x *SignalBarrierRequest) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalBarrierRequest.ProtoReflect.Descriptor instead.
func (*SignalBarrierRequest) Descriptor() ([]byte, []int) {
	return file_couchbase_internal_hooks_v1_hooks_proto_rawDescGZIP(), []int{12}
}

func (x *SignalBarrierRequest) GetHooksContextId() string {
	if x != nil {
		return x.HooksContextId
	}
	return ""
}

func (x *SignalBarrierRequest) GetBarrierId() string {
	if x != nil {
		return x.BarrierId
	}
	return ""
}

func (x *SignalBarrierRequest) GetWaitId() string {
	if x != nil && x.WaitId != nil {
		return *x.WaitId
	}
	return ""
}

type SignalBarrierResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SignalBarrierResponse) Reset() {
	*x = SignalBarrierResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalBarrierResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalBarrierResponse) ProtoMessage() {}

func (x *SignalBarrierResponse) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalBarrierResponse.ProtoReflect.Descriptor instead.
func (*SignalBarrierResponse) Descriptor() ([]byte, []int) {
	return file_couchbase_internal_hooks_v1_hooks_proto_rawDescGZIP(), []int{13}
}

type HookAction_If struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cond    []*HookCondition `protobuf:"bytes,1,rep,name=cond,proto3" json:"cond,omitempty"`
	Match   []*HookAction    `protobuf:"bytes,2,rep,name=match,proto3" json:"match,omitempty"`
	NoMatch []*HookAction    `protobuf:"bytes,3,rep,name=no_match,json=noMatch,proto3" json:"no_match,omitempty"`
}

func (x *HookAction_If) Reset() {
	*x = HookAction_If{}
	if protoimpl.UnsafeEnabled {
		mi := &file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HookAction_If) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HookAction_If) ProtoMessage() {}

func (x *HookAction_If) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HookAction_If.ProtoReflect.Descriptor instead.
func (*HookAction_If) Descriptor() ([]byte, []int) {
	return file_couchbase_internal_hooks_v1_hooks_proto_rawDescGZIP(), []int{6, 0}
}

func (x *HookAction_If) GetCond() []*HookCondition {
	if x != nil {
		return x.Cond
	}
	return nil
}

func (x *HookAction_If) GetMatch() []*HookAction {
	if x != nil {
		return x.Match
	}
	return nil
}

func (x *HookAction_If) GetNoMatch() []*HookAction {
	if x != nil {
		return x.NoMatch
	}
	return nil
}

type HookAction_Counter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CounterId string `protobuf:"bytes,1,opt,name=counter_id,json=counterId,proto3" json:"counter_id,omitempty"`
	Delta     int64  `protobuf:"varint,2,opt,name=delta,proto3" json:"delta,omitempty"`
}

func (x *HookAction_Counter) Reset() {
	*x = HookAction_Counter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HookAction_Counter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HookAction_Counter) ProtoMessage() {}

func (x *HookAction_Counter) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HookAction_Counter.ProtoReflect.Descriptor instead.
func (*HookAction_Counter) Descriptor() ([]byte, []int) {
	return file_couchbase_internal_hooks_v1_hooks_proto_rawDescGZIP(), []int{6, 1}
}

func (x *HookAction_Counter) GetCounterId() string {
	if x != nil {
		return x.CounterId
	}
	return ""
}

func (x *HookAction_Counter) GetDelta() int64 {
	if x != nil {
		return x.Delta
	}
	return 0
}

type HookAction_WaitOnBarrier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BarrierId string `protobuf:"bytes,1,opt,name=barrier_id,json=barrierId,proto3" json:"barrier_id,omitempty"`
}

func (x *HookAction_WaitOnBarrier) Reset() {
	*x = HookAction_WaitOnBarrier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HookAction_WaitOnBarrier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HookAction_WaitOnBarrier) ProtoMessage() {}

func (x *HookAction_WaitOnBarrier) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HookAction_WaitOnBarrier.ProtoReflect.Descriptor instead.
func (*HookAction_WaitOnBarrier) Descriptor() ([]byte, []int) {
	return file_couchbase_internal_hooks_v1_hooks_proto_rawDescGZIP(), []int{6, 2}
}

func (x *HookAction_WaitOnBarrier) GetBarrierId() string {
	if x != nil {
		return x.BarrierId
	}
	return ""
}

type HookAction_SignalBarrier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BarrierId string `protobuf:"bytes,1,opt,name=barrier_id,json=barrierId,proto3" json:"barrier_id,omitempty"`
	SignalAll bool   `protobuf:"varint,2,opt,name=signal_all,json=signalAll,proto3" json:"signal_all,omitempty"`
}

func (x *HookAction_SignalBarrier) Reset() {
	*x = HookAction_SignalBarrier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HookAction_SignalBarrier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HookAction_SignalBarrier) ProtoMessage() {}

func (x *HookAction_SignalBarrier) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HookAction_SignalBarrier.ProtoReflect.Descriptor instead.
func (*HookAction_SignalBarrier) Descriptor() ([]byte, []int) {
	return file_couchbase_internal_hooks_v1_hooks_proto_rawDescGZIP(), []int{6, 3}
}

func (x *HookAction_SignalBarrier) GetBarrierId() string {
	if x != nil {
		return x.BarrierId
	}
	return ""
}

func (x *HookAction_SignalBarrier) GetSignalAll() bool {
	if x != nil {
		return x.SignalAll
	}
	return false
}

type HookAction_ReturnResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *anypb.Any `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *HookAction_ReturnResponse) Reset() {
	*x = HookAction_ReturnResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HookAction_ReturnResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HookAction_ReturnResponse) ProtoMessage() {}

func (x *HookAction_ReturnResponse) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HookAction_ReturnResponse.ProtoReflect.Descriptor instead.
func (*HookAction_ReturnResponse) Descriptor() ([]byte, []int) {
	return file_couchbase_internal_hooks_v1_hooks_proto_rawDescGZIP(), []int{6, 4}
}

func (x *HookAction_ReturnResponse) GetValue() *anypb.Any {
	if x != nil {
		return x.Value
	}
	return nil
}

type HookAction_ReturnError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32        `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string       `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Details []*anypb.Any `protobuf:"bytes,3,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *HookAction_ReturnError) Reset() {
	*x = HookAction_ReturnError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HookAction_ReturnError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HookAction_ReturnError) ProtoMessage() {}

func (x *HookAction_ReturnError) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HookAction_ReturnError.ProtoReflect.Descriptor instead.
func (*HookAction_ReturnError) Descriptor() ([]byte, []int) {
	return file_couchbase_internal_hooks_v1_hooks_proto_rawDescGZIP(), []int{6, 5}
}

func (x *HookAction_ReturnError) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *HookAction_ReturnError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *HookAction_ReturnError) GetDetails() []*anypb.Any {
	if x != nil {
		return x.Details
	}
	return nil
}

type HookAction_Execute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HookAction_Execute) Reset() {
	*x = HookAction_Execute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HookAction_Execute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HookAction_Execute) ProtoMessage() {}

func (x *HookAction_Execute) ProtoReflect() protoreflect.Message {
	mi := &file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HookAction_Execute.ProtoReflect.Descriptor instead.
func (*HookAction_Execute) Descriptor() ([]byte, []int) {
	return file_couchbase_internal_hooks_v1_hooks_proto_rawDescGZIP(), []int{6, 6}
}

var File_couchbase_internal_hooks_v1_hooks_proto protoreflect.FileDescriptor

var file_couchbase_internal_hooks_v1_hooks_proto_rawDesc = []byte{
	0x0a, 0x27, 0x63, 0x6f, 0x75, 0x63, 0x68, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x68, 0x6f,
	0x6f, 0x6b, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x63, 0x6f, 0x75, 0x63, 0x68,
	0x62, 0x61, 0x73, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x68, 0x6f,
	0x6f, 0x6b, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x2b, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x73,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1c,
	0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x73, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2c, 0x0a, 0x1a,
	0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x48, 0x6f, 0x6f, 0x6b, 0x73, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1d, 0x0a, 0x1b, 0x44, 0x65,
	0x73, 0x74, 0x72, 0x6f, 0x79, 0x48, 0x6f, 0x6f, 0x6b, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x82, 0x01, 0x0a, 0x08, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x65, 0x66, 0x12, 0x25, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x25, 0x0a,
	0x0d, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x1f, 0x0a, 0x0a, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x09, 0x6a, 0x73, 0x6f, 0x6e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xc8,
	0x01, 0x0a, 0x0d, 0x48, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x39, 0x0a, 0x04, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x63, 0x6f, 0x75, 0x63, 0x68, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x2e, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x65, 0x66, 0x52, 0x04, 0x6c, 0x65, 0x66, 0x74, 0x12, 0x3f, 0x0a, 0x02, 0x6f,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x63, 0x6f, 0x75, 0x63, 0x68, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x68, 0x6f, 0x6f,
	0x6b, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x69, 0x73, 0x6f, 0x6e,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x02, 0x6f, 0x70, 0x12, 0x3b, 0x0a, 0x05,
	0x72, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f,
	0x75, 0x63, 0x68, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x2e, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x65, 0x66, 0x52, 0x05, 0x72, 0x69, 0x67, 0x68, 0x74, 0x22, 0xab, 0x09, 0x0a, 0x0a, 0x48, 0x6f,
	0x6f, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x02, 0x69, 0x66, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x75, 0x63, 0x68, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x48, 0x6f, 0x6f, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x66,
	0x48, 0x00, 0x52, 0x02, 0x69, 0x66, 0x12, 0x4b, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x6f, 0x75, 0x63, 0x68, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x68, 0x6f, 0x6f,
	0x6b, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x6f, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x12, 0x5f, 0x0a, 0x0f, 0x77, 0x61, 0x69, 0x74, 0x5f, 0x6f, 0x6e, 0x5f, 0x62,
	0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x63,
	0x6f, 0x75, 0x63, 0x68, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x2e, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x6f, 0x6b, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x57, 0x61, 0x69, 0x74, 0x4f, 0x6e, 0x42, 0x61, 0x72, 0x72,
	0x69, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0d, 0x77, 0x61, 0x69, 0x74, 0x4f, 0x6e, 0x42, 0x61, 0x72,
	0x72, 0x69, 0x65, 0x72, 0x12, 0x5e, 0x0a, 0x0e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x62,
	0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x63,
	0x6f, 0x75, 0x63, 0x68, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x2e, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x6f, 0x6b, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x42, 0x61, 0x72, 0x72,
	0x69, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x42, 0x61, 0x72,
	0x72, 0x69, 0x65, 0x72, 0x12, 0x61, 0x0a, 0x0f, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e,
	0x63, 0x6f, 0x75, 0x63, 0x68, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x2e, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x6f, 0x6b,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x0c, 0x72, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e,
	0x63, 0x6f, 0x75, 0x63, 0x68, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x2e, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x6f, 0x6b,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x48, 0x00, 0x52, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x4b, 0x0a, 0x07, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x6f, 0x75, 0x63, 0x68, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x48, 0x6f, 0x6f, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x65, 0x48, 0x00, 0x52, 0x07, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x1a, 0xc7,
	0x01, 0x0a, 0x02, 0x49, 0x66, 0x12, 0x3e, 0x0a, 0x04, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x75, 0x63, 0x68, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x48, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x04, 0x63, 0x6f, 0x6e, 0x64, 0x12, 0x3d, 0x0a, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x75, 0x63, 0x68, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x48, 0x6f, 0x6f, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x12, 0x42, 0x0a, 0x08, 0x6e, 0x6f, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x75, 0x63, 0x68, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x68, 0x6f, 0x6f, 0x6b,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x6f, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x07, 0x6e, 0x6f, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x1a, 0x3e, 0x0a, 0x07, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x1a, 0x2e, 0x0a, 0x0d, 0x57, 0x61, 0x69, 0x74,
	0x4f, 0x6e, 0x42, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x72,
	0x72, 0x69, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62,
	0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x4d, 0x0a, 0x0d, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x42, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x72,
	0x72, 0x69, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62,
	0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x5f, 0x61, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x41, 0x6c, 0x6c, 0x1a, 0x3c, 0x0a, 0x0e, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x6b, 0x0a, 0x0b, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x1a, 0x09, 0x0a, 0x07, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x42, 0x08, 0x0a,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa4, 0x01, 0x0a, 0x04, 0x48, 0x6f, 0x6f, 0x6b,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x41, 0x0a, 0x07, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63,
	0x6f, 0x75, 0x63, 0x68, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x2e, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x6f, 0x6b, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x74,
	0x0a, 0x0f, 0x41, 0x64, 0x64, 0x48, 0x6f, 0x6f, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x28, 0x0a, 0x10, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x68, 0x6f, 0x6f,
	0x6b, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x05, 0x68,
	0x6f, 0x6f, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x75,
	0x63, 0x68, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e,
	0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x05, 0x68,
	0x6f, 0x6f, 0x6b, 0x73, 0x22, 0x12, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x48, 0x6f, 0x6f, 0x6b, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5e, 0x0a, 0x13, 0x57, 0x61, 0x74, 0x63,
	0x68, 0x42, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x28, 0x0a, 0x10, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x68, 0x6f, 0x6f, 0x6b, 0x73,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x72,
	0x72, 0x69, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62,
	0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x49, 0x64, 0x22, 0x2f, 0x0a, 0x14, 0x57, 0x61, 0x74, 0x63,
	0x68, 0x42, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x77, 0x61, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x77, 0x61, 0x69, 0x74, 0x49, 0x64, 0x22, 0x89, 0x01, 0x0a, 0x14, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x42, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x68, 0x6f,
	0x6f, 0x6b, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x62, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x62, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x07, 0x77,
	0x61, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06,
	0x77, 0x61, 0x69, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x77, 0x61,
	0x69, 0x74, 0x5f, 0x69, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x42,
	0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0xfa,
	0x01, 0x0a, 0x12, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x69, 0x73, 0x6f, 0x6e, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x19, 0x43, 0x4f, 0x4d, 0x50, 0x41, 0x52, 0x49,
	0x53, 0x4f, 0x4e, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x45, 0x51, 0x55,
	0x41, 0x4c, 0x10, 0x00, 0x12, 0x21, 0x0a, 0x1d, 0x43, 0x4f, 0x4d, 0x50, 0x41, 0x52, 0x49, 0x53,
	0x4f, 0x4e, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x4e, 0x4f, 0x54, 0x5f,
	0x45, 0x51, 0x55, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x24, 0x0a, 0x20, 0x43, 0x4f, 0x4d, 0x50, 0x41,
	0x52, 0x49, 0x53, 0x4f, 0x4e, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x47,
	0x52, 0x45, 0x41, 0x54, 0x45, 0x52, 0x5f, 0x54, 0x48, 0x41, 0x4e, 0x10, 0x02, 0x12, 0x2d, 0x0a,
	0x29, 0x43, 0x4f, 0x4d, 0x50, 0x41, 0x52, 0x49, 0x53, 0x4f, 0x4e, 0x5f, 0x4f, 0x50, 0x45, 0x52,
	0x41, 0x54, 0x4f, 0x52, 0x5f, 0x47, 0x52, 0x45, 0x41, 0x54, 0x45, 0x52, 0x5f, 0x54, 0x48, 0x41,
	0x4e, 0x5f, 0x4f, 0x52, 0x5f, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x10, 0x03, 0x12, 0x21, 0x0a, 0x1d,
	0x43, 0x4f, 0x4d, 0x50, 0x41, 0x52, 0x49, 0x53, 0x4f, 0x4e, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41,
	0x54, 0x4f, 0x52, 0x5f, 0x4c, 0x45, 0x53, 0x53, 0x5f, 0x54, 0x48, 0x41, 0x4e, 0x10, 0x04, 0x12,
	0x2a, 0x0a, 0x26, 0x43, 0x4f, 0x4d, 0x50, 0x41, 0x52, 0x49, 0x53, 0x4f, 0x4e, 0x5f, 0x4f, 0x50,
	0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x4c, 0x45, 0x53, 0x53, 0x5f, 0x54, 0x48, 0x41, 0x4e,
	0x5f, 0x4f, 0x52, 0x5f, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x10, 0x05, 0x32, 0x83, 0x05, 0x0a, 0x0c,
	0x48, 0x6f, 0x6f, 0x6b, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x87, 0x01, 0x0a,
	0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x73, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x12, 0x36, 0x2e, 0x63, 0x6f, 0x75, 0x63, 0x68, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x73, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x63, 0x6f,
	0x75, 0x63, 0x68, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x2e, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x48, 0x6f, 0x6f, 0x6b, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8a, 0x01, 0x0a, 0x13, 0x44, 0x65, 0x73, 0x74, 0x72,
	0x6f, 0x79, 0x48, 0x6f, 0x6f, 0x6b, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x37,
	0x2e, 0x63, 0x6f, 0x75, 0x63, 0x68, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x2e, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x73,
	0x74, 0x72, 0x6f, 0x79, 0x48, 0x6f, 0x6f, 0x6b, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x63, 0x6f, 0x75, 0x63, 0x68, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x68, 0x6f, 0x6f,
	0x6b, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x48, 0x6f, 0x6f,
	0x6b, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x48, 0x6f, 0x6f, 0x6b, 0x73, 0x12,
	0x2c, 0x2e, 0x63, 0x6f, 0x75, 0x63, 0x68, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64,
	0x64, 0x48, 0x6f, 0x6f, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e,
	0x63, 0x6f, 0x75, 0x63, 0x68, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x2e, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x48,
	0x6f, 0x6f, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x77,
	0x0a, 0x0c, 0x57, 0x61, 0x74, 0x63, 0x68, 0x42, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x12, 0x30,
	0x2e, 0x63, 0x6f, 0x75, 0x63, 0x68, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x2e, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74,
	0x63, 0x68, 0x42, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x31, 0x2e, 0x63, 0x6f, 0x75, 0x63, 0x68, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x57,
	0x61, 0x74, 0x63, 0x68, 0x42, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x78, 0x0a, 0x0d, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x42, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x12, 0x31, 0x2e, 0x63, 0x6f, 0x75, 0x63, 0x68,
	0x62, 0x61, 0x73, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x68, 0x6f,
	0x6f, 0x6b, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x42, 0x61, 0x72,
	0x72, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x63, 0x6f,
	0x75, 0x63, 0x68, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x2e, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x42, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0xf8, 0x01, 0x0a, 0x33, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x75, 0x63, 0x68, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x2e, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x50, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x75, 0x63, 0x68, 0x62, 0x61, 0x73,
	0x65, 0x2f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72,
	0x2f, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x5f, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x5f, 0x76, 0x31, 0x3b, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x5f, 0x76, 0x31, 0xca, 0x02, 0x32,
	0x43, 0x6f, 0x75, 0x63, 0x68, 0x62, 0x61, 0x73, 0x65, 0x5c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x5c, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64,
	0x5c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5c, 0x48, 0x6f, 0x6f, 0x6b, 0x73, 0x5c,
	0x56, 0x31, 0xea, 0x02, 0x37, 0x43, 0x6f, 0x75, 0x63, 0x68, 0x62, 0x61, 0x73, 0x65, 0x3a, 0x3a,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x3a, 0x3a, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x3a, 0x3a, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x3a, 0x3a, 0x48, 0x6f, 0x6f, 0x6b, 0x73, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_couchbase_internal_hooks_v1_hooks_proto_rawDescOnce sync.Once
	file_couchbase_internal_hooks_v1_hooks_proto_rawDescData = file_couchbase_internal_hooks_v1_hooks_proto_rawDesc
)

func file_couchbase_internal_hooks_v1_hooks_proto_rawDescGZIP() []byte {
	file_couchbase_internal_hooks_v1_hooks_proto_rawDescOnce.Do(func() {
		file_couchbase_internal_hooks_v1_hooks_proto_rawDescData = protoimpl.X.CompressGZIP(file_couchbase_internal_hooks_v1_hooks_proto_rawDescData)
	})
	return file_couchbase_internal_hooks_v1_hooks_proto_rawDescData
}

var file_couchbase_internal_hooks_v1_hooks_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_couchbase_internal_hooks_v1_hooks_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_couchbase_internal_hooks_v1_hooks_proto_goTypes = []interface{}{
	(ComparisonOperator)(0),             // 0: couchbase.internal.hooks.v1.ComparisonOperator
	(*CreateHooksContextRequest)(nil),   // 1: couchbase.internal.hooks.v1.CreateHooksContextRequest
	(*CreateHooksContextResponse)(nil),  // 2: couchbase.internal.hooks.v1.CreateHooksContextResponse
	(*DestroyHooksContextRequest)(nil),  // 3: couchbase.internal.hooks.v1.DestroyHooksContextRequest
	(*DestroyHooksContextResponse)(nil), // 4: couchbase.internal.hooks.v1.DestroyHooksContextResponse
	(*ValueRef)(nil),                    // 5: couchbase.internal.hooks.v1.ValueRef
	(*HookCondition)(nil),               // 6: couchbase.internal.hooks.v1.HookCondition
	(*HookAction)(nil),                  // 7: couchbase.internal.hooks.v1.HookAction
	(*Hook)(nil),                        // 8: couchbase.internal.hooks.v1.Hook
	(*AddHooksRequest)(nil),             // 9: couchbase.internal.hooks.v1.AddHooksRequest
	(*AddHooksResponse)(nil),            // 10: couchbase.internal.hooks.v1.AddHooksResponse
	(*WatchBarrierRequest)(nil),         // 11: couchbase.internal.hooks.v1.WatchBarrierRequest
	(*WatchBarrierResponse)(nil),        // 12: couchbase.internal.hooks.v1.WatchBarrierResponse
	(*SignalBarrierRequest)(nil),        // 13: couchbase.internal.hooks.v1.SignalBarrierRequest
	(*SignalBarrierResponse)(nil),       // 14: couchbase.internal.hooks.v1.SignalBarrierResponse
	(*HookAction_If)(nil),               // 15: couchbase.internal.hooks.v1.HookAction.If
	(*HookAction_Counter)(nil),          // 16: couchbase.internal.hooks.v1.HookAction.Counter
	(*HookAction_WaitOnBarrier)(nil),    // 17: couchbase.internal.hooks.v1.HookAction.WaitOnBarrier
	(*HookAction_SignalBarrier)(nil),    // 18: couchbase.internal.hooks.v1.HookAction.SignalBarrier
	(*HookAction_ReturnResponse)(nil),   // 19: couchbase.internal.hooks.v1.HookAction.ReturnResponse
	(*HookAction_ReturnError)(nil),      // 20: couchbase.internal.hooks.v1.HookAction.ReturnError
	(*HookAction_Execute)(nil),          // 21: couchbase.internal.hooks.v1.HookAction.Execute
	(*anypb.Any)(nil),                   // 22: google.protobuf.Any
}
var file_couchbase_internal_hooks_v1_hooks_proto_depIdxs = []int32{
	5,  // 0: couchbase.internal.hooks.v1.HookCondition.left:type_name -> couchbase.internal.hooks.v1.ValueRef
	0,  // 1: couchbase.internal.hooks.v1.HookCondition.op:type_name -> couchbase.internal.hooks.v1.ComparisonOperator
	5,  // 2: couchbase.internal.hooks.v1.HookCondition.right:type_name -> couchbase.internal.hooks.v1.ValueRef
	15, // 3: couchbase.internal.hooks.v1.HookAction.if:type_name -> couchbase.internal.hooks.v1.HookAction.If
	16, // 4: couchbase.internal.hooks.v1.HookAction.counter:type_name -> couchbase.internal.hooks.v1.HookAction.Counter
	17, // 5: couchbase.internal.hooks.v1.HookAction.wait_on_barrier:type_name -> couchbase.internal.hooks.v1.HookAction.WaitOnBarrier
	18, // 6: couchbase.internal.hooks.v1.HookAction.signal_barrier:type_name -> couchbase.internal.hooks.v1.HookAction.SignalBarrier
	19, // 7: couchbase.internal.hooks.v1.HookAction.return_response:type_name -> couchbase.internal.hooks.v1.HookAction.ReturnResponse
	20, // 8: couchbase.internal.hooks.v1.HookAction.return_error:type_name -> couchbase.internal.hooks.v1.HookAction.ReturnError
	21, // 9: couchbase.internal.hooks.v1.HookAction.execute:type_name -> couchbase.internal.hooks.v1.HookAction.Execute
	7,  // 10: couchbase.internal.hooks.v1.Hook.actions:type_name -> couchbase.internal.hooks.v1.HookAction
	8,  // 11: couchbase.internal.hooks.v1.AddHooksRequest.hooks:type_name -> couchbase.internal.hooks.v1.Hook
	6,  // 12: couchbase.internal.hooks.v1.HookAction.If.cond:type_name -> couchbase.internal.hooks.v1.HookCondition
	7,  // 13: couchbase.internal.hooks.v1.HookAction.If.match:type_name -> couchbase.internal.hooks.v1.HookAction
	7,  // 14: couchbase.internal.hooks.v1.HookAction.If.no_match:type_name -> couchbase.internal.hooks.v1.HookAction
	22, // 15: couchbase.internal.hooks.v1.HookAction.ReturnResponse.value:type_name -> google.protobuf.Any
	22, // 16: couchbase.internal.hooks.v1.HookAction.ReturnError.details:type_name -> google.protobuf.Any
	1,  // 17: couchbase.internal.hooks.v1.HooksService.CreateHooksContext:input_type -> couchbase.internal.hooks.v1.CreateHooksContextRequest
	3,  // 18: couchbase.internal.hooks.v1.HooksService.DestroyHooksContext:input_type -> couchbase.internal.hooks.v1.DestroyHooksContextRequest
	9,  // 19: couchbase.internal.hooks.v1.HooksService.AddHooks:input_type -> couchbase.internal.hooks.v1.AddHooksRequest
	11, // 20: couchbase.internal.hooks.v1.HooksService.WatchBarrier:input_type -> couchbase.internal.hooks.v1.WatchBarrierRequest
	13, // 21: couchbase.internal.hooks.v1.HooksService.SignalBarrier:input_type -> couchbase.internal.hooks.v1.SignalBarrierRequest
	2,  // 22: couchbase.internal.hooks.v1.HooksService.CreateHooksContext:output_type -> couchbase.internal.hooks.v1.CreateHooksContextResponse
	4,  // 23: couchbase.internal.hooks.v1.HooksService.DestroyHooksContext:output_type -> couchbase.internal.hooks.v1.DestroyHooksContextResponse
	10, // 24: couchbase.internal.hooks.v1.HooksService.AddHooks:output_type -> couchbase.internal.hooks.v1.AddHooksResponse
	12, // 25: couchbase.internal.hooks.v1.HooksService.WatchBarrier:output_type -> couchbase.internal.hooks.v1.WatchBarrierResponse
	14, // 26: couchbase.internal.hooks.v1.HooksService.SignalBarrier:output_type -> couchbase.internal.hooks.v1.SignalBarrierResponse
	22, // [22:27] is the sub-list for method output_type
	17, // [17:22] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_couchbase_internal_hooks_v1_hooks_proto_init() }
func file_couchbase_internal_hooks_v1_hooks_proto_init() {
	if File_couchbase_internal_hooks_v1_hooks_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateHooksContextRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateHooksContextResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DestroyHooksContextRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DestroyHooksContextResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValueRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HookCondition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HookAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Hook); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddHooksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddHooksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchBarrierRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchBarrierResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalBarrierRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalBarrierResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HookAction_If); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HookAction_Counter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HookAction_WaitOnBarrier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HookAction_SignalBarrier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HookAction_ReturnResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HookAction_ReturnError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HookAction_Execute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*ValueRef_RequestField)(nil),
		(*ValueRef_CounterValue)(nil),
		(*ValueRef_JsonValue)(nil),
	}
	file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*HookAction_If_)(nil),
		(*HookAction_Counter_)(nil),
		(*HookAction_WaitOnBarrier_)(nil),
		(*HookAction_SignalBarrier_)(nil),
		(*HookAction_ReturnResponse_)(nil),
		(*HookAction_ReturnError_)(nil),
		(*HookAction_Execute_)(nil),
	}
	file_couchbase_internal_hooks_v1_hooks_proto_msgTypes[12].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_couchbase_internal_hooks_v1_hooks_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_couchbase_internal_hooks_v1_hooks_proto_goTypes,
		DependencyIndexes: file_couchbase_internal_hooks_v1_hooks_proto_depIdxs,
		EnumInfos:         file_couchbase_internal_hooks_v1_hooks_proto_enumTypes,
		MessageInfos:      file_couchbase_internal_hooks_v1_hooks_proto_msgTypes,
	}.Build()
	File_couchbase_internal_hooks_v1_hooks_proto = out.File
	file_couchbase_internal_hooks_v1_hooks_proto_rawDesc = nil
	file_couchbase_internal_hooks_v1_hooks_proto_goTypes = nil
	file_couchbase_internal_hooks_v1_hooks_proto_depIdxs = nil
}
